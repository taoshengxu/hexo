<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>DOS-Ubuntu命令集合</title>
      <link href="/hexo/2029/04/04/2029-08-28-UbuntuCommand/"/>
      <url>/hexo/2029/04/04/2029-08-28-UbuntuCommand/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="DOS"><a href="#DOS" class="headerlink" title="DOS"></a>DOS</h1><ul><li>cd /   [root]</li><li>cd ~  [home or root/user]</li><li>cd . [Current]</li><li>cd .. [Father]</li><li>cd - [previous]</li><li>pwd [current]</li><li>d: +Enter [D:/]</li></ul><h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><h3 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h3><ul><li><p>sudo su 进入root</p></li><li><p>exit <strong>or</strong> logout  <strong>or</strong> ctrl D 退出root</p></li><li><p>修改root密码 $ sudo passwd </p></li><li><p>修改用户密码 $ sudo passwd username</p></li><li><p>修改主机名： $ sudo gedit /etc/hostname 和 $ sudo gedit /etc/hosts</p></li></ul><ul><li><p>&amp; 加在一个命令之后可以把这个命令放到后台运行</p></li><li><p>jobs -l 查看后台运行的命令</p></li><li><p>fg jobnumber(PID) 将后台命令调到前台</p></li><li><p>bg jobnumber(PID) 重启后台暂停的命令</p></li><li><p>kill %num 杀死</p></li><li><p>kill -9 PID 强制杀死进程</p></li><li><p>ps 查看进程号PID</p></li><li><p>nohup 始终执行</p></li><li><p>ps -aux | grep xxx 查找后台进程</p></li><li><p>ps -ef | grep xxx 查找数后台进程数</p></li><li><p>wc -l  用于统计一个文件中的行数、字数、字节数或字符数</p></li></ul><ul><li><p><strong>Ctrl+Z</strong> 可以把一个前台执行的命令放到后台</p></li><li><p><strong>Ctrl+c</strong>  在命令行下起着终止当前执行程序的作用，</p></li><li><p><strong>Ctrl+d</strong> 相当于exit命令，退出当前shell</p></li><li><p><strong>Ctrl+s</strong>挂起当前shell（保护作用很明显哦）</p></li><li><p><strong>Ctrl+q</strong> 解冻挂起的shell再不行就重新连接打开一个终端，reboot linux 或 kill 相关进程。</p></li></ul><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><ul><li>ls 列出所有文件</li><li>ls -lh 列出目录的文件的详细信息</li><li>ls -ld  文件目录  #查看文件<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">ls</span> <span class="bullet">-l</span></span><br><span class="line"><span class="comment">#drwxr-xr-x 2 nsf users 1024 12-10 17:37 下载文件备份 </span></span><br><span class="line"><span class="comment">#文件属性 连接数 文件拥有者 所属群组 文件大小 文件修改时间 文件名</span></span><br><span class="line"><span class="string">r</span> <span class="string">是可读</span> <span class="string">w</span> <span class="string">可写</span>  <span class="string">x</span> <span class="string">可执行，</span></span><br><span class="line"><span class="string">其中文件属性分为四段，----</span> <span class="meta">---</span> <span class="meta">---</span> <span class="number">10</span><span class="string">个位置</span> </span><br><span class="line"><span class="string">d</span> 　 <span class="string">rwx</span> 　 <span class="string">r-x</span>　 <span class="string">r-x</span> </span><br><span class="line"><span class="string">第一段字符指定了文件类型。如果是d，表示是一个目录。在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。</span></span><br><span class="line"><span class="string">第二段是文件拥有者的属性，</span> </span><br><span class="line"><span class="string">第三段是文件所属群组的属性，</span> </span><br><span class="line"><span class="string">第四段是对于其它用户的属性，</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="ubuntu创建、删除文件及文件夹，强制清空回收站方法"><a href="#ubuntu创建、删除文件及文件夹，强制清空回收站方法" class="headerlink" title="ubuntu创建、删除文件及文件夹，强制清空回收站方法"></a>ubuntu创建、删除文件及文件夹，强制清空回收站方法</h3><ul><li>mkdir 目录名       创建一个目录</li><li>rmdir 空目录名     删除一个空目录</li><li>rm 文件名 文件名   删除一个文件或多个文件</li><li>rm –rf 非空目录名  删除一个非空目录下的一切</li><li><p>touch 文件名       创建一个空文件</p></li><li><p>mv file1 file2     将文件 file1，更改文件名为 file2。</p></li><li>mv file1 dir1      将文件 file1，移到目录 dir1下，文件名仍为 file1。</li><li>mv dir1 dir2       若目录 dir2 存在，则将目录 dir1，及其所有文件和子目录，移到目录 dir2 下，新目录名称为 dir1。若目录 dir2 不存在，则将dir1，及其所有文件和子目录，更改为目录 dir2。</li></ul><h3 id="开关机"><a href="#开关机" class="headerlink" title="开关机"></a>开关机</h3><p>重启</p><ul><li>reboot</li><li>shutdown -r now 立刻重启(root用户使用)</li><li>shutdown -r 10 过10分钟自动重启(root用户使用)</li><li>shutdown -r 20:35 在时间为20:35时候重启(root用户使用)</li><li>如果是通过shutdown命令设置重启的话，可以用shutdown -c命令取消重启</li></ul><p>关机</p><ul><li>halt   立刻关机</li><li>poweroff 立刻关机</li><li>shutdown -h now 立刻关机(root用户使用)</li><li>shutdown -h 10 10分钟后自动关机</li></ul><h3 id="卸载软件"><a href="#卸载软件" class="headerlink" title="卸载软件"></a>卸载软件</h3><ul><li>[dpkg —list]查找软件<br>[sudo apt-get remove <programname>] 卸载</programname></li></ul><h3 id="查看CPU"><a href="#查看CPU" class="headerlink" title="查看CPU"></a>查看CPU</h3><ul><li>top命令 可以再按1</li><li>sudo apt-get install htop<br>htop #分辨系统进程和用户进程及其作用, 非常管用</li></ul><h3 id="创建新用户和用户组"><a href="#创建新用户和用户组" class="headerlink" title="创建新用户和用户组"></a>创建新用户和用户组</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#创建新用户有两条指令</span></span></span><br><span class="line">（1） useradd -g new_user usergroup_name #新建用户同时增加工作组  这个命令新建的用户没有用户目录</span><br><span class="line">（2） adduser new_user 这个命令新建的用户具有完全的功能</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#创建新的用户组 </span></span></span><br><span class="line">groupadd  usergroup_name </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 将已经存在的用户user_name 添加到用户组</span></span></span><br><span class="line">usermod -aG usergroup_name user_name </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看所属的用户组</span></span></span><br><span class="line">groups user_name</span><br></pre></td></tr></table></figure><h3 id="修改文件权限和所有者"><a href="#修改文件权限和所有者" class="headerlink" title="修改文件权限和所有者"></a>修改文件权限和所有者</h3><ul><li><p>修改文件权限</p><p>sudo chmod -[读,写,执行]×××（所有者）×××（组用户）×××（其他用户）</p><p>sudo chmod -R 700 Document/变更权限(-R参数是递归)</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> sudo chmod <span class="number">600</span> ××× （只有所有者有读和写的权限）</span></span><br><span class="line"><span class="ruby">- sudo chmod <span class="number">644</span> ××× （所有者有读和写的权限，组用户只有读的权限）</span></span><br><span class="line"><span class="ruby">- sudo chmod <span class="number">700</span> ××× （只有所有者有读和写以及执行的权限）</span></span><br><span class="line"><span class="ruby">- sudo chmod <span class="number">666</span> ××× （每个人都有读和写的权限）</span></span><br><span class="line"><span class="ruby">- sudo chmod <span class="number">777</span> ××× （每个人都有读和写以及执行的权限）</span></span><br><span class="line"><span class="ruby">- chmod +x test.py     <span class="comment"># 脚本文件添加可执行权限</span></span></span><br><span class="line"><span class="ruby">- chmod -x test.py     <span class="comment"># 脚本文件去除可执行权限</span></span></span><br></pre></td></tr></table></figure></li><li><p>修改文件所有者</p><p>​       命令：chown 用户 目录或文件名<br>​       例如：chown qq /home/qq  (把home目录下的qq目录的拥有者改为qq用户) </p><p>​       sudo chown -R username:root /data/abc  ##将所有者为root用户的abc(文件或者目录)修改为username用户</p></li><li><p>修改文件或目录所属的组：</p><pre><code>   命令：chgrp 组 目录或文件名   例如：chgrp qq /home/qq  (把home目录下的qq目录的所属组改为qq组)</code></pre><p>​      sudo chmod 775 /srv/shiny-server/xxxx/</p><p>​      sudo chown :shiny /srv/shiny-server/xxxx/ 修改该目录为 shiny用户组</p></li></ul><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li><p><strong>sudo mount -t ext4 /dev/sdb /data 挂载到data</strong></p></li><li><p>sudo umount /dev/sdb 卸载</p></li><li><p>mkdir -p 递归创建目录</p></li><li><p>cp 复制</p></li><li><p>rmdir 删除空目录  </p></li><li><p>df -lh 查看磁盘空间 </p></li><li><p>df -kh 查看磁盘挂载</p></li><li><p>df -m 以M为单位显示磁盘使用量和占用率</p></li><li><p>df -k 以KB为单位显示磁盘使用量和占用率</p></li><li><p>du-ck /dir 列出目录下所有文件或目录占用的大小，以KB作为计量单位</p></li><li><p>sudo fdisk -lu 显示硬盘及所属分区情况</p></li><li><p>sudo fdisk /dev/sdb 对sbd盘分区<br><em>m(help)-n(增加一个新分区)-e(扩展分区)-1-4(分几个区)-…-p(显示分区表)-w(保存分区表)</em></p></li><li><p>sudo blkid 查看所有分区的UUID </p><ul><li>sudo blkid /dev/sda5 查看指定盘的UUID</li></ul></li><li><p>(谨慎复制)sudo mkfs -t ext4 /dev/sdb 对sdb盘格式化为ext4格式</p></li><li><p>自动挂载 sudo gedit /etc/fstab  在这个文件夹下修改</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=<span class="number">09d387b1</span>-<span class="number">8438</span>-41db-<span class="number">9b88</span>-f3b145cc1674 /data2            ext4    defaults              <span class="number">0</span>       <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>ubuntu 加载新硬盘教程<a href="https://taoshengxu.github.io/DocumentGit/pdf/Ubuntu环境下挂载新硬盘.pdf">pdf</a></p></li><li><p>ubuntu<a href="https://taoshengxu.github.io/DocumentGit/pdf/Ubuntu命令手册.pdf">命令手册</a> </p></li></ul><h3 id="ubuntu上查看cpu、内存、硬盘等参数"><a href="#ubuntu上查看cpu、内存、硬盘等参数" class="headerlink" title="ubuntu上查看cpu、内存、硬盘等参数"></a>ubuntu上查看cpu、内存、硬盘等参数</h3><ul><li>CPU：<br> 型号：<code>grep &quot;model name&quot; /proc/cpuinfo |awk -F &#39;:&#39; &#39;{print $NF}&#39;</code><br> 数量：<code>lscpu |grep &quot;CPU socket&quot; |awk &#39;{print $NF}&#39;</code> 或 <code>lscpu |grep &quot;Socket&quot; |awk &#39;{print $NF}&#39;</code><br> 每个CPU的核数：<code>lscpu |grep &quot;Core(s) per socket&quot; |awk &#39;{print $NF}&#39;</code></li><li>内存：<br> 卡槽数量：<code>sudo dmidecode -t memory |grep &quot;Number Of Devices&quot; |awk &#39;{print $NF}&#39;</code>或<code>sudo dmidecode -t memory |grep &quot;Associated Memory Slots&quot; |awk &#39;{print $NF}&#39;</code><br> 内存数量：<code>sudo dmidecode -t memory |grep -A16 &quot;Memory Device$&quot; |grep &#39;Size:.*MB&#39; |wc -l</code><br> 内存支持类型：<code>sudo dmidecode -t memory |grep -A16 &quot;Memory Device$&quot; |grep &quot;Type:&quot;</code><br> 每个内存频率：<code>sudo dmidecode -t memory |grep -A16 &quot;Memory Device$&quot; |grep &quot;Speed:&quot;</code><br> 每个内存大小：<code>sudo dmidecode -t memory |grep -A16 &quot;Memory Device$&quot; |grep &quot;Size:&quot;</code><br> 释放缓冲区内存：<code>echo 3 &gt; /proc/sys/vm/drop_caches</code></li><li><p>硬盘：<br> 硬盘数量、大小：<code>sudo fdisk -l |grep &quot;Disk /dev/sd&quot;</code><br> 硬盘型号：<code>sudo hdparm -i /dev/sda |grep &quot;Model&quot;</code></p></li><li><p>遇到根目录占满的情况：查看磁盘文件系统与目录的占用情况：<code>df -h</code> 查看最近30天内出现的占用大小超10000 blocks的文件：<code>find / -xdev -type f -mtime -30 -size +10000</code><br>（作者：信仰与初衷<a href="https://www.jianshu.com/p/a08ed6146352）" target="_blank" rel="noopener">https://www.jianshu.com/p/a08ed6146352）</a></p></li><li><p>主板型号,主板支持最大内存,单条内存的参数<br>sudo dmidecode -t 2 //查看主板信息<br>sudo dmidecode -t 16 |grep Maximum //查看主板支持最大内存<br>sudo dmidecode -t memory //查看单条内存的参数</p></li><li><p>硬盘品牌及其参数及其健康状态的检查<br>sudo apt-get install sysstat 2秒刷新：sudo iostat -x 2<br>sudo hdparm -i /dev/sda </p></li><li><p>服务器品牌,服务编号<br>sudo dmidecode |grep ‘Product Name’ //查看服务器品牌，型号<br>sudo dmidecode -s system-serial-number //查看服务编号</p></li><li><p>网卡的型号,所使用的驱动版本<br>sudo lspci | grep Eth //查看网卡型号<br>sudo modinfo pcnet32<br>原文链接：<a href="https://blog.csdn.net/djd1234567/article/details/48372911" target="_blank" rel="noopener">https://blog.csdn.net/djd1234567/article/details/48372911</a></p></li></ul><h3 id="文本编辑—vi-操作"><a href="#文本编辑—vi-操作" class="headerlink" title="文本编辑—vi 操作"></a>文本编辑—vi 操作</h3><ul><li>基本上vi可以分为三种状态<ul><li>分别是命令模式（command mode）：移动光标,删除</li><li>插入模式（Insert mode）：用于输入字符</li><li>底行模式（last line mode）：设置编辑环境和保存</li></ul></li><li>进入vi  初始为命令模式<br>$vi file</li><li>进入插入模式： 在命令模式下输入[i]</li><li>ESC 返回命令模式</li><li>[:]进入底行模式<ul><li>[w fileName]以指定名字保存</li><li>[wq]存盘并退出</li><li>[q!]不存盘退出</li></ul></li><li><a href="http://www.cnblogs.com/itech/archive/2009/04/17/1438439.html" target="_blank" rel="noopener">更复杂用法</a></li></ul><h3 id="文本编辑-—-nono-操作"><a href="#文本编辑-—-nono-操作" class="headerlink" title="文本编辑 — nono 操作"></a>文本编辑 — nono 操作</h3><p>nono是一个很好的命令行文本编辑软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /mnt/expect.sh</span><br><span class="line">。。。。编辑</span><br><span class="line">ctrl+x 退出询问是否保存,选择Y。</span><br></pre></td></tr></table></figure><h3 id="如何在-Ubuntu-系统中修复损坏的程序包"><a href="#如何在-Ubuntu-系统中修复损坏的程序包" class="headerlink" title="如何在 Ubuntu 系统中修复损坏的程序包"></a><a href="https://www.sysgeek.cn/ubuntu-fix-broken-packages/" target="_blank" rel="noopener">如何在 Ubuntu 系统中修复损坏的程序包</a></h3><h6 id="方法1：使用-apt-或-apt-get"><a href="#方法1：使用-apt-或-apt-get" class="headerlink" title="方法1：使用 apt 或 apt-get"></a>方法1：使用 apt 或 apt-get</h6><p>apt 命令有几个特殊参数，可以用来修复在安装过程中被破坏或缺失依赖的项或软件包。常见的情况是：当您使用 .deb 安装某个软件时，发现它存在你不知道的依赖关系，而这些依赖项又不会被自行引入，dpkg 就会提示缺少依赖。此时，您就可以用到以下步骤：</p><p>1在「终端」中执行以下更新命令，确保没有所需软件包的更新版本：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">update</span> --fix-<span class="literal">missing</span></span><br></pre></td></tr></table></figure><p>2执行以下命令以强制 apt 查找并更正缺少的依赖项或损坏的包：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> -f</span><br></pre></td></tr></table></figure><p>有关 apt 与 apt-get 的区别请参考<a href="https://www.sysgeek.cn/apt-vs-apt-get/" target="_blank" rel="noopener">Linux 中 apt 与 apt-get 命令的区别与解释</a></p><h6 id="方法2：使用-dpkg"><a href="#方法2：使用-dpkg" class="headerlink" title="方法2：使用 dpkg"></a>方法2：使用 dpkg</h6><p>程序包安装过程中，另一个容易出错的地方就是「配置过程」。而在幕后处理配置过程的是 dpkg 而非 apt。所以在当一个程序包在配置期间出现故障时，dpkg 是修复它的最佳工具。</p><p>1在「终端」中执行以下命令以强制 dpkg 重新配置软件包的损坏部分：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg <span class="comment">--configure -a</span></span><br></pre></td></tr></table></figure><p>2如果不能解决问题，您可以通过如下命令列出 dpkg 标记为需要重新安装的所有软件包：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -l <span class="string">| grep ^..r</span></span><br></pre></td></tr></table></figure><blockquote><p>grep 命令的更多用法请参考<a href="https://www.sysgeek.cn/linux-grep/" target="_blank" rel="noopener">如何使用 grep 命令在 Linux 中搜索文件</a></p></blockquote><p>3使用以下命令强制移除已损坏的程序包：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">sudo</span> <span class="comment">dpkg</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">remove</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">force</span><span class="literal">-</span><span class="comment">remove</span><span class="literal">-</span><span class="literal">-</span><span class="comment">reinstreq</span></span><br></pre></td></tr></table></figure><p>4在 dpkg 的工作完成后，尝试使用 apt 进行清理：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo apt clean</span></span><br><span class="line"><span class="attribute">sudo apt update</span></span><br></pre></td></tr></table></figure><h6 id="方法3：解除-dpkg-锁"><a href="#方法3：解除-dpkg-锁" class="headerlink" title="方法3：解除 dpkg 锁"></a>方法3：解除 dpkg 锁</h6><p>还有一种不太常见的情况——dpkg 锁。当你尝试使用 apt 或 dpkg 时，都会遇到错误提示，提示一个不存在的程序已经存在。此种情况通常是在程序包的安装过程发生错误后，一些被锁定的文件无法自动删除，在文件系统中扔被保留下来造成的。</p><p>如果遇到这种情况，就需要使用以下命令手动解除 dpkg 锁：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/<span class="class"><span class="keyword">lib</span>/<span class="title">apt</span>/<span class="title">lists</span>/<span class="title">lock</span></span></span><br></pre></td></tr></table></figure><p>还需要删除对缓存文件的锁定：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm <span class="regexp">/var/</span>cache<span class="regexp">/apt/</span>archives<span class="regexp">/lock</span></span><br></pre></td></tr></table></figure><h1 id="Bash-命令"><a href="#Bash-命令" class="headerlink" title="Bash 命令"></a>Bash 命令</h1><ul><li><p>| 表示管道命令，命令从前往后执行，前一个命令的输出可以作为后一个命令的输入<br> ls  <em>.fastq.gz|while read id;do echo ${id%_</em>}_1.fastq.gz;done</p></li><li><p>${id%_*}表示把id中_后面的内容都去掉</p></li></ul><h2 id="ubuntu的一些命令及查看已安装软件包的命令"><a href="#ubuntu的一些命令及查看已安装软件包的命令" class="headerlink" title="ubuntu的一些命令及查看已安装软件包的命令"></a>ubuntu的一些命令及查看已安装软件包的命令</h2>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">// 系统</span><br><span class="line"><span class="comment"># uname -a               # 查看内核/操作系统/CPU信息</span></span><br><span class="line"><span class="comment"># head -n 1 /etc/issue   # 查看操作系统版本</span></span><br><span class="line"><span class="comment"># cat /proc/cpuinfo      # 查看CPU信息</span></span><br><span class="line"><span class="comment"># hostname               # 查看计算机名</span></span><br><span class="line"><span class="comment"># lspci -tv              # 列出所有PCI设备</span></span><br><span class="line"><span class="comment"># lsusb -tv              # 列出所有USB设备</span></span><br><span class="line"><span class="comment"># lsmod                  # 列出加载的内核模块</span></span><br><span class="line"><span class="comment"># env                    # 查看环境变量</span></span><br><span class="line"></span><br><span class="line">// 资源</span><br><span class="line"><span class="comment"># free -m                # 查看内存使用量和交换区使用量</span></span><br><span class="line"><span class="comment"># df -h                  # 查看各分区使用情况</span></span><br><span class="line"><span class="comment"># du -sh &lt;目录名&gt;         # 查看指定目录的大小</span></span><br><span class="line"><span class="comment"># grep MemTotal /proc/meminfo   # 查看内存总量</span></span><br><span class="line"><span class="comment"># grep MemFree /proc/meminfo    # 查看空闲内存量</span></span><br><span class="line"><span class="comment"># uptime                 # 查看系统运行时间、用户数、负载</span></span><br><span class="line"><span class="comment"># cat /proc/loadavg      # 查看系统负载</span></span><br><span class="line"></span><br><span class="line">// 磁盘和分区</span><br><span class="line"><span class="comment"># mount | column -t      # 查看挂接的分区状态</span></span><br><span class="line"><span class="comment"># fdisk -l               # 查看所有分区</span></span><br><span class="line"><span class="comment"># swapon -s              # 查看所有交换分区</span></span><br><span class="line"><span class="comment"># hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)</span></span><br><span class="line"><span class="comment"># dmesg | grep IDE       # 查看启动时IDE设备检测状况</span></span><br><span class="line"></span><br><span class="line">// 网络</span><br><span class="line"><span class="comment"># ifconfig               # 查看所有网络接口的属性</span></span><br><span class="line"><span class="comment"># iptables -L            # 查看防火墙设置</span></span><br><span class="line"><span class="comment"># route -n               # 查看路由表</span></span><br><span class="line"><span class="comment"># netstat -lntp          # 查看所有监听端口</span></span><br><span class="line"><span class="comment"># netstat -antp          # 查看所有已经建立的连接</span></span><br><span class="line"><span class="comment"># netstat -s             # 查看网络统计信息</span></span><br><span class="line"></span><br><span class="line">// 进程</span><br><span class="line"><span class="comment"># ps -ef                 # 查看所有进程</span></span><br><span class="line"><span class="comment"># top                    # 实时显示进程状态</span></span><br><span class="line"></span><br><span class="line">// 用户</span><br><span class="line"><span class="comment"># w                      # 查看活动用户</span></span><br><span class="line"><span class="comment"># id &lt;用户名&gt;             # 查看指定用户信息</span></span><br><span class="line"><span class="comment"># last                    # 查看用户登录日志</span></span><br><span class="line"><span class="comment"># cut -d: -f1 /etc/passwd   # 查看系统所有用户</span></span><br><span class="line"><span class="comment"># cut -d: -f1 /etc/group    # 查看系统所有组</span></span><br><span class="line"><span class="comment"># crontab -l             # 查看当前用户的计划任务</span></span><br><span class="line"></span><br><span class="line">// 服务</span><br><span class="line"><span class="comment"># chkconfig --list       # 列出所有系统服务</span></span><br><span class="line"><span class="comment"># chkconfig --list | grep on    # 列出所有启动的系统服务</span></span><br><span class="line"></span><br><span class="line">// 程序</span><br><span class="line">apt-get update——在修改/etc/apt/sources.list或者/etc/apt/preferences之后运行该命令。此外您需要定期运行这一命令以确保您的软件包列表是最新的。 </span><br><span class="line">apt-get install packagename——安装一个新软件包（参见下文的aptitude） </span><br><span class="line">apt-get remove packagename——卸载一个已安装的软件包（保留配置文件） </span><br><span class="line">apt-get --purge remove packagename——卸载一个已安装的软件包（删除配置文件） </span><br><span class="line">dpkg --force-all --purge packagename 有些软件很难卸载，而且还阻止了别的软件的应用，就可以用这个，不过有点冒险。 </span><br><span class="line">apt-get autoclean apt会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件 </span><br><span class="line">apt-get clean 这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。 </span><br><span class="line">apt-get upgrade——更新所有已安装的软件包 </span><br><span class="line">apt-get dist-upgrade——将系统升级到新版本 </span><br><span class="line">apt-cache search string——在软件包列表中搜索字符串 </span><br><span class="line">dpkg -l package-name-pattern——列出所有与模式相匹配的软件包。如果您不知道软件包的全名，您可以使用“*package-name-pattern*”。 </span><br><span class="line">aptitude——详细查看已安装或可用的软件包。与apt-get类似，aptitude可以通过命令行方式调用，但仅限于某些命令——最常见的有安装和卸载命令。由于aptitude比apt-get了解更多信息，可以说它更适合用来进行安装和卸载。 </span><br><span class="line">apt-cache showpkg pkgs——显示软件包信息。 </span><br><span class="line">apt-cache dumpavail——打印可用软件包列表。 </span><br><span class="line">apt-cache show pkgs——显示软件包记录，类似于dpkg –<span class="built_in">print</span>-avail。 </span><br><span class="line">apt-cache pkgnames——打印软件包列表中所有软件包的名称。 </span><br><span class="line">dpkg -S file——这个文件属于哪个已安装软件包。 </span><br><span class="line">dpkg -L package——列出软件包中的所有文件。 </span><br><span class="line">apt-file search filename——查找包含特定文件的软件包（不一定是已安装的），这些文件的文件名中含有指定的字符串。apt-file是一个独立的软件包。您必须 先使用apt-get install来安装它，然后运行apt-file update。如果apt-file search filename输出的内容太多，您可以尝试使用apt-file search filename | grep -w filename（只显示指定字符串作为完整的单词出现在其中的那些文件名）或者类似方法，例如：apt-file search filename | grep /bin/（只显示位于诸如/bin或/usr/bin这些文件夹中的文件，如果您要查找的是某个特定的执行文件的话，这样做是有帮助的）。</span><br><span class="line">--------------------- </span><br><span class="line">原文：https://blog.csdn.net/helaisun/article/details/80712287</span><br></pre></td></tr></table></figure><hr><h3 id="Ubuntu进入单用户模式—系统修复"><a href="#Ubuntu进入单用户模式—系统修复" class="headerlink" title="Ubuntu进入单用户模式—系统修复"></a>Ubuntu进入单用户模式—系统修复</h3><p>偶尔会遇到Ubuntu无法正常启动的情况，这时候需修改某些文件让系统正常启动，如果直接进入 recovery 模式，默认是文件权限只读，无法修改文件。这是我们需要进入recovery 的单用户模式，获得修改文件的权限。</p><ol><li><p>重启ubuntu，随即长按shirft进入grub菜单，或等待grub菜单的出现.</p></li><li><p>选择recovery mode，接着用方向键将光标移至recovery mode，按”e”键进入编辑页面.</p></li><li><p>将 ro recovery nomodeset 改为 rw single init=/bin/bash</p></li><li><p>按 ctrl+x或者F10 进入单用户模式，当前用户即为root。可以进行操作，如：用vi命令修改/etc/fatab文件，按：wq保存退出。</p></li><li><p>修改完成安装ctrl+dele+alt 重启</p></li></ol><h3 id="Ubuntu-查看用户名并重置新密码"><a href="#Ubuntu-查看用户名并重置新密码" class="headerlink" title="Ubuntu 查看用户名并重置新密码"></a>Ubuntu 查看用户名并重置新密码</h3><ol><li>长按shift进入grub菜单</li><li>选择recovery mode</li><li>选择root</li><li>进入命令行 <blockquote><p>ls /home 查看系统用户名<br>mount -rw -o remount(有空格)/<br>passwd + 系统用户名<br>输入新密码</p></blockquote></li></ol><h2 id="Ubuntu的apt-get源为国内镜像源的方法"><a href="#Ubuntu的apt-get源为国内镜像源的方法" class="headerlink" title="Ubuntu的apt-get源为国内镜像源的方法"></a>Ubuntu的apt-get源为国内镜像源的方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list.bak </span><br><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将原来的列表删除，添加如下内容（中科大镜像源）</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> .tar （注：tar是打包，不是压缩！）</span></span><br><span class="line"><span class="ruby">  - 解包：tar xvf FileName.tar</span></span><br><span class="line"><span class="ruby">  - 打包：tar cvf FileName.tar DirName</span></span><br><span class="line"><span class="ruby">- .gz</span></span><br><span class="line"><span class="ruby">  - 解压<span class="number">1</span>：gunzip FileName.gz</span></span><br><span class="line"><span class="ruby">  - 解压<span class="number">2</span>：gzip -d FileName.gz</span></span><br><span class="line"><span class="ruby">  - 压缩：gzip FileName</span></span><br><span class="line"><span class="ruby">- .tar.gz 和 .tgz</span></span><br><span class="line"><span class="ruby">  - 解压：tar zxvf FileName.tar.gz</span></span><br><span class="line"><span class="ruby">  - 压缩：tar zcvf FileName.tar.gz DirName</span></span><br><span class="line"><span class="ruby">- .bz2</span></span><br><span class="line"><span class="ruby">  - 解压<span class="number">1</span>：bzip2 -d FileName.bz2</span></span><br><span class="line"><span class="ruby">  - 解压<span class="number">2</span>：bunzip2 FileName.bz2</span></span><br><span class="line"><span class="ruby">  - 压缩： bzip2 -z FileName</span></span><br><span class="line"><span class="ruby">- .tar.bz2</span></span><br><span class="line"><span class="ruby">  - 解压：tar jxvf FileName.tar.bz2</span></span><br><span class="line"><span class="ruby">  - 压缩：tar jcvf FileName.tar.bz2 DirName</span></span><br><span class="line"><span class="ruby">- .bz</span></span><br><span class="line"><span class="ruby">  - 解压<span class="number">1</span>：bzip2 -d FileName.bz</span></span><br><span class="line"><span class="ruby">  - 解压<span class="number">2</span>：bunzip2 FileName.bz</span></span><br><span class="line"><span class="ruby">- .tar.bz</span></span><br><span class="line"><span class="ruby">  - 解压：tar jxvf FileName.tar.bz</span></span><br><span class="line"><span class="ruby">  - 压缩：未知</span></span><br><span class="line"><span class="ruby">- .Z</span></span><br><span class="line"><span class="ruby">  - 解压：uncompress FileName.Z</span></span><br><span class="line"><span class="ruby">  - 压缩：compress FileName</span></span><br><span class="line"><span class="ruby">- .tar.Z</span></span><br><span class="line"><span class="ruby">  - 解压：tar Zxvf FileName.tar.Z</span></span><br><span class="line"><span class="ruby">  - 压缩：tar Zcvf FileName.tar.Z DirName</span></span><br><span class="line"><span class="ruby">- .zip</span></span><br><span class="line"><span class="ruby">  - 解压：unzip FileName.zip</span></span><br><span class="line"><span class="ruby">  - 压缩：zip FileName.zip DirName</span></span><br><span class="line"><span class="ruby">- .rar</span></span><br><span class="line"><span class="ruby">  - 解压：rar x FileName.rar</span></span><br><span class="line"><span class="ruby">  - 压缩：rar a FileName.rar DirName</span></span><br><span class="line"><span class="ruby">- .lha</span></span><br><span class="line"><span class="ruby">  - 解压：lha -e FileName.lha</span></span><br><span class="line"><span class="ruby">  - 压缩：lha -a FileName.lha FileName</span></span><br><span class="line"><span class="ruby">- .rpm</span></span><br><span class="line"><span class="ruby">  - 解包：rpm2cpio FileName.rpm <span class="params">| cpio -div</span></span></span><br><span class="line"><span class="ruby">- .deb</span></span><br><span class="line"><span class="ruby">  - 解包：ar p FileName.deb data.tar.gz <span class="params">| tar zxf -</span></span></span><br><span class="line"><span class="ruby">- .tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea</span></span><br><span class="line"><span class="ruby">  - 解压：sEx x FileName.*</span></span><br><span class="line"><span class="ruby">  - 压缩：sEx a FileName.* FileName</span></span><br><span class="line"><span class="ruby">  sEx只是调用相关程序，本身并无压缩、解压功能，请注意！</span></span><br><span class="line"><span class="ruby">- gzip [选项] 压缩（解压缩）</span></span><br><span class="line"><span class="ruby">  减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。gzip 是在 Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。</span></span><br><span class="line"><span class="ruby">  - c 将输出写到标准输出上，并保留原有文件。</span></span><br><span class="line"><span class="ruby">  - d 将压缩文件解压。</span></span><br><span class="line"><span class="ruby">  - l 对每个压缩文件，显示下列字段：压缩文件的大小；未压缩文件的大小；压缩比；未压缩文件的名字-r 递归式地查找指定目录并压缩其中的所有文件或者是解压缩。-t 测试，检查压缩文件是否完整。-v 对每一个压缩和解压的文件，显示文件名和压缩比。-num 用指定的数字 num 调整压缩的速度，-<span class="number">1</span> 或 --fast 表示最快压缩方法（低压缩比），-<span class="number">9</span> 或--best表示最慢压缩方法（高压缩比）。系统缺省值为 <span class="number">6</span>。指令实例：</span></span><br><span class="line"><span class="ruby">gzip *% 把当前目录下的每个文件压缩成 .gz 文件。gzip -dv *% 把当前目录下每个压缩的文件解压，并列出详细的信息。gzip -l *% 详细显示例<span class="number">1</span>中每个压缩的文件的信息，并不解压。gzip usr.tar% 压缩 tar 备份文件 usr.tar，此时压缩文件的扩展名为.tar.gz。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>TCGA数据下载总结</title>
      <link href="/hexo/2019/12/05/2019-12-05_TCGA_Datadownload/"/>
      <url>/hexo/2019/12/05/2019-12-05_TCGA_Datadownload/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-Clinical-data"><a href="#1-Clinical-data" class="headerlink" title="1. Clinical data"></a>1. Clinical data</h2><p>用 <a href="https://bioconductor.org/packages/release/bioc/vignettes/TCGAbiolinks/inst/doc/clinical.html" target="_blank" rel="noopener">TCGAbiolinks</a>下载临床数据，</p><p>优点： 临床数据量不大，容易下载。 Parse XML clinical data 会获取非常高质量的follow-up数据，对生存分析作用非常大。</p><h1 id="2-甲基化数据"><a href="#2-甲基化数据" class="headerlink" title="2.甲基化数据"></a>2.甲基化数据</h1><p>甲基化数据量非常大，从firehose获取神经连接用迅雷下载，其他工具下载慢，容易中断。然后用TCGA Assembler 2进行数据处理。</p><h2 id="3-CNV数据"><a href="#3-CNV数据" class="headerlink" title="3.CNV数据"></a>3.CNV数据</h2><p>CNV是相对参考基因组而言的概念。</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Merge_s<span class="symbol">np__genome_wide_snp_6</span>__broad_mit_edu__Level_<span class="number">3</span>__segme<span class="symbol">nted_scna_hg19</span>__seg </span><br><span class="line"></span><br><span class="line">Merge_s<span class="symbol">np__genome_wide_snp_6</span>__broad_mit_edu__Level_<span class="number">3</span>__segme<span class="symbol">nted_scna_minus_germline_cnv_hg19</span>__seg</span><br></pre></td></tr></table></figure><p>其中minus germline CNV的就是我们想要的癌症相关的somatic CNV。</p><p>在TCGA Assembler 2中分别用 na_cnv.hg18, cna_cnv.hg19, cna_nocnv.hg18, and cna_nocnv.hg19 来区别表示</p><h2 id="4-RNASeq数据"><a href="#4-RNASeq数据" class="headerlink" title="4.  RNASeq数据"></a>4.  RNASeq数据</h2><h3 id="TCGA-RNAseq数据中FPKM与TPM转换介绍"><a href="#TCGA-RNAseq数据中FPKM与TPM转换介绍" class="headerlink" title="TCGA RNAseq数据中FPKM与TPM转换介绍"></a>TCGA RNAseq数据中FPKM与TPM转换介绍</h3><p><a href="https://shengxin.ren/topic/2" target="_blank" rel="noopener">TCGA</a>     <a href="https://shengxin.ren/topic/91" target="_blank" rel="noopener">TCGA下载</a>  <a href="https://shengxin.ren/topic/243" target="_blank" rel="noopener">TPM</a>  <a href="https://shengxin.ren/topic/217" target="_blank" rel="noopener">FPKM</a></p><p>在新版TCGA（GDC Portral）的RNAseq数据主要提供了三种数据下载，<strong>HTSeq-Counts，HTSeq-FPKM，HTSeq-FPKM-UQ</strong>.</p><p><a href="https://docs.gdc.cancer.gov/Data/Bioinformatics_Pipelines/Expression_mRNA_Pipeline/" target="_blank" rel="noopener">TCGA官方文档</a></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GDC_RNASeq.png" alt=""></p><p>Counts是数据后台没有处理的原始表达量，而FPKM和FPKM-UQ是两种数据处理方法，也就是说，如果下载Counts数据，是表达量数据，如果下载FPKM数据，那么要注意这些数据是经过处理的。正常情况下，我们下载Counts数据就可以了，特殊情况选择FPKM数据也是可以的。<br><img src="https://taoshengxu.github.io/DocumentGit/img/FPKM.png" alt=""></p><p>下载数据后，在数据分析时，用的方法也是不同的，Counts数据一般使用edgeR包或DESeq包，对数据做分析；如果下载FPKM数据，就不能使用edgeR包，只能只用DESeq包进行处理。<br>在使用edgeR包做Counts数据处理时，是需要对数据进行normalize的，所以我们在下载数据时，下载counts是比较常用的。 </p><p>如果要用edgR等筛选差异的话会下载使用Counts数据，但是笔者在过去的数据分析中发现TCGA数据使用edgR等软件筛选差…</p><p>但是笔者在过去的数据分析中发现TCGA数据使用edgR等软件筛选差异基因并不理想，细思主要有两方面原因：</p><ul><li>一、肿瘤数据本身异质性很高</li><li>二、正常样本严重偏少</li></ul><p>基于此笔者几乎很少使用edgR等软件来筛选差异了，那么就很少下载Counts数据了，所以大多数情况下都是用RPKM，但是RPKM数据本身也是饱受诟病，像<a href="http://www.cbioportal.org/" target="_blank" rel="noopener">cbioportal</a>使用的是RSEM软件做的定量即TPM，在老版TCGA中也可以直接下载到这些数据，那么新版如何得到这样的数据呢，简单的办法是从FPKM转TPM.</p><p>FPKM: Fragments Per Kilobase of exon model per Million mapped fragments 即每千个碱基的转录每百万映射读取的fragments<br>TPM：TranscriptsPerKilobase of exonmodel per Million mapped reads 即每千个碱基的转录每百万映射读取的Transcripts<br>他们的计算公式如下：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FPKM= <span class="keyword">total</span> exon reads/ (mapped reads (Millions) * exon <span class="built_in">length</span>(KB))</span><br><span class="line">                    <span class="keyword">total</span> exon reads：某个样本mapping到特定基因的外显子上的所有的reads</span><br><span class="line">                    mapped reads (Millions) :某个样本的所有reads总和</span><br><span class="line">                    exon <span class="built_in">length</span>(KB)：某个基因的长度（外显子的长度的总和，以KB为单位）</span><br><span class="line">TPMi=(Ni/<span class="keyword">Li</span>)*1000000/<span class="built_in">sum</span>(N0/L0+……..+ Nm/Lm)</span><br><span class="line">                     Ni：mapping到基因i上的<span class="keyword">read</span>数； <span class="keyword">Li</span>：基因i的外显子长度的总和;<span class="keyword">m</span>：为所有基因的总数</span><br></pre></td></tr></table></figure><p>从以上公式我们可以进一步推导如下：</p><p>从以上公式我们可以进一步推导如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、FPKMi*(mapped reads (Millions)= total exon reads/ (mapped reads (Millions) * exon length(KB))</span><br><span class="line">2、total exon reads/ (mapped reads (Millions) * exon length(KB))=(Ni/Li)</span><br><span class="line">3、FPKMi*(mapped reads (Millions)=(Ni/Li)</span><br><span class="line">4、<span class="attribute">TPMi</span>=FPKMi*(mapped reads (Millions)<span class="number">*1000000</span>/(N0/L0+……<span class="built_in">..</span>+ Nm/Lm)</span><br><span class="line">5、<span class="attribute">TPMi</span>=FPKMi*(mapped reads (Millions)<span class="number">*1000000</span>/(FPKM0*(mapped reads (Millions)+……<span class="built_in">..</span>+ FPKMm*(mapped reads (Millions))</span><br><span class="line">6、<span class="attribute">TPMi</span>=FPKMi*1000000/(FPKM0+……..+ FPKMm)</span><br></pre></td></tr></table></figure><p>最终我们得到了TPM和FPKM的转换公公式，从公式里可以看到TPM就是等于该基因的FPKM占所有基因的FPKM的总和的比例乘以一百万，那么值得注意的是每个样本所有基因的TPM加和就等于一百万了，这很类似样本间标准化<br>最后你下载的TCGA FPKM数据转换TPM就不会懵逼了吧<br>参考文献：<a href="https://academic.oup.com/bioinformatics/article/26/4/493/243395/RNA-Seq-gene-expression-estimation-with-read" target="_blank" rel="noopener">https://academic.oup.com/bioinformatics/article/26/4/493/243395/RNA-Seq-gene-expression-estimation-with-read</a></p><h2 id="5-其他数据"><a href="#5-其他数据" class="headerlink" title="5. 其他数据"></a>5. 其他数据</h2><p>可以直接用TCGA assembler 2 下载。</p>]]></content>
      
      <categories>
          
          <category> Data Mining </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>TCGA样本命名详解</title>
      <link href="/hexo/2019/12/05/2019-12-05_TCGAsampleName/"/>
      <url>/hexo/2019/12/05/2019-12-05_TCGAsampleName/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在TCGA中，一个患者可能会对应多个样本，如TCGA-A6-6650可以得到3个样本数据：</p><p><em>TCGA-A6-6650-01A-11R-1774-07, TCGA-A6-6650-01A-11R-A278-07, TCGA-A6-6650-01B-02R-A277-07</em><br>      大家知道一般在做TCGA数据分析的时候样本名实际上只保留到前四个元素（以”-“分割），例如TCGA-A6-6650-01。所以实际上上示3个样本一般只保留一个.</p><ul><li>TCGA：Project, 所有TCGA样本名均以这个开头，标志</li><li>A6：Tissue source site，组织来源编码，如A6就表示来源于Christiana Healthcare中心的结肠癌组织。更多编码所代表的意义详见：<br>  <a href="https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/tissue-source-site-codes" target="_blank" rel="noopener">https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/tissue-source-site-codes</a></li><li>6650：Participant, 参与者编号</li><li>01：Sample, 这两个数字可以说是最关键、最被大家注意的，其中编号01~09表示肿瘤，10~19表示正常对照，如下：<br>  <a href="https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/sample-type-codes" target="_blank" rel="noopener">https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/sample-type-codes</a><br>  所以在TCGA样本名中，这个位置最常见的就是01和11，当然偶尔也会有其他的数字</li><li>A：Vial, 在一系列患者组织中的顺序，绝大多数样本该位置编码都是A; 很少数的是B，表示福尔马林固定石蜡包埋组织，已被证明用于测序分析的效果不佳，所以不建议使用-01B的样本数据.</li><li>11：Portion, 同属于一个患者组织的不同部分的顺序编号，同一组织会分割为100-120mg的部分，分别使用<br>R：Analyte, 分析的分子类型，对应关系如下所示：<br><a href="https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/portion-analyte-codes" target="_blank" rel="noopener">https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/portion-analyte-codes</a></li><li>1774：Plate, 在一系列96孔板中的顺序，值大表示制板越晚</li><li>07：Center, 测序或鉴定中心编码，更多编码详见：<br><a href="https://tcga-data.nci.nih.gov/datareports/codeTablesReport.htm?codeTable=center" target="_blank" rel="noopener">https://tcga-data.nci.nih.gov/datareports/codeTablesReport.htm?codeTable=center</a></li></ul><p>一个借鉴的图片：</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/TCGA_name.png" alt=""></p><p>更多内容详见：<br><a href="https://wiki.nci.nih.gov/display/TCGA/TCGA+barcode" target="_blank" rel="noopener">https://wiki.nci.nih.gov/display/TCGA/TCGA+barcode</a><br><a href="http://docs.cavatica.org/docs/tcga-grch38-metadata" target="_blank" rel="noopener">http://docs.cavatica.org/docs/tcga-grch38-metadata</a></p><p>所以现在看这三个样本其区别就在于，前两个使用的是患者的冰冻组织做的测序，而第三个用的是福尔马林固定石蜡包埋组织；而前两个样本的区别在于同一组织后续使用了不同的96孔板。</p><p>理解了命名规则及三者命名上的主要区别后，现在可以重点解决如何从一个患者的多个样本中挑选样本的问题了，首先排除TCGA-A6-6650-01B-02R-A277-07，因为是<code>01B，福尔马林固定石蜡包埋组织</code>！剩下的两个：</p><p>TCGA-A6-6650-01A-11R-1774-07<br>TCGA-A6-6650-01A-11R-A278-07<br>先看看GDAC firehose遇到这种情况怎么解决，总结起来就是：</p><p>1、对RNA数据来说，Analyte为R的优先级最该，其次是R和T，而对于DNA层面的分析来说，D的优先级最高。<br>2、如果Analyte相同，那就选择Portion和/或Plate值更大的。<br>所以按照GDAC firehose的方法，最终保留TCGA-A6-6650-01A-11R-A278-07，因为其相对于TCGA-A6-6650-01A-11R-1774-07的板号(Plate)更晚：<br><a href="https://github.com/BioinformaticsFMRP/TCGAbiolinks/issues/163" target="_blank" rel="noopener">https://github.com/BioinformaticsFMRP/TCGAbiolinks/issues/163</a><br>虽然看起来可能这么选比较准确，但是稍微有些麻烦~</p><p>然后是cBioPortal中的处理方式：</p><p>随机选择了一个，理由很简单啊，来源于同一个患者的癌组织样本差别不大，小编随机测试了两个样本，表达相关性值是大于0.8的。所以如果遇到需要选择的时候，就仁者见仁了，建议天秤座的小伙伴们也不要太纠结到底哪个最好，当然如果你有不同的意见和看法，欢迎交流讨论！</p><p>————————————————<br>版权声明：本文为CSDN博主「Mr番茄蛋」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_35203425/article/details/80851862" target="_blank" rel="noopener">https://blog.csdn.net/qq_35203425/article/details/80851862</a></p>]]></content>
      
      <categories>
          
          <category> Data Mining </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>判定基因名类型-codingRNA OR no-codeing RNA</title>
      <link href="/hexo/2019/12/05/2019-04-04_trancript_type/"/>
      <url>/hexo/2019/12/05/2019-04-04_trancript_type/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>目前考虑两种方法</p><h2 id="方法一-利用HNGC注释数据"><a href="#方法一-利用HNGC注释数据" class="headerlink" title="方法一 利用HNGC注释数据"></a>方法一 利用HNGC注释数据</h2><p>人类基因命名委员会（HGNC）（<a href="http://www.genenames.org" target="_blank" rel="noopener">http://www.genenames.org</a>) 包含了人类基因所有的命名，别名和ID，可以说是天下命名，无出其右．直接在下载页面　（<a href="http://www.genenames.org/cgi-bin/statistics）底部下载所有的命名关系的一个大表。" target="_blank" rel="noopener">http://www.genenames.org/cgi-bin/statistics）底部下载所有的命名关系的一个大表。</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bash axel ftp://ftp.ebi.ac.uk/pub/databases/genenames/new/tsv/hgnc_complete_set.txt</span></span><br><span class="line"><span class="comment"># 数据一致更新</span></span><br><span class="line">hgnc_geneset=fread(file = <span class="string">"hgnc_complete_set.txt"</span>,header = <span class="literal">TRUE</span>)</span><br><span class="line">xx=hgnc_geneset[<span class="number">1</span>:<span class="number">10</span>,]</span><br><span class="line">xx=hgnc_geneset[,c(<span class="string">"symbol"</span>, <span class="string">"locus_group"</span>,<span class="string">"status"</span>,<span class="string">"entrez_id"</span> )]</span><br><span class="line">yy=merge(gene_names,xx,by=c(<span class="string">"symbol"</span>),all.x = <span class="literal">TRUE</span>,sort=<span class="literal">FALSE</span>)</span><br><span class="line">index=match(gene_names1, yy$symbol)</span><br><span class="line">gene_names=yy[index,]</span><br><span class="line">save(sc_data_HMLE,gene_names, file=<span class="string">"sc_data_HMLE.rda"</span> )</span><br><span class="line">sum(na.omit(gene_names$locus_group)==<span class="string">"protein-coding gene"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/hngc_completeset.png" alt=""></p><h2 id="方法二-利用Genecode"><a href="#方法二-利用Genecode" class="headerlink" title="方法二 利用Genecode"></a>方法二 利用Genecode</h2><p><a href="https://www.gencodegenes.org/human/" target="_blank" rel="noopener">https://www.gencodegenes.org/human/</a></p><p><a href="https://www.jianshu.com/p/3c290fee634f" target="_blank" rel="noopener">https://www.jianshu.com/p/3c290fee634f</a> </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载GTF文件处理即可 https://www.gencodegenes.org/human/</span></span><br><span class="line"><span class="comment"># bash axel ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.chr_patch_hapl_scaff.annotation.gtf.gz</span></span><br><span class="line"></span><br><span class="line">fread(*.GTF)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>TCGA miRNA 表达谱矩阵的Name转换</title>
      <link href="/hexo/2019/12/05/2019-12-05_TCGA_miRNAName/"/>
      <url>/hexo/2019/12/05/2019-12-05_TCGA_miRNAName/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>TCGA数据库中miRNA名字都是小写表示，如何和基因以及成熟miRNA进行对应是个一直以来困惑的问题。</p><p><a href="https://taoshengxu.github.io/DocumentGit/html/使用HGNC数据库对miRNA名称ID进行转换.html">参见这篇文章</a></p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Github机器学习100天</title>
      <link href="/hexo/2019/11/26/2019-11-26_githubDataMining/"/>
      <url>/hexo/2019/11/26/2019-11-26_githubDataMining/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="GitHub热门教程：100天搞定机器学习（中文版）"><a href="#GitHub热门教程：100天搞定机器学习（中文版）" class="headerlink" title="GitHub热门教程：100天搞定机器学习（中文版）"></a><strong>GitHub热门教程：100天搞定机器学习（中文版）</strong></h3><p><a href="https://github.com/Avik-Jain/100-Days-of-ML-Code-Chinese-Version" target="_blank" rel="noopener">https://github.com/Avik-Jain/100-Days-of-ML-Code-Chinese-Version</a></p><p><a href="https://github.com/Avik-Jain/100-Days-Of-ML-Code" target="_blank" rel="noopener">https://github.com/Avik-Jain/100-Days-Of-ML-Code</a></p>]]></content>
      
      <categories>
          
          <category> Data Mining </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>MyGene.info R Client</title>
      <link href="/hexo/2019/11/26/2019-11-26_mygeneinfo/"/>
      <url>/hexo/2019/11/26/2019-11-26_mygeneinfo/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这是一个基因名字注释的数据库，可以查到很多信息，涉及基因组，转录组，蛋白组的很多名字，需要来熟悉这些名字。我对这些名字都不熟悉，如第一个例子.</p><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/mygene.pdf">pdf</a></p>]]></content>
      
      <categories>
          
          <category> Data Mining </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title> 数据下载专题 | UCSC Xena</title>
      <link href="/hexo/2019/11/25/2019-11-25_UCSC_xena/"/>
      <url>/hexo/2019/11/25/2019-11-25_UCSC_xena/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="数据下载专题-UCSC-Xena"><a href="#数据下载专题-UCSC-Xena" class="headerlink" title="数据下载专题 | UCSC Xena"></a>数据下载专题 | UCSC Xena</h3><ul><li><strong>UCSC Xena</strong>是由加州大学圣克鲁兹分校(University Of Cingifornia Sisha Cruz，UCSC)维护的数据库，前身是<strong>癌症基因组浏览器Cancer Browser</strong> ,Cancer Browser目前已经不再更新.</li></ul><p><a href="http://xena.ucsc.edu/welcome-to-ucsc-xena/" target="_blank" rel="noopener"></a></p><p><img src="https://note.youdao.com/yws/api/personal/file/18D33E44CC4F470CA87C442D01EAC442?method=download&amp;shareKey=2a6303ff4a133c9b54106266a02efebe" alt="1"><span class="image-caption-center">1</span></p><h4 id="UCSC-官方网址：UCSC-Xena"><a href="#UCSC-官方网址：UCSC-Xena" class="headerlink" title="UCSC 官方网址：UCSC Xena"></a>UCSC 官方网址：<a href="http://xena.ucsc.edu/" target="_blank" rel="noopener">UCSC Xena</a></h4><p>Xena收录了TCGA、GDC、ICGC、TARGET等多个数据库的公共数据，主页如下：</p><p><img src="https://note.youdao.com/yws/api/personal/file/C91E4FE6D2BB48F4BDDF35167925AB43?method=download&shareKey=25e3e075a8c308c5f3878808963086f5" width="70%"></p><p><strong>红框1-</strong>  <strong>Analysis</strong> 列出了Xena支持的数据分析功能</p><p><img src="https://note.youdao.com/yws/api/personal/file/E4B949414B034638B198A2A47E23FBF3?method=download&shareKey=3e0b0d243109569216be66966f3006b8 " width="70%" height="50%"></p><h4 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h4><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p><strong>红框2</strong>- 点击<strong>Launch Xene</strong> 即可进入数据下载界面</p><p><img src="https://note.youdao.com/yws/api/personal/file/ACE08BD36AF6472AB669C8D104A36C5B?method=download&shareKey=e077f8d7cf7dd4f15444b60cde86a659" width="70%"></p><p>箭头指向的是右边所有勾选的data hub中的存储的数据，有122组，1534个数据集，可通过勾选自由选择想要查看的数据平台的数据。以 <strong>COAD </strong> 为例：</p><p><img src="https://note.youdao.com/yws/api/personal/file/6B95A19ADA424CD4B8CBFE83A9F35E02?method=download&shareKey=ec10b3b7628a9ec1c41e6f5e15074c56" width="70%"></p><p><a href="https://xenabrowser.net/datapages/?cohort=TCGA%20Colon%20Cancer%20(COAD" target="_blank" rel="noopener">TCGA 的 COAD 数据</a>)</p><p>包含：<strong>copy number (gene-level)、copy number segments、DNA methylation、exon expression RNAseq、gene expression array、gene expression RNAseq</strong>等多个层面的数据，</p><p><img src="https://note.youdao.com/yws/api/personal/file/296C739F842D48589EFCB47DE58DCA3E?method=download&shareKey=e108cd1345be88caf73f26707fee97a3" width="70%"></p><p>比如 <strong><em>gene expression RNAseq</em></strong>，下面对应四种数据集，区别在于使用的实验平台或是对数据的处理方法，具体介绍可点击方框里的链接查看</p><p><img src="https://note.youdao.com/yws/api/personal/file/43320AA7CCD0427A8F7BEF07B5E75F48?method=download&shareKey=a35495731768dcf1bedff2b6dd4adb1a" width="70%"></p><p>进去 <strong>IlluminaHiSeq</strong>, 界面如下：</p><p><img src="https://note.youdao.com/yws/api/personal/file/7281551575CD441DAC400D9B244B89DB?method=download&amp;shareKey=c67d49b583a2c172b29026e07f14f922" alt="8"><span class="image-caption-center">8</span></p><p><strong>绿色方框</strong>  对应着.json的格式文件，可以自行打开查看</p><p><strong>蓝色方框</strong>  对应着下载的数据的 <strong>基因名</strong> 和 <strong>样本名</strong> ，如下</p><p><img src="https://note.youdao.com/yws/api/personal/file/51E3A1D426BA4490B4A6536096C85EED?method=download&shareKey=b476cc4f5e7b6f935c935b210ef389b0" width="50%" height="10%"></p><p><img src="https://note.youdao.com/yws/api/personal/file/84FC1196D42049E5892184279DB5CF4D?method=download&shareKey=ffbdda5a70d278e1358d78f0fbdaf507" width="50%" heigth="20%"></p><p><strong>黄色方框</strong> 的链接，进入 <strong>NCI(National Cancer Institue)</strong> ，which is part of the <strong>National Institutes of Health(NIH)</strong>.</p><p><img src="https://note.youdao.com/yws/api/personal/file/9204AE24C73E47AF8210A64D6A65EB6C?method=download&shareKey=146377a9ffc525cef763cff282089d81" width="70%"></p><hr><h6 id="下载的数据形式"><a href="#下载的数据形式" class="headerlink" title="下载的数据形式"></a><strong>下载的数据形式</strong></h6><p><img src="https://note.youdao.com/yws/api/personal/file/43814DF2A8AC49B39CCD87685CF51762?method=download&shareKey=50959d9fa470a6c804eda75d9f65fb87" width="70%"></p><p>1、从上图链接下载对应的gene mapping数据打开如下：</p><p><img src="https://note.youdao.com/yws/api/personal/file/048AB03718D34988B22FFA7C43AA9578?method=download&amp;shareKey=7f4ac71f176cfcbe6a90fadb37b1bc08" alt="13"><span class="image-caption-center">13</span></p><p>2、COAD 的gene expression下载完成后，打开如下：</p><p><img src="https://note.youdao.com/yws/api/personal/file/DB2C14A244EE4F98A1FD7BFB3C165F13?method=download&amp;shareKey=4d2e3f451a6c92755f34f475616c2b45" alt="14"><span class="image-caption-center">14</span></p><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><p>​     帮助文档中给出了其他的下载方法<a href="https://ucsc-xena.gitbook.io/project/overview-of-features/download-data" target="_blank" rel="noopener">数据下载</a></p><p><img src="https://note.youdao.com/yws/api/personal/file/EEAB34FB4BF24F78A4870BF4C07965C8?method=download&shareKey=34f92a6392472c58668fd425708b9e72" width="90%"></p><h3 id="数据的可视化分析"><a href="#数据的可视化分析" class="headerlink" title="数据的可视化分析"></a>数据的可视化分析</h3><p><strong>“VISUALIZATION”</strong> 对应着UCSC Xena 的可视化分析，</p><p><a href="https://ucsc-xena.gitbook.io/project/live-examples" target="_blank" rel="noopener">例子</a></p><p>可以发现通过移动鼠标，可以观察每个样本和对应探针的属性，按住鼠标拖动（横或竖），可以进行缩放。点击<strong>clear zoom</strong> 取消全部缩放， <strong>zoom out</strong>  撤回上一步缩放。当鼠标放在图片上，可以发现右下角有个三角，可以拖动进行放大。</p><p><img src="https://note.youdao.com/yws/api/personal/file/52886C64BE164933AA00F791DD9F1E71?method=download&shareKey=b4710cee3fd741e41cf383be51f389ee" width="80%"></p><p>​         <strong>MGMT介绍:</strong>  化疗是治疗癌症的重要步骤之一，肿瘤对化疗的耐受是影响化疗结果的重要因素之一。<strong>DNA修复酶—O6-甲基鸟嘌呤DNA甲基转移酶（O6-methylguanine-DNA methytransferase，MGMT)</strong>在胶质瘤组织中的表达与肿瘤的耐药性相关，且MGMT基因启动子的甲基化状态是决定MGMT表达量的主要因素，并可能影响病人的化疗效果及其预后。</p><p>当我们自己想对某一数据集进行可视化分析：<a href="https://xenabrowser.net/heatmap/" target="_blank" rel="noopener">https://xenabrowser.net/heatmap/</a></p><p><img src="https://note.youdao.com/yws/api/personal/file/162B111419DA422C8E65FE583D0C2C4F?method=download&shareKey=2ea511cfcd7b9832d5fafe382ca6129c" width="80%"></p><p><strong>注</strong> <em>当我们添加数据时至少添加两列才可以进行分析，因为Xena的设计，需要有超过2种数据类型才能找到变化趋势。</em></p><h4 id="添加自己的-data-到-Xena"><a href="#添加自己的-data-到-Xena" class="headerlink" title="添加自己的 data 到 Xena"></a>添加自己的 data 到 Xena</h4><p>如果以后需要将自己的数据添加到Xena中进行分析，可通过Xena提供的帮助文档，进行操作</p><p><a href="https://ucsc-xena.gitbook.io/project/local-xena-hub/getting-started" target="_blank" rel="noopener">https://ucsc-xena.gitbook.io/project/local-xena-hub/getting-started</a></p><h4 id="学习视频"><a href="#学习视频" class="headerlink" title="学习视频"></a>学习视频</h4><p>Xena 中提供了视频教学：<a href="https://ucsc-xena.gitbook.io/project/tutorials" target="_blank" rel="noopener">https://ucsc-xena.gitbook.io/project/tutorials</a></p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bioinformatics </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ggplot多图拼接</title>
      <link href="/hexo/2019/04/26/2019-04-26_ggplot/"/>
      <url>/hexo/2019/04/26/2019-04-26_ggplot/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>ggplot多图拼接<br><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Multiple plot function</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)</span></span><br><span class="line"><span class="comment"># - cols:   Number of columns in layout</span></span><br><span class="line"><span class="comment"># - layout: A matrix specifying the layout. If present, 'cols' is ignored.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),</span></span><br><span class="line"><span class="comment"># then plot 1 will go in the upper left, 2 will go in the upper right, and</span></span><br><span class="line"><span class="comment"># 3 will go all the way across the bottom.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">multiplot &lt;- <span class="keyword">function</span>(<span class="keyword">...</span>, plotlist=<span class="literal">NULL</span>, file, cols=<span class="number">1</span>, layout=<span class="literal">NULL</span>) &#123;</span><br><span class="line">  <span class="keyword">library</span>(grid)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># Make a list from the ... arguments and plotlist</span></span><br><span class="line">  plots &lt;- c(list(<span class="keyword">...</span>), plotlist)</span><br><span class="line">  </span><br><span class="line">  numPlots = length(plots)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># If layout is NULL, then use 'cols' to determine layout</span></span><br><span class="line">  <span class="keyword">if</span> (is.null(layout)) &#123;</span><br><span class="line">    <span class="comment"># Make the panel</span></span><br><span class="line">    <span class="comment"># ncol: Number of columns of plots</span></span><br><span class="line">    <span class="comment"># nrow: Number of rows needed, calculated from # of cols</span></span><br><span class="line">    layout &lt;- matrix(seq(<span class="number">1</span>, cols * ceiling(numPlots/cols)),</span><br><span class="line">                     ncol = cols, nrow = ceiling(numPlots/cols))</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (numPlots==<span class="number">1</span>) &#123;</span><br><span class="line">    print(plots[[<span class="number">1</span>]])</span><br><span class="line">    </span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment"># Set up the page</span></span><br><span class="line">    grid.newpage()</span><br><span class="line">    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Make each plot, in the correct location</span></span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:numPlots) &#123;</span><br><span class="line">      <span class="comment"># Get the i,j matrix positions of the regions that contain this subplot</span></span><br><span class="line">      matchidx &lt;- as.data.frame(which(layout == i, arr.ind = <span class="literal">TRUE</span>))</span><br><span class="line">      </span><br><span class="line">      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,</span><br><span class="line">                                      layout.pos.col = matchidx$col))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line"><span class="comment"># This example uses the ChickWeight dataset, which comes with ggplot2</span></span><br><span class="line"><span class="comment"># First plot</span></span><br><span class="line">p1 &lt;- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick)) +</span><br><span class="line">  geom_line() +</span><br><span class="line">  ggtitle(<span class="string">"Growth curve for individual chicks"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Second plot</span></span><br><span class="line">p2 &lt;- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) +</span><br><span class="line">  geom_point(alpha=<span class="number">.3</span>) +</span><br><span class="line">  geom_smooth(alpha=<span class="number">.2</span>, size=<span class="number">1</span>) +</span><br><span class="line">  ggtitle(<span class="string">"Fitted growth curve per diet"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Third plot</span></span><br><span class="line">p3 &lt;- ggplot(subset(ChickWeight, Time==<span class="number">21</span>), aes(x=weight, colour=Diet)) +</span><br><span class="line">  geom_density() +</span><br><span class="line">  ggtitle(<span class="string">"Final weight, by diet"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fourth plot</span></span><br><span class="line">p4 &lt;- ggplot(subset(ChickWeight, Time==<span class="number">21</span>), aes(x=weight, fill=Diet)) +</span><br><span class="line">  geom_histogram(colour=<span class="string">"black"</span>, binwidth=<span class="number">50</span>) +</span><br><span class="line">  facet_grid(Diet ~ .) +</span><br><span class="line">  ggtitle(<span class="string">"Final weight, by diet"</span>) +</span><br><span class="line">  theme(legend.position=<span class="string">"none"</span>)        <span class="comment"># No legend (redundant in this graph)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#layout &lt;- matrix(c(1, 1, 1, 2, 2, rep(3, 5)), nrow = 2, byrow = TRUE)</span></span><br><span class="line"><span class="comment">#multiplot(plotlist = list(p1, p2, p3,p4), layout = layout)</span></span><br><span class="line">multiplot(p1, p2, p3, p4, cols=<span class="number">2</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>判定基因名类型-codingRNA OR no-codeing RNA</title>
      <link href="/hexo/2019/04/04/2019-12-05_trancript_type/"/>
      <url>/hexo/2019/04/04/2019-12-05_trancript_type/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>目前考虑两种方法</p><h2 id="方法一-利用HNGC注释数据"><a href="#方法一-利用HNGC注释数据" class="headerlink" title="方法一 利用HNGC注释数据"></a>方法一 利用HNGC注释数据</h2><p>人类基因命名委员会（HGNC）（<a href="http://www.genenames.org" target="_blank" rel="noopener">http://www.genenames.org</a>) 包含了人类基因所有的命名，别名和ID，可以说是天下命名，无出其右．直接在下载页面　（<a href="http://www.genenames.org/cgi-bin/statistics）底部下载所有的命名关系的一个大表。" target="_blank" rel="noopener">http://www.genenames.org/cgi-bin/statistics）底部下载所有的命名关系的一个大表。</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bash axel ftp://ftp.ebi.ac.uk/pub/databases/genenames/new/tsv/hgnc_complete_set.txt</span></span><br><span class="line"><span class="comment"># 数据一致更新</span></span><br><span class="line">hgnc_geneset=fread(file = <span class="string">"hgnc_complete_set.txt"</span>,header = <span class="literal">TRUE</span>)</span><br><span class="line">xx=hgnc_geneset[<span class="number">1</span>:<span class="number">10</span>,]</span><br><span class="line">xx=hgnc_geneset[,c(<span class="string">"symbol"</span>, <span class="string">"locus_group"</span>,<span class="string">"status"</span>,<span class="string">"entrez_id"</span> )]</span><br><span class="line">yy=merge(gene_names,xx,by=c(<span class="string">"symbol"</span>),all.x = <span class="literal">TRUE</span>,sort=<span class="literal">FALSE</span>)</span><br><span class="line">index=match(gene_names1, yy$symbol)</span><br><span class="line">gene_names=yy[index,]</span><br><span class="line">save(sc_data_HMLE,gene_names, file=<span class="string">"sc_data_HMLE.rda"</span> )</span><br><span class="line">sum(na.omit(gene_names$locus_group)==<span class="string">"protein-coding gene"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/hngc_completeset.png" alt=""></p><h2 id="方法二-利用Genecode"><a href="#方法二-利用Genecode" class="headerlink" title="方法二 利用Genecode"></a>方法二 利用Genecode</h2><p><a href="https://www.gencodegenes.org/human/" target="_blank" rel="noopener">https://www.gencodegenes.org/human/</a></p><p><a href="https://www.jianshu.com/p/3c290fee634f" target="_blank" rel="noopener">https://www.jianshu.com/p/3c290fee634f</a> </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载GTF文件处理即可 https://www.gencodegenes.org/human/</span></span><br><span class="line"><span class="comment"># bash axel ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.chr_patch_hapl_scaff.annotation.gtf.gz</span></span><br><span class="line"></span><br><span class="line">fread(*.GTF)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>下载参考基因组序列以及一些重要注释数据库汇总</title>
      <link href="/hexo/2019/04/03/2019-04-03_genomic_reference/"/>
      <url>/hexo/2019/04/03/2019-04-03_genomic_reference/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/参考基因组及注释文件下载.pdf">参考基因组及注释文件下载</a></p><h2 id="1-参考基因组"><a href="#1-参考基因组" class="headerlink" title="1. 参考基因组"></a>1. 参考基因组</h2><div class="table-container"><table><thead><tr><th>NCBI</th><th>Ensembl</th><th>UCSC</th></tr></thead><tbody><tr><td>GRCh36</td><td>release_52</td><td>hg18</td></tr><tr><td>GRCh37</td><td>release_59/61/64/68/69/75</td><td>hg19</td></tr><tr><td>GRCh38</td><td>release_76/77/78/80/81/82</td><td>hg38</td></tr></tbody></table></div><h4 id="UCSC下载："><a href="#UCSC下载：" class="headerlink" title="UCSC下载："></a><strong>UCSC下载：</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##hg19：</span></span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz <span class="comment">##hg19 </span></span><br><span class="line">tar -zxvf chromFa.tar.gz</span><br><span class="line">cat *.fa &gt;hg19.fa</span><br><span class="line"></span><br><span class="line"><span class="comment">##hg38：</span></span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/hg38.chromFa.tar.gz <span class="comment">##hg38</span></span><br><span class="line">tar -zxvf hg38.chromFa.tar.gz</span><br><span class="line">cat *.fa &gt;hg38.fa</span><br><span class="line"></span><br><span class="line"><span class="comment">#http://hgdownload.cse.ucsc.edu/goldenPath/mm10/bigZips/chromFa.tar.gz</span></span><br><span class="line"><span class="comment">#http://hgdownload.cse.ucsc.edu/goldenPath/mm9/bigZips/chromFa.tar.gz</span></span><br><span class="line"><span class="comment">#http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz</span></span><br><span class="line"><span class="comment">#http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/chromFa.tar.gz</span></span><br><span class="line"></span><br><span class="line">但是注释文件下载稍微有点麻烦，需要设置一系列参数来生成：</span><br><span class="line"><span class="comment"># http://genome.ucsc.edu/cgi-bin/hgTables</span></span><br><span class="line">Select the following options:</span><br><span class="line">clade: Mammal</span><br><span class="line">genome: Human</span><br><span class="line">assembly: Feb. 2009 (GRCh37/hg19)</span><br><span class="line">group: Genes and Gene Predictions</span><br><span class="line">track: UCSC Genes</span><br><span class="line">table: knownGene</span><br><span class="line">region: Select <span class="string">"genome"</span> <span class="keyword">for</span> the entire genome.</span><br><span class="line">output format: GTF - gene transfer format</span><br><span class="line">output file: enter a file name to save your results to a file, or leave blank to display results <span class="keyword">in</span> the browser</span><br><span class="line">Click <span class="string">'get output'</span>.</span><br></pre></td></tr></table></figure><h4 id="NCBI下载"><a href="#NCBI下载" class="headerlink" title="NCBI下载"></a><strong>NCBI下载</strong></h4><p><strong>建议用迅雷或ncbi官网提供的下载器下载速度更快</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##GRCH37-- hg19：</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 22) X Y</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">nohup axel ftp://ftp.ncbi.nlm.nih.gov/genomes/Homo_sapiens/ARCHIVE/BUILD.37.3/Assembled_chromosomes/seq/hs_ref_GRCh37.p5_chr<span class="variable">$&#123;i&#125;</span>.fa.gz &amp;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 22) X Y</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">gunzip -c ./download/hs_ref_GRCh37.p5_chr<span class="variable">$&#123;i&#125;</span>.fa.gz &gt; ./hs_ref_GRCh37.p5_chr<span class="variable">$&#123;i&#125;</span>.fa</span><br><span class="line">cat hs_ref_GRCh37.p5_chr<span class="variable">$&#123;i&#125;</span>.fa &gt;&gt;hg19.fa</span><br><span class="line">sleep 10s;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##GRCH38-- hg38：</span></span><br><span class="line">同理，只要找到下载地址，改动一下即可。</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 22) X Y</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">nohup wget -c ftp://ftp.ncbi.nlm.nih.gov/genomes/H_sapiens/ARCHIVE/ANNOTATION_RELEASE.109/Assembled_chromosomes/seq/hs_ref_GRCh38.p12_chr<span class="variable">$&#123;i&#125;</span>.fa.gz </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#ftp://ftp.ncbi.nlm.nih.gov/genomes/Homo_sapiens/Assembled_chromosomes/seq/hs_ref_GRCh38.p7_chr$&#123;i&#125;.fa.gz </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 22) X Y</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">gunzip -c ./download/hs_ref_GRCh38.p12_chr<span class="variable">$&#123;i&#125;</span>.fa.gz &gt; ./hs_ref_GRCh38.p12_chr<span class="variable">$&#123;i&#125;</span>.fa</span><br><span class="line">cat hs_ref_GRCh38.p12_chr<span class="variable">$&#123;i&#125;</span>.fa &gt;&gt;hg38.fa</span><br><span class="line">sleep 10s;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##注释文件gtf</span></span><br><span class="line">ftp://ftp.ncbi.nlm.nih.gov/genomes/Homo_sapiens/ARCHIVE/</span><br></pre></td></tr></table></figure><h4 id="Ensembl下载"><a href="#Ensembl下载" class="headerlink" title="Ensembl下载"></a><strong>Ensembl下载</strong></h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更改release后的数字下载相应的版本，包括dna、cdna、cds等序列信息，release-75是目前最新的hg19版本。</span></span><br><span class="line"><span class="symbol">ftp:</span>/<span class="regexp">/ftp.ensembl.org/pub</span><span class="regexp">/release-75/fasta</span><span class="regexp">/homo_sapiens/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注释文件下载（默认gtf，大部分比对软件输入格式）：</span></span><br><span class="line"><span class="symbol">ftp:</span>/<span class="regexp">/ftp.ensembl.org/pub</span><span class="regexp">/release75/gtf</span><span class="regexp">/homo_sapiens/</span>Homo_sapiens.GRCh37.<span class="number">75</span>.gtf.gz</span><br></pre></td></tr></table></figure><h2 id="2-重要基因名注释数据库"><a href="#2-重要基因名注释数据库" class="headerlink" title="2. 重要基因名注释数据库"></a>2. 重要基因名注释数据库</h2><h4 id="genecode"><a href="#genecode" class="headerlink" title="genecode"></a>genecode</h4><p><a href="https://www.gencodegenes.org/human/" target="_blank" rel="noopener">https://www.gencodegenes.org/human/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axel ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.chr_patch_hapl_scaff.annotation.gtf.gz</span><br></pre></td></tr></table></figure><h4 id="HNGC注释数据"><a href="#HNGC注释数据" class="headerlink" title="HNGC注释数据"></a>HNGC注释数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axel ftp://ftp.ebi.ac.uk/pub/databases/genenames/new/tsv/hgnc_complete_set.txt</span><br></pre></td></tr></table></figure><h2 id="3-UCSC-Table-下载基因的特定区域"><a href="#3-UCSC-Table-下载基因的特定区域" class="headerlink" title="3.UCSC Table 下载基因的特定区域"></a>3.UCSC Table 下载基因的特定区域</h2><p><a href="http://genome.ucsc.edu/cgi-bin/hgTables" target="_blank" rel="noopener">http://genome.ucsc.edu/cgi-bin/hgTables</a>    <a href="http://genome.ucsc.edu/goldenPath/help/hgTablesHelp.html" target="_blank" rel="noopener">说明文档</a></p><p><a href="http://blog.genesino.com/2013/05/ucsc-usages/" target="_blank" rel="noopener">http://blog.genesino.com/2013/05/ucsc-usages/</a></p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>conda命令</title>
      <link href="/hexo/2019/03/21/2019-03-21_conda/"/>
      <url>/hexo/2019/03/21/2019-03-21_conda/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Ubuntu里默认python为2.7，如何修改为python3版本呢，可以利用alternatives机制更改py3为默认。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100 </span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150</span><br></pre></td></tr></table></figure></p><h2 id="conda-命令"><a href="#conda-命令" class="headerlink" title="conda 命令"></a>conda 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##创建环境</span></span><br><span class="line">conda create -n py3 python=3  <span class="comment">##安装python3最新版本</span></span><br><span class="line">conda create -n py2 python=2  <span class="comment">##安装python2最新版本</span></span><br><span class="line">conda create -n py_33 python=3.3 </span><br><span class="line"><span class="comment">##删除环境</span></span><br><span class="line">conda env remove -n py_33</span><br><span class="line"><span class="comment">##列出所有环境</span></span><br><span class="line">conda env list </span><br><span class="line"><span class="comment">##进入离开环境</span></span><br><span class="line">conda activate py3</span><br><span class="line">conda deactivate</span><br><span class="line"><span class="comment">## 搜索，安装，删除包</span></span><br><span class="line">conda search numpy</span><br><span class="line">conda install package_name <span class="comment">##conda install numpy=1.10</span></span><br><span class="line">conda remove package_name</span><br><span class="line"><span class="keyword">for</span> example： <span class="built_in">which</span> masc2 在系统中查找masc2这个软件</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看安装哪些包</span></span><br><span class="line">conda list</span><br><span class="line">conda upgrade --all：更新所有包</span><br><span class="line"><span class="comment">## 导出环境</span></span><br><span class="line">conda activate py3</span><br><span class="line">conda env <span class="built_in">export</span> &gt; py3.yaml</span><br><span class="line"><span class="comment">## 导入环境</span></span><br><span class="line">conda env create -f py3.yaml</span><br><span class="line"><span class="comment">## 共享环境</span></span><br><span class="line">pip freeze</span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加源</span></span><br><span class="line"><span class="comment">####清华源</span></span><br><span class="line"><span class="comment">#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span><br><span class="line"><span class="comment">#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge </span></span><br><span class="line"><span class="comment">#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span></span><br><span class="line">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes   <span class="comment"># 设置搜索时显示通道地址</span></span><br><span class="line"><span class="comment">#去掉~/.condarc里面的 defaults 能加快速度  改https为http也有助于连接</span></span><br><span class="line"><span class="comment">#附加库</span></span><br><span class="line">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud//pytorch/</span><br><span class="line">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###中科大源</span></span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes</span><br><span class="line"></span><br><span class="line"><span class="comment">##换回默认源：</span></span><br><span class="line">conda config --remove-key channels</span><br><span class="line"></span><br><span class="line"><span class="comment">##取消base环境自动激活</span></span><br><span class="line">conda config --show | grep auto_activate_base</span><br><span class="line">conda config --<span class="built_in">set</span> auto_activate_base False</span><br><span class="line"></span><br><span class="line"><span class="comment">## conda 清理</span></span><br><span class="line">conda clean -p      //删除没有用的包</span><br><span class="line">conda clean -t      //tar打包</span><br><span class="line">conda clean -y -all //删除所有的安装包及cache</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markov Affinity-based Graph Imputation of Cells (MAGIC)</title>
      <link href="/hexo/2019/03/18/2019-03-18_magic/"/>
      <url>/hexo/2019/03/18/2019-03-18_magic/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>MAGIC (Markov Affinity-based Graph Imputation of Cells), is a method for imputing missing values restoring structure of large biological datasets.</p><p><a href="https://www.cell.com/cell/abstract/S0092-8674(18" target="_blank" rel="noopener">David van Dijk, et al. <strong>Recovering Gene Interactions from Single-Cell Data Using Data Diffusion</strong>. 2018. <em>Cell</em>.</a>30724-4)</p><p><a href="https://github.com/KrishnaswamyLab/MAGIC" target="_blank" rel="noopener">https://github.com/KrishnaswamyLab/MAGIC</a></p><p>数据 </p><ul><li><a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE114397" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE114397</a></li><li><a href="https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP145597" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP145597</a></li></ul>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>t-SNE：最好的降维方法之一</title>
      <link href="/hexo/2019/03/18/2019-03-18_t-NSE/"/>
      <url>/hexo/2019/03/18/2019-03-18_t-NSE/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://taoshengxu.github.io/DocumentGit/html/t-SNE最好的降维方法之一.html">教程</a> </p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Data mining </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>单样本得分 Single sample scoring-EMT score</title>
      <link href="/hexo/2019/03/17/2019-03-17_Single_sample_scoring/"/>
      <url>/hexo/2019/03/17/2019-03-17_Single_sample_scoring/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="1-文献"><a href="#1-文献" class="headerlink" title="1.文献"></a>1.文献</h1><ul><li>Foroutan, M., et al. (2018). “Single sample scoring of molecular phenotypes.” BMC Bioinformatics 19(1): 404. （这篇文章需要好好学习一下）</li><li>Hanzelmann, S., et al. (2013). “GSVA: gene set variation analysis for microarray and RNA-seq data.” BMC Bioinformatics 14: 7.</li></ul><h1 id="2-计算方法"><a href="#2-计算方法" class="headerlink" title="2. 计算方法"></a>2. 计算方法</h1><p>Foroutan, M 文章中有详细总结，包括自己提出的共5种。前4种集成在GSVA package中。singscore有自己单独的package。</p><blockquote><p>Several approaches have been developed to score individual samples against molecular signatures (or gene sets), including: ssGSEA (single sample gene set enrichment analysis) [1], GSVA (gene set variation analysis)[2], PLAGE (pathway level analysis of gene expression)[3] and combining z-scores [4]. Hänzelmann et al. (2013) implemented all four of these methods within the R/Bioconductor package GSVA and performed a detailed comparison [2, 5].</p></blockquote><ul><li>ssGSEA (single sample gene set enrichment analysis) [1]</li><li><a href="https://bioconductor.org/packages/release/bioc/html/GSVA.html" target="_blank" rel="noopener">GSVA</a> (gene set variation analysis)[2], </li><li>PLAGE (pathway level analysis of gene expression)[3] </li><li>combining z-scores [4].</li><li><a href="https://bioconductor.org/packages/release/bioc/vignettes/singscore/inst/doc/singscore.html" target="_blank" rel="noopener">singscore</a></li></ul><h1 id="3-其他问题"><a href="#3-其他问题" class="headerlink" title="3. 其他问题"></a>3. 其他问题</h1><p>学习这个是因为需要计算EMT score. 所以从道理上这些方法都可以用来计算EMT score. 但是EMT score计算还有一个经典文章。文章中关于EMT score 采用A sample using a two-sample Kolmogorov–Smirnov test (2KS).</p><p><code>Tan, T. Z., et al. (2014). &quot;Epithelial-mesenchymal transition spectrum quantification and its efficacy in deciphering survival and drug responses of cancer patients.&quot; EMBO Mol Med 6(10): 1279-1293.</code></p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EMT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Circos plot</title>
      <link href="/hexo/2019/03/15/2019-03-16_Circos_plot/"/>
      <url>/hexo/2019/03/15/2019-03-16_Circos_plot/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>由<a href="http://mkweb.bcgsc.ca/" target="_blank" rel="noopener">Martin Krzywinski</a>等人开发的Circos，一出现便引起轰动，它打破了常规基因组学数据可视化的思路，通过对差异化交互数据的多维度展示，可以从不同层次全方位描述组学信息，让组学数据展示变成了艺术品。由于其实用性、美观性，Circos如今也广泛应用于社交网络、交通运输等领域。 <img src="https://wenlongshen.github.io/img/post/2017_03_19_circos.png" alt="circos"><span class="image-caption-center">circos</span></p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>激光捕获显微切割</title>
      <link href="/hexo/2019/03/15/2019-03-15_laser_captuer/"/>
      <url>/hexo/2019/03/15/2019-03-15_laser_captuer/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="激光捕获显微切割（Laser-capture-microdissection，LCM）"><a href="#激光捕获显微切割（Laser-capture-microdissection，LCM）" class="headerlink" title="激光捕获显微切割（Laser capture microdissection，LCM）"></a>激光捕获显微切割（Laser capture microdissection，LCM）</h3><p>在不破坏组织结构，保存要捕获的细胞和其周围组织形态完整的前提下，直接从冰冻或石蜡包埋组织切片中获取目标细胞 ，通常用于从组织中精确地分离一个单一的细胞。</p><p>机体组织包含有上百种不同的细胞，这些细胞各自与周围的细胞、基质、血管、腺体、炎症细胞或<a href="https://baike.baidu.com/item/%E5%85%8D%E7%96%AB%E7%BB%86%E8%83%9E" target="_blank" rel="noopener">免疫细胞</a>相互粘附。<code>在正常或发育中的组织器官内，细胞内信号、相邻细胞的信号以及体液刺激作用于特定的细胞，使这些细胞表达不同的基因并且发生复杂的分子变化。在病理状态下，如果同一类型的细胞发生了相同的分子改变，则这种分子改变对于疾病的发生可能起着关键性的作用。</code>然而，发生相同分子改变的细胞可能只占组织总体积的很小一部分；同时，研究的目标细胞往往被其它组织成分所环绕。为了对疾病发生过程中的组织损害进行分子水平分析，分离出纯净的目标细胞就显得非常必要。1996年，美国国立卫生院（NIH）国家肿瘤研究所的开发出激光捕获显微切割技术，次年，美国Arcturus Engineering公司成功研制激光捕获显微切割系统，并实现商品化销售。应用该技术可以在显微镜直视下快速、准确获取所需的单一细胞亚群，甚至单个细胞，从而成功解决了组织中细胞异质性问题。这项技术现已成为美国“肿瘤基因组解剖计划”的一项支撑技术  。</p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Cell line 细胞系理解</title>
      <link href="/hexo/2019/03/15/2019-03-15_cell_line/"/>
      <url>/hexo/2019/03/15/2019-03-15_cell_line/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一直以来对cell line 有错误认识。癌症细胞系是从基于癌细胞样本培养的细胞株系。</p><p><a href="http://www.bioon.com/article/6725882.html" target="_blank" rel="noopener">http://www.bioon.com/article/6725882.html</a></p><p>细胞系是癌症研究的支柱。这些细胞群体，通常是从患者的<a href="http://xy.bioon.com/course_video/chang-fei-bian-ma-RNA-yu-zhong-liu959063.html" target="_blank" rel="noopener">肿瘤</a><code>样本中收集并在实验室中进行培养的，可在体外无限制地生长</code>，从而能够用于从基础遗传研究到药物发现的一切应用中。不过，虽然科学家们认为即便单个细胞系持续地生长和分裂，它们仍然保持<a href="http://xy.bioon.com/course_video/zhong-guo-ren-qun-ying-yang-he-yi-chuan-yin416058.html" target="_blank" rel="noopener">遗传</a>上的一致性，但是在一项新的研究中，来自美国布罗德研究员、达纳-法伯癌症研究所、哈佛医学院、麻省总医院、布莱根妇女医院和霍华德-休斯医学研究所的研究人员发现它们实际上能够以大幅改变它们对药物作出反应的方式进行进化。细胞系中的<a href="http://news.bioon.com/tags/%E7%BB%86%E8%83%9E%E6%A0%AA/" target="_blank" rel="noopener">细胞株</a>持续进化—-可能是由它们生长的实验室条件触发的—-可能有助于解释为何使用相同细胞系的不同研究通常会产生相互矛盾的结果。</p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>TP53突变型和TP53野生型BRCA病人的差异分析结果（jimmy）</title>
      <link href="/hexo/2019/03/13/2019-03-13_TP53_BRCA/"/>
      <url>/hexo/2019/03/13/2019-03-13_TP53_BRCA/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这个教程有很多学习练习之处，首先解决了国内安装Bioconductor的问题。</p><hr><p><a href="https://taoshengxu.github.io/DocumentGit/html/TP53%E7%AA%81%E5%8F%98%E5%9E%8B%E5%92%8CTP53%E9%87%8E%E7%94%9F%E5%9E%8BBRCA%E7%97%85%E4%BA%BA%E7%9A%84%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90%E7%BB%93%E6%9E%9C.html">教程</a></p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>乳腺癌专题</title>
      <link href="/hexo/2019/03/13/2019-03-13_breastcancer/"/>
      <url>/hexo/2019/03/13/2019-03-13_breastcancer/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>今天2019年基金申请提交完毕。未来几年我想以乳腺癌为主开展研究，所以有必要对乳腺癌相关知识做一个梳理，以备不时之查。</p><hr><h2 id="乳腺癌免疫组化指标"><a href="#乳腺癌免疫组化指标" class="headerlink" title="乳腺癌免疫组化指标"></a>乳腺癌免疫组化指标</h2><ul><li><p>ER： estrogen receptors（雌激素受体）</p></li><li><p>PR： progesterone receptors（黄体酮，孕激素受体）</p></li><li><p>HER2：（人类表皮生长因子2受体）</p></li></ul><p><code>受体：这是内部和细胞表面发现的蛋白质。这些受体蛋白质是细胞的“眼睛”和“耳朵”，从血液中的物质接收信息，然后告诉细胞做什么</code>。</p><h2 id="乳腺癌临床亚型"><a href="#乳腺癌临床亚型" class="headerlink" title="乳腺癌临床亚型"></a>乳腺癌临床亚型</h2><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/乳腺癌内在亚型.pdf">乳腺癌临床亚型</a>        <code>总结的很充分完全(必看）</code><br><a href="https://taoshengxu.github.io/DocumentGit/pdf/乳腺癌分子分型研究进展_卢振东.pdf">乳腺癌分子分型研究进展</a></p><p><strong>大约2/3的女性患有激素受体阳性的乳腺癌。</strong>健康乳房细胞内部和表面的激素受体接受来自<strong>雌激素和黄体酮</strong>的信息。激素附着在受体上，并提供帮助细胞继续生长和功能良好的说明。大部分但不是全部的乳腺癌细胞也具有这些激素受体。</p><p><strong>较小比例的乳腺癌（约20-30％）具有太多的HER2受体。</strong>在正常健康的乳腺细胞中，HER2受体接收刺激其生长的信号。然而，由于HER2受体过多，乳腺癌细胞生长和分裂过快。<strong>荷尔蒙疗法和HER2靶向疗法</strong>的作用是干扰荷尔蒙和HER2对乳腺癌的影响，这可以帮助减缓甚至阻止乳腺癌细胞的生长。</p><p>在实验室中约<strong>10-20％的乳腺癌对激素受体和HER2都呈阴性</strong>，这意味着它们是三重阴性的。包括他莫昔芬，Arimidex（化学名称：anastrozole），Aromasin（化学名称：依西美坦），Femara（化学名称：来曲唑）和Faslodex（化学名称：氟维司群）等荷尔蒙疗法不太可能对癌症产生反应。赫赛汀（化学名：曲妥珠单抗）或泰克（化学名：拉帕替尼），三阴性乳腺癌也不太可能响应靶向HER2的药物。</p><h2 id="三阴乳腺癌更具侵略性-jimmy-2017-11-17"><a href="#三阴乳腺癌更具侵略性-jimmy-2017-11-17" class="headerlink" title="三阴乳腺癌更具侵略性(jimmy  2017-11-17)"></a>三阴乳腺癌更具侵略性(jimmy  <em>2017-11-17</em>)</h2><p><a href="https://www.breastcancer.org/symptoms/diagnosis/trip_neg?what" target="_blank" rel="noopener">https://www.breastcancer.org/symptoms/diagnosis/trip_neg?what</a></p><blockquote><p><strong>Triple Negative Breast Cancer，TNBC</strong> (Basal-like)：(ER-), (PR-), and (HER2-)</p></blockquote><p>研究表明，三阴性乳腺癌更可能扩散到乳房外，更有可能在治疗后复发（回来）。这些风险在治疗后的头几年似乎是最大的。例如，2007年对加拿大1600多名女性进行的一项研究发现，患有三阴性乳腺癌的女性在乳房外复发的风险较高 - 但仅在前三年。其他研究也得出了类似的结论。随着岁月的流逝，三阴乳腺癌复发的风险与其他类型乳腺癌的风险水平相似。</p><h4 id="三阴乳腺癌的五年生存率也往往较低。"><a href="#三阴乳腺癌的五年生存率也往往较低。" class="headerlink" title="三阴乳腺癌的五年生存率也往往较低。"></a>三阴乳腺癌的五年生存率也往往较低。</h4><p>2007年对50,000多名乳腺癌各阶段妇女的研究发现，77％的三阴乳腺癌患者至少存活5年，而其他类型乳腺癌患者中有93％存活。对2007年出版的1,600多名女性进行的另一项研究发现，患有三重阴性乳腺癌的女性在诊断后的5年内死亡的风险较高，但在这段时间之后没有。这些研究和其他研究中的复发和生存率是所有三阴乳腺癌患者的平均值。诸如乳腺癌的分级和阶段等因素将影响个体女性的预后。倾向于比其他类型的乳腺癌更高的等级。等级越高，癌细胞就越不会像正常的，健康的乳房细胞的外观和生长模式。在1至3的范围内，三阴乳腺癌通常是3级。</p><h4 id="三阴乳腺癌通常是称为“基底样”的细胞类型。"><a href="#三阴乳腺癌通常是称为“基底样”的细胞类型。" class="headerlink" title="三阴乳腺癌通常是称为“基底样”的细胞类型。"></a>三阴乳腺癌通常是称为“基底样”的细胞类型。</h4><p>文献： <code>基底细胞样癌：一种被新近认识的乳腺癌亚型</code></p><p>“基底样（basal-like）”意味着细胞类似乳房管道的基底细胞。这是研究人员使用<strong>基因分析技术确定的新型乳腺癌亚型</strong>。像其他类型的乳腺癌一样，基底样癌症可以与家族史相关联，也可以在没有任何明显的家族联系的情况下发生。基底样癌症往往是更积极，更高级别的癌症 - 就像三重阴性乳腺癌。<strong>据信大多数三阴性乳腺癌是基底样细胞类型。</strong>因为三阴性乳腺癌往往比其他类型的侵略性而且导致患者通常不是现有成熟疗法的候选人，如激素疗法和赫赛汀治疗。但是三阴性乳腺癌可以通过化疗和放疗来治疗，而新的治疗方法如PARP抑制剂则显示了前景。研究人员对三阴性乳腺癌给予了极大的关注，并努力寻找新的更好的治疗方法。这是乳腺癌领域研究的一个非常热门的领域，“医学肿瘤学家兼Breastcancer.org专业顾问委员会成员George Sledge博士说。 药物开发商，制药公司和乳腺癌实验室研究人员对这些患者的靶向治疗有着浓厚的兴趣。“ <a href="https://mp.weixin.qq.com/s?__biz=MzAxMDkxODM1Ng==&amp;mid=2247485359&amp;idx=2&amp;sn=07094a66e3bb835553af718406ef7250&amp;chksm=9b484714ac3fce024c171c583acdccdf00f702171c48ce6a0f1fbe2448af7d891423b48b377c&amp;mpshare=1&amp;scene=1&amp;srcid=1117qSnJZELcsCtZGLzAc6WS##" target="_blank" rel="noopener">阅读原文</a></p><hr><h2 id="整合近5万乳腺癌患者发现BRCA基因缺陷者倾向于患TNBC"><a href="#整合近5万乳腺癌患者发现BRCA基因缺陷者倾向于患TNBC" class="headerlink" title="整合近5万乳腺癌患者发现BRCA基因缺陷者倾向于患TNBC"></a><strong>整合近5万乳腺癌患者发现BRCA基因缺陷者倾向于患TNBC</strong></h2><p>发表于 Front. Pharmacol., 21 August 2018，也算是新鲜出炉了，文章链接是 <a href="https://doi.org/10.3389/fphar.2018.00909" target="_blank" rel="noopener">https://doi.org/10.3389/fphar.2018.00909</a> ，该研究整合了527篇文章里面的近5万乳腺癌患者信息，分为：</p><ul><li>868 <em>BRCA1</em> mutations (<em>BRCA1 Mut</em>) carriers</li><li>739 <em>BRCA2</em> mutations (<em>BRCA2 Mut</em>) carriers</li><li>45,263 non-carriers.</li></ul><p>但是文章的结论平淡无奇，就是携带BRCA1基因的先天性的病理性突变的比携带BRCA2基因的先天性的病理性突变的要显著的高发TNBC，当然高于那些没有这两个基因的其他人。有着BRCA1基因的先天性的病理性突变的肿瘤通常更恶性，突变数量也更多。</p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>华山</title>
      <link href="/hexo/2019/01/27/2019-01-27_huashan/"/>
      <url>/hexo/2019/01/27/2019-01-27_huashan/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>1月26日华山，</p><p>幼习知五岳，加之论剑于华山之武侠情使华山于五岳之中名气最盛。自古华山一条道，华山险峻是不曾涉足华山的的粗识。华山俊险盛名也让我心驰神往。</p><p>在过去，如果山太过于险，我也不确定有攀越之勇气。但是我性格中总是存在一种创新，打破常规，尝试新事物的执念。</p>]]></content>
      
      <categories>
          
          <category> 行者无疆 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>2019</title>
      <link href="/hexo/2018/12/31/2018-12-31_newyear/"/>
      <url>/hexo/2018/12/31/2018-12-31_newyear/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>岁月不居，时节如流。2018！</p><p>少年听雨歌楼上。红烛昏罗帐。壮年听雨客舟中。江阔云低、断雁叫西风。而今听雨僧庐下。鬓已星星也。悲欢离合总无情。一任阶前、点滴到天明。</p><p>昨夜寒蛩不住鸣。惊回千里梦，已三更。起来独自绕阶行。人悄悄，帘外月胧明。白首为功名。旧山松竹老，阻归程。欲将心事付瑶琴。知音少，弦断有谁听。</p><p>当年万里觅封侯，匹马戍梁州。关河梦断何处？尘暗旧貂裘。胡未灭，鬓先秋，泪空流。此生谁料，心在天山，身老沧洲。</p>]]></content>
      
      <categories>
          
          <category> 闲情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感怀 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>英语-表达-写作</title>
      <link href="/hexo/2018/12/28/2025-01-01-English_expression/"/>
      <url>/hexo/2018/12/28/2025-01-01-English_expression/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-短语"><a href="#1-短语" class="headerlink" title="1. 短语"></a>1. 短语</h2><h4 id="1-数据多"><a href="#1-数据多" class="headerlink" title="1. 数据多"></a>1. 数据多</h4><p>huge amounts of high-dimensional data<br>accumulate at an unprecedented rate<br>heavily used  广泛应用<br>an enormous collection of data sets<br>in a speed unmatchable by the human’s capacity of data procession<br>we are experiencing <code>a rapid growth in volume and diversity of biological data, presenting an increasing challenge</code> for biologists.<br>A <code>plethora</code> of studies have shown that 大量的研究表明</p><h4 id="2-肿瘤表达"><a href="#2-肿瘤表达" class="headerlink" title="2. 肿瘤表达"></a>2. 肿瘤表达</h4><p>ten distinct malignancies 恶性肿瘤<br>each single-tissue cancer type 单个癌症类型<br>drives cancer initiation and progression<br>dynamics in cancer invasion and metastasis, progression, treatment response and survival.<br>therapeutic regimes 治疗方案<br>patient <code>cohort</code> 病人群体<br>Inferred orthologous reactions 推断同源反应<br>Complex genetic traits复杂的遗传性状<br>DNA重排（rearrangement），基因扩增（amplification），点突变（point mutation）<br>coordinated amplification in the DNA （ DNA 扩增） overexpression in the mRNA （基因的过度表达）<br>epigenetic plasticity 表观遗传可塑性<br>in a plethora of cancer-related events, including cancer <code>invasion, metastasis, resistance to cell death, refractory responses to chemotherapy and immunotherapy, immunosuppression and the acquisition of stem cell-like properties</code><br> <code>morphological and biochemical characteristics typical of</code>形态和生化特征<br><code>Immunohistochemistry staining</code>（免疫组化染色） heatmap of Oestrogen Receptor (ER), Progesterone Receptor (PR), and <code>Epi (CDH1, ERBB2, CK19)</code> as well as <code>Mes (CK5, VIM, CDH2)</code><br>stromal microenvironment 基质环境</p><p>a disease of significant morbidity and mortality 发病率和致死率</p><h4 id="3-短语"><a href="#3-短语" class="headerlink" title="3. 短语"></a>3. 短语</h4><p><u><code>the best finish ever for</code></u> 有史以来最好的…<br>readily intelligible to 容易理解<br><em>ubiquitous</em>  in a variety of domains 普遍存在的<br>presents challenges for effective and efficient data management<br>a critical issue is known as the curse of dimensionality<br>Alternatively authors 另外的作者<br>are statistically significant 统计显著<br>quite intuitively 非常直观的<br>weak yet consistent 弱但是一致<br>discriminative power 辨别力<br>frequently used scoring criteria/metrics<br>different feature panels<br>physically preserved  完整的保存<br><code>vastly applied in</code> biomedical research<br>single data view 单组数据视角<br>substantial challenges 重大的挑战<br><code>in terms of</code> readability and interpretability 关于可读性性和可解释性( 依据/在xxx方面)<br>pros and cons 正面和反面<br><code>each single-tissue cancer type</code> can be further divided into many molecular subtypes.<br>Cancers are typically classified using <code>pathologic criteria</code> that rely heavily <code>on the tissue site of origin</code>（ 在原组织中）<br> Yet, there is still <strong>no quantitative measure</strong>(定量) to assess the <strong>interplay</strong>（相互影响） between xxx and xxx<br>we derived a method for  我们推出一种方法<br>extensively cross-referenced to other resources 广泛的交叉引用<br>is of <code>paramount</code> importance in a <code>plethora</code> of 至关重要的 在大量的<br> still inadequately documented 没有被充分的研究<br><code>This is so even after</code> 在xxxx之后情况也是<br>a panel of一组</p><hr><p>true positive<br>also known as</p><h2 id="2-句子"><a href="#2-句子" class="headerlink" title="2. 句子"></a>2. 句子</h2><p>EMT scoring <code>is thus a promising, versatile tool for</code> the objective and systematic investigation of EMT roles</p><p>Biological processes are intricate and the relationships among features (such as genes, metabolites and<br>proteins) are complicated and evolve with dynamic physiological processes. Thus, analyzing data from the perspective of networks could provide more information to understand the associations among features and discover important markers.</p><p>Elevated BCAR4 expression is correlated with higher metastatic potential and shorter survival time of breast cancer patients.<br>In recently years, high-throughput experimental techniques such as microarray, RNA-Seq and mass spectrometry can <strong>detect <em>cellular molecules</em> at systems-level</strong>. These kinds of analyses generate huge quantitaties of data, which need to be given a <strong>biological interpretation.</strong> <a href="https://bioconductor.org/packages/release/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html" target="_blank" rel="noopener">Cite</a></p><p>for <strong>identifying predominant biological themes of a collection of genes</strong>.</p><p>Through genomic profiling of 259 men with prostate cancer, scientists have identified five groups of prostate cancer with distinct DNA signatures.</p><p>The discovery represents a major advance as researchers can now begin trying to tailor therapies to those subtypes. The approach has worked well in breast cancer and helped millions avoid the unnecessary cost, pain and time spent on treatments that are destined to fail.</p><p>[Obama touts ‘lifesaving’ potential of personalized medicine] Such work is the backbone of President Obama’s $215 million precision medicine initiative announced in January, which aims to pioneer a new approach to how we treat disease by moving away from a “one-size-fits-all” approach to medicine to one that takes into account things like a person’s genetic makeup, or the genetic profile of a tumor.</p><p>[A new way to study cancer and its treatments] The prostate cancer study, reported in EBioMedicine, used samples from 482 tumors from those men, who were part of studies in Cambridge, Britain, and Stockholm. The scientists identified 100 genes associated with prostate cancer, including 94 that had not been previously associated with the disease. Most importantly, they found that a small subset of the 100 genes predicted poor prognosis better than any other method that had been used in a clinic setting.</p><p>[He had a 3.5-pound tumor and months to live. Here’s how he survived.] “For the first time in prostate cancer this study demonstrates the importance of integrated genomic analyses incorporating both benign and tumour tissue data in identifying molecular alterations leading to the generation of robust gene sets that are predictive of clinical outcome in independent patient cohorts,” the researchers wrote. They said this information could be “used for early detection of aggressive cases in a clinical setting, and inform treatment decisions.” </p><p><strong>One of the most challenging problems in biomedical research is to understand the underlying mechanisms of complex diseases. Great effort has been spent on finding the genes associated to diseases (Botstein and Risch, 2003; Kann, 2009). However, more and more evidences indicate that most human diseases cannot be attributed to a single gene but arise due to complex interactions among multiple genetic variants and environmental risk factors (Hirschhorn and Daly, 2005).</strong> Several databases have been developed storing associations between genes and diseases such as CTDTM (Davis,et al., 2014), OMIM® (Hamosh et al., 2005) and the NHGRI-EBI GWAS catalog (Welter et al., 2014). Each of these databases focuses on different aspects of the phenotype-genotype relationship, and due to the nature of the database curation process, they are not complete. Hence, integration of different databases with information extracted from the literature is needed to allow a comprehensive view of the state of the art knowledge within this research field. With this need in mind, we have created DisGeNET.<a href="http://www.disgenet.org/web/DisGeNET/menu/home" target="_blank" rel="noopener">cite</a></p><h2 id="3-论文表达"><a href="#3-论文表达" class="headerlink" title="3.论文表达"></a>3.论文表达</h2><p><strong><code>Visualization</code></strong> plays an important role in understanding and in knowledge advancement on base of empirical data. In initial stages of research of such type, visualization helps to explore the data interactively, to get an overview and to create meaningful hypotheses; in later stages, it helps to control and to steer partially automated analyses; and in final stages, where fully automated data analysis procedures are available, it provides summaries of the results that foster our understanding. Visualization is also instrumental in design, being it e.g. the design of pharmaceutically active compounds, the design of objects, or the planning of clinical therapies.</p><p>Since full feature selection comparison is very hard to do without a full predictive model that combines both the feature selection and the classification stages we test feature selection methods in combination with one classification method – the linear support vector machine (SVM) (<strong>后面文章会用到</strong>)    </p><p>The availability of large cohorts and multiple different types of data at the DNA, RNA, and protein levels has made the Pan-Cancer project possible.</p><p>Despite obvious uniqueness of each tumor type at the molecular level， researchers are finding common large-scale processes that might be involved in multiple different tumors.</p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>英语-词汇</title>
      <link href="/hexo/2018/12/28/2025-01-01-English_word/"/>
      <url>/hexo/2018/12/28/2025-01-01-English_word/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>curated 整理<br>morphology 形态学<br>plethora 过多过剩</p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Granger因果检验</title>
      <link href="/hexo/2018/12/28/2018-12-29_GrangerCausality/"/>
      <url>/hexo/2018/12/28/2018-12-29_GrangerCausality/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://blog.csdn.net/baimafujinji/article/details/6496224" target="_blank" rel="noopener">https://blog.csdn.net/baimafujinji/article/details/6496224</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">GDP &lt;- c(<span class="number">3645.2</span>, <span class="number">4062.6</span>, <span class="number">4545.6</span>, <span class="number">4889.5</span>, <span class="number">5330.5</span>, <span class="number">5985.6</span>, <span class="number">7243.8</span>, <span class="number">9040.7</span>, <span class="number">10274.4</span>, <span class="number">12050.6</span>, <span class="number">15036.8</span>, <span class="number">17000.9</span>, <span class="number">18718.3</span>, <span class="number">21826.2</span>, <span class="number">26937.3</span>, <span class="number">35260.0</span>, <span class="number">48108.5</span>, <span class="number">59810.5</span>, <span class="number">70142.5</span>, <span class="number">78060.8</span>, <span class="number">83024.3</span>, <span class="number">88479.2</span>, <span class="number">98000.5</span>, <span class="number">108068.2</span>, <span class="number">119095.7</span>)</span><br><span class="line">consumption &lt;- c(<span class="number">1759.1</span>, <span class="number">2014</span>, <span class="number">2336.9</span>, <span class="number">2627.5</span>, <span class="number">2867.1</span>, <span class="number">3220.9</span>, <span class="number">3689.5</span>, <span class="number">4627.4</span>, <span class="number">5293.5</span>, </span><br><span class="line"> <span class="number">6047.6</span>, <span class="number">7532.1</span>, <span class="number">8778</span>, <span class="number">9435</span>, <span class="number">10544.5</span>, <span class="number">12312.2</span>, <span class="number">15696.2</span>, <span class="number">21446.1</span>, <span class="number">28072.9</span>, <span class="number">33660.3</span>, <span class="number">36626.3</span>,  <span class="number">38821.8</span>, <span class="number">41914.9</span>, <span class="number">46987.8</span>, <span class="number">50708.8</span>, <span class="number">55076.4</span>)</span><br><span class="line">stat_data &lt;- data.frame(GDP, consumption)</span><br><span class="line">ts.data &lt;-ts(stat_data,frequency=<span class="number">1</span>,start=c(<span class="number">1978</span>))</span><br><span class="line">ts.data</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(lmtest)</span><br><span class="line">grangertest(GDP ~ consumption, order = <span class="number">2</span>, data =ts.data)</span><br><span class="line">Granger causality test</span><br><span class="line"></span><br><span class="line">Model <span class="number">1</span>: GDP ~ Lags(GDP, <span class="number">1</span>:<span class="number">2</span>) + Lags(consumption, <span class="number">1</span>:<span class="number">2</span>)</span><br><span class="line">Model <span class="number">2</span>: GDP ~ Lags(GDP, <span class="number">1</span>:<span class="number">2</span>)</span><br><span class="line">  Res.Df Df      <span class="literal">F</span> Pr(&gt;<span class="literal">F</span>)</span><br><span class="line"><span class="number">1</span>     <span class="number">18</span>                 </span><br><span class="line"><span class="number">2</span>     <span class="number">20</span> -<span class="number">2</span> <span class="number">1.6437</span>  <span class="number">0.221</span></span><br><span class="line"></span><br><span class="line">grangertest(consumption ~ GDP, order = <span class="number">2</span>, data =ts.data)</span><br><span class="line">Granger causality test</span><br><span class="line"></span><br><span class="line">Model <span class="number">1</span>: consumption ~ Lags(consumption, <span class="number">1</span>:<span class="number">2</span>) + Lags(GDP, <span class="number">1</span>:<span class="number">2</span>)</span><br><span class="line">Model <span class="number">2</span>: consumption ~ Lags(consumption, <span class="number">1</span>:<span class="number">2</span>)</span><br><span class="line">  Res.Df Df      <span class="literal">F</span>    Pr(&gt;<span class="literal">F</span>)    </span><br><span class="line"><span class="number">1</span>     <span class="number">18</span>                        </span><br><span class="line"><span class="number">2</span>     <span class="number">20</span> -<span class="number">2</span> <span class="number">13.411</span> <span class="number">0.0002717</span> ***</span><br><span class="line">---</span><br><span class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></span><br></pre></td></tr></table></figure><p>显然，检验结果表示，当原假设为“consumption不是引起GDP变化的Granger原因”，P值为0.221&gt;0.05，我们无法拒绝原假设；而当原假设为“GDP不是引起consumption变化的Granger原因”时，P值为0.0002717&lt;0.05，我们可以拒绝原假设。因此，可以证明：GDP是consumption的Granger原因。<br>之前计算结果中的P值也可以用下面代码算得（注意当p=2时，观测值的数量n=25-2=23）：</p><blockquote><p>pf(1.6437, 2, 18, lower.tail = FALSE)<br>[1] 0.220978<br>pf(13.411, 2, 18, lower.tail = FALSE)<br>[1] 0.0002716636</p></blockquote>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据挖掘 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>EMT（Epithelial-mesenchymal transition）</title>
      <link href="/hexo/2018/12/28/2018-12-29_EMT/"/>
      <url>/hexo/2018/12/28/2018-12-29_EMT/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://www.sohu.com/a/155204532_777125" target="_blank" rel="noopener">http://www.sohu.com/a/155204532_777125</a></p><h2 id="上皮细胞-间充质转化-Epithelial-mesenchymal-transition"><a href="#上皮细胞-间充质转化-Epithelial-mesenchymal-transition" class="headerlink" title="上皮细胞-间充质转化 Epithelial-mesenchymal transition"></a>上皮细胞-间充质转化 Epithelial-mesenchymal transition</h2><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/上皮细胞鄄间充质细胞转换.pdf">EMT中文综述文章_张秀红2012</a></p><p><code>上皮细胞在一些因素的作用下,失去极性及细胞间紧密连接和黏附连接, 获得了浸润性和游走迁移能力, 变成具备间质细胞形态和特性的细胞的改变。这种行为是可逆的。</code></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/EMT.jpg" alt=""></p><p>​         生理状态下，上皮细胞-间质细胞转换在胚胎发育过程中具有十分重要的地位。在胚胎发育过程中出现最早的EMT转换是在原肠胚形成期时发生的间质细胞形成和中胚层形成事件。正常组织在受损的情况下，也会在损伤部位的上皮细胞发生EMT的转化，从而完成损伤修复过程。在EMT的发生过程中,上皮细胞极性丧失,与周围细胞和基质细胞的接触减少,细胞间的相互作用减少,细胞迁移和运动能力增强,同时细胞表型发生改变,丧失上皮表型,如角蛋白丝,E- cadherin, E-cadherin水平下降可以导致细胞的粘附力降低,使细胞获得易于侵袭和转移的特性, E- cadherin表达的丢失已经被认为是EMT最显著的特征。同时细胞获得间质表型,如Vimentin, N-cadherin等表达升高。</p><p>目前EMT被看成是导致肿瘤进展的病理过程。在肿瘤的恶性演进过程中，EMT使得肿瘤细胞得以侵袭和转移，还可能使肿瘤细胞逃逸某些因素诱导的凋亡。因此，在肿瘤的研究中，EMT的发生预示肿瘤恶性进程。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/EMT2.jpg" alt=""></p><h4 id="EMT发生常见的标志分子"><a href="#EMT发生常见的标志分子" class="headerlink" title="EMT发生常见的标志分子"></a><strong>EMT发生常见的标志分子</strong></h4><blockquote><p>1.表达减少：E- cadherin，Cytokeratin，ZO-1。</p><p>2.表达增多：N- cadherin，Vinmentin，Snail1，Snail2，Twi st，MMP-2，MMP-3，MMP-9。</p><p>3.活性增加：ILK，Rho。</p></blockquote><h4 id="参与EMT过程控制的常见信号通路"><a href="#参与EMT过程控制的常见信号通路" class="headerlink" title="参与EMT过程控制的常见信号通路"></a>参与EMT过程控制的常见信号通路</h4><blockquote><p>TGF-β信号通路。</p><p>Wnt信号通路。</p><p>Notch信号通路。</p><p>SMAD信号通路。</p><p>PI3K-AKT-MTOR信号通路。</p></blockquote><h4 id="EMT-markers-Thiery-et-al-2009"><a href="#EMT-markers-Thiery-et-al-2009" class="headerlink" title="EMT markers (Thiery et al, 2009)"></a>EMT markers (Thiery et al, 2009)</h4><blockquote><p><strong>Mes</strong>： TWIST1, SNAI1, SNAI2, VIM,CDH2, ZEB1<br><strong>Epi</strong> ：and CDH1, DDR1, ERBB2, ERBB3, KRT19</p></blockquote><hr><h2 id="Nature：肿瘤有7种EMT状态，从而找出肿瘤转移的罪魁祸首！"><a href="#Nature：肿瘤有7种EMT状态，从而找出肿瘤转移的罪魁祸首！" class="headerlink" title="Nature：肿瘤有7种EMT状态，从而找出肿瘤转移的罪魁祸首！"></a>Nature：肿瘤有7种EMT状态，从而找出肿瘤转移的罪魁祸首！</h2><p><a href="http://www.medsci.cn/article/show_article.asp?id=698113604632" target="_blank" rel="noopener">http://www.medsci.cn/article/show_article.asp?id=698113604632</a></p><p>肿瘤异质性使同一个肿瘤中不同细胞的存在差别。这些不同点对疾病<a href="http://www.medsci.cn/guideline/list.do?q=%E8%AF%8A%E6%96%AD" target="_blank" rel="noopener">诊断</a>、预后及治疗有着主要的影响。各种不同的机制已经被用于解释这种肿瘤异质性，例如上皮细胞-间充质细胞转化（EMT）——上皮肿瘤细胞失去黏附能力获得间充质细胞迁移性能力以促进转移和耐药性的过程。EMT程度不同的细胞就会呈现出不同的转移性质，但是这种可能性还没有被探索过。</p><p>Ievgenia Pastushenko及其同事使用了先进的会自发发生EMT的皮肤癌和乳腺癌小鼠模型。通过<a href="http://www.medsci.cn/article/list.do?q=%E7%AD%9B%E6%9F%A5" target="_blank" rel="noopener">筛查</a>数百个单克隆抗体识别细胞表面分子以及进行单细胞RNA测序，研究人员发现皮肤癌和乳腺癌组织中至少存在7中EMT状态不同的癌细胞亚群：从完全上皮化（分化）到完全的间充质化（未分化）状态，中间是各种杂化状态。作者发现不是所有的癌细胞功能都相同、转移能力都相同，而处于杂化EMT状态的癌细胞导致了<a href="http://edu.medsci.cn/course/search.do?w=%E8%82%BA%E7%99%8C" target="_blank" rel="noopener">肺癌</a>转移。“我们发现处于EMT早期的肿瘤细胞（而非完全EMT的肿瘤细胞）是最可能转移的群体，这与我们的认知相悖，这也是最令人兴奋的地方。”这项研究还找到了控制不同肿瘤转化状态的基因调节网络和肿瘤微环境。</p><p>Ievgenia Pastushenko， et al.<a href="http://www.nature.com/articles/s41586-018-0040-3" target="_blank" rel="noopener">Identification of the tumour transition states occurring during EMT</a>.Nature.18 April 2018</p><p><a href="http://www.csi.nus.edu.sg/bioinfo/index.php" target="_blank" rel="noopener">http://www.csi.nus.edu.sg/bioinfo/index.php</a></p><p>In general, significant p-value and a positive score means a sample is more mesenchymal, whereas significant p-value and a negative score means a sample is more epithelial. P-value that does not<br>reach significant level is considered as intermediate. Please do not hesitate to contact me if you have any queries regarding the score or the computation of the score.</p>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EMT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gene ID 转换汇总</title>
      <link href="/hexo/2018/12/28/2018-12-28_geneIDtransform/"/>
      <url>/hexo/2018/12/28/2018-12-28_geneIDtransform/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-clusterProfiler包"><a href="#1-clusterProfiler包" class="headerlink" title="1.  clusterProfiler包"></a>1.  <a href="https://bioconductor.org/packages/release/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html" target="_blank" rel="noopener">clusterProfiler</a>包</h2><h4 id="bitr-基因集ID转换"><a href="#bitr-基因集ID转换" class="headerlink" title="bitr: 基因集ID转换"></a><code>bitr</code>: 基因集ID转换</h4><p>认为是最便捷基因 名转换方式，封装的非常好。依赖于<code>org.Hs.eg.db</code>注释包。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- c(<span class="string">"GPX3"</span>,  <span class="string">"GLRX"</span>,   <span class="string">"LBP"</span>,   <span class="string">"CRYAB"</span>, <span class="string">"DEFB1"</span>, <span class="string">"HCLS1"</span>,   <span class="string">"SOD2"</span>,   <span class="string">"HSPA2"</span>,</span><br><span class="line">       <span class="string">"ORM1"</span>,  <span class="string">"IGFBP1"</span>, <span class="string">"PTHLH"</span>, <span class="string">"GPC3"</span>,  <span class="string">"IGFBP3"</span>,<span class="string">"TOB1"</span>,    <span class="string">"MITF"</span>,   <span class="string">"NDRG1"</span>,</span><br><span class="line">       <span class="string">"NR1H4"</span>, <span class="string">"FGFR3"</span>,  <span class="string">"PVR"</span>,   <span class="string">"IL6"</span>,   <span class="string">"PTPRM"</span>, <span class="string">"ERBB2"</span>,   <span class="string">"NID2"</span>,   <span class="string">"LAMB1"</span>,</span><br><span class="line">       <span class="string">"COMP"</span>,  <span class="string">"PLS3"</span>,   <span class="string">"MCAM"</span>,  <span class="string">"SPP1"</span>,  <span class="string">"LAMC1"</span>, <span class="string">"COL4A2"</span>,  <span class="string">"COL4A1"</span>, <span class="string">"MYOC"</span>,</span><br><span class="line">       <span class="string">"ANXA4"</span>, <span class="string">"TFPI2"</span>,  <span class="string">"CST6"</span>,  <span class="string">"SLPI"</span>,  <span class="string">"TIMP2"</span>, <span class="string">"CPM"</span>,     <span class="string">"GGT1"</span>,   <span class="string">"NNMT"</span>,</span><br><span class="line">       <span class="string">"MAL"</span>,   <span class="string">"EEF1A2"</span>, <span class="string">"HGD"</span>,   <span class="string">"TCN2"</span>,  <span class="string">"CDA"</span>,   <span class="string">"PCCA"</span>,    <span class="string">"CRYM"</span>,   <span class="string">"PDXK"</span>,</span><br><span class="line">       <span class="string">"STC1"</span>,  <span class="string">"WARS"</span>,  <span class="string">"HMOX1"</span>, <span class="string">"FXYD2"</span>, <span class="string">"RBP4"</span>,   <span class="string">"SLC6A12"</span>, <span class="string">"KDELR3"</span>, <span class="string">"ITM2B"</span>)</span><br><span class="line">eg = bitr(x, fromType=<span class="string">"SYMBOL"</span>, toType=<span class="string">"ENTREZID"</span>, OrgDb=<span class="string">"org.Hs.eg.db"</span>)</span><br><span class="line">head(eg)</span><br><span class="line"><span class="keyword">library</span>(org.Hs.eg.db)</span><br><span class="line">keytypes(org.Hs.eg.db)</span><br><span class="line"><span class="comment">##  [1] "ACCNUM"       "ALIAS"        "ENSEMBL"      "ENSEMBLPROT" </span></span><br><span class="line"><span class="comment">##  [5] "ENSEMBLTRANS" "ENTREZID"     "ENZYME"       "EVIDENCE"    </span></span><br><span class="line"><span class="comment">##  [9] "EVIDENCEALL"  "GENENAME"     "GO"           "GOALL"       </span></span><br><span class="line"><span class="comment">## [13] "IPI"          "MAP"          "OMIM"         "ONTOLOGY"    </span></span><br><span class="line"><span class="comment">## [17] "ONTOLOGYALL"  "PATH"         "PFAM"         "PMID"        </span></span><br><span class="line"><span class="comment">## [21] "PROSITE"      "REFSEQ"       "SYMBOL"       "UCSCKG"      </span></span><br><span class="line"><span class="comment">## [25] "UNIGENE"      "UNIPROT"</span></span><br></pre></td></tr></table></figure><h2 id="2-biomaRt软件包获得在线注释信息"><a href="#2-biomaRt软件包获得在线注释信息" class="headerlink" title="2. biomaRt软件包获得在线注释信息"></a>2. biomaRt软件包获得在线注释信息</h2><p><a href="http://blog.qiuworld.com:8080/archives/3281" target="_blank" rel="noopener">http://blog.qiuworld.com:8080/archives/3281</a> </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">"biomaRt"</span>)<span class="comment">#载入biomaRt包</span></span><br><span class="line">mart &lt;- useMart(<span class="string">"ensembl"</span>,<span class="string">"hsapiens_gene_ensembl"</span>)</span><br><span class="line">entrez &lt;- c(<span class="string">"673"</span>,<span class="string">"7157"</span>,<span class="string">"837"</span>)</span><br><span class="line">getBM(attributes=c(<span class="string">"entrezgene"</span>,<span class="string">"hgnc_symbol"</span>,<span class="string">"ensembl_gene_id"</span>,<span class="string">"affy_hg_u133_plus_2"</span>),filters =<span class="string">"entrezgene"</span>,values = entrez,mart = mart)</span><br><span class="line"><span class="comment">#如何知道有哪些服务器，以及这些服务器上哪些数据库呢？用listMarts(),listDatasets()两个函数</span></span><br><span class="line">marts &lt;- listMarts() </span><br><span class="line">head(marts)<span class="comment">#查看当前可用的数据源</span></span><br><span class="line">ensembl &lt;- useMart(<span class="string">"ensembl"</span>)<span class="comment">#使用ensembl数据源</span></span><br><span class="line">datasets &lt;- listDatasets(ensembl);</span><br><span class="line">datasets[<span class="number">1</span>:<span class="number">10</span>,]<span class="comment">#查看ensembl中可用数据库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如何获取getBM中attributes，filters？用listFilters()以及listAttributes()</span></span><br><span class="line">mart &lt;- useMart(<span class="string">"ensembl"</span>,<span class="string">"hsapiens_gene_ensembl"</span>)</span><br><span class="line">filters &lt;- listFilters(mart)</span><br><span class="line">filters[grepl(<span class="string">"entrez"</span>, filters[,<span class="number">1</span>]),]</span><br><span class="line">listAttributes(mart)</span><br><span class="line">attributes[grepl(<span class="string">"^ensembl|hgnc"</span>, attributes[,<span class="number">1</span>]),]</span><br></pre></td></tr></table></figure><p>biomaRt还会有很多SNP, alternative splicing, exon, intron, 5’utr, 3’utr等等信息。</p><h2 id="3-原生org-Hs-eg-db"><a href="#3-原生org-Hs-eg-db" class="headerlink" title="3. 原生org.Hs.eg.db"></a>3. 原生org.Hs.eg.db</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#AnnotationDb objects</span></span><br><span class="line"> columns(x)</span><br><span class="line"> keytypes(x)</span><br><span class="line"> keys(x, keytype, <span class="keyword">...</span>)</span><br><span class="line"> select(x, keys, columns, keytype, <span class="keyword">...</span>)</span><br><span class="line"> mapIds(x, keys, column, keytype, <span class="keyword">...</span>, multiVals)</span><br><span class="line"> saveDb(x, file)</span><br><span class="line"> loadDb(file, packageName=<span class="literal">NA</span>)</span><br></pre></td></tr></table></figure><p><a href="http://davetang.org/muse/2013/05/23/using-the-bioconductor-annotation-packages/" target="_blank" rel="noopener">http://davetang.org/muse/2013/05/23/using-the-bioconductor-annotation-packages/</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(org.Hs.eg.db)</span><br><span class="line">cols(org.Hs.eg.db)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"ENTREZID"</span><span class="string">"PFAM"</span><span class="string">"IPI"</span><span class="string">"PROSITE"</span><span class="string">"ACCNUM"</span><span class="string">"ALIAS"</span><span class="string">"CHR"</span></span><br><span class="line">[<span class="number">8</span>] <span class="string">"CHRLOC"</span><span class="string">"CHRLOCEND"</span><span class="string">"ENZYME"</span><span class="string">"MAP"</span><span class="string">"PATH"</span><span class="string">"PMID"</span><span class="string">"REFSEQ"</span></span><br><span class="line">[<span class="number">15</span>] <span class="string">"SYMBOL"</span><span class="string">"UNIGENE"</span><span class="string">"ENSEMBL"</span><span class="string">"ENSEMBLPROT"</span><span class="string">"ENSEMBLTRANS"</span><span class="string">"GENENAME"</span><span class="string">"UNIPROT"</span></span><br><span class="line">[<span class="number">22</span>] <span class="string">"GO"</span><span class="string">"EVIDENCE"</span><span class="string">"ONTOLOGY"</span><span class="string">"GOALL"</span><span class="string">"EVIDENCEALL"</span><span class="string">"ONTOLOGYALL"</span><span class="string">"OMIM"</span></span><br><span class="line">[<span class="number">29</span>] <span class="string">"UCSCKG"</span></span><br><span class="line">keytypes(org.Hs.eg.db)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"ENTREZID"</span><span class="string">"PFAM"</span><span class="string">"IPI"</span><span class="string">"PROSITE"</span><span class="string">"ACCNUM"</span><span class="string">"ALIAS"</span><span class="string">"CHR"</span></span><br><span class="line">[<span class="number">8</span>] <span class="string">"CHRLOC"</span><span class="string">"CHRLOCEND"</span><span class="string">"ENZYME"</span><span class="string">"MAP"</span><span class="string">"PATH"</span><span class="string">"PMID"</span><span class="string">"REFSEQ"</span></span><br><span class="line">[<span class="number">15</span>] <span class="string">"SYMBOL"</span><span class="string">"UNIGENE"</span><span class="string">"ENSEMBL"</span><span class="string">"ENSEMBLPROT"</span><span class="string">"ENSEMBLTRANS"</span><span class="string">"GENENAME"</span><span class="string">"UNIPROT"</span></span><br><span class="line">[<span class="number">22</span>] <span class="string">"GO"</span><span class="string">"EVIDENCE"</span><span class="string">"ONTOLOGY"</span><span class="string">"GOALL"</span><span class="string">"EVIDENCEALL"</span><span class="string">"ONTOLOGYALL"</span><span class="string">"OMIM"</span></span><br><span class="line">[<span class="number">29</span>] <span class="string">"UCSCKG"</span></span><br><span class="line"><span class="comment">#which chromosome does the gene TP53 reside?</span></span><br><span class="line">select(org.Hs.eg.db, keys=<span class="string">"TP53"</span>, cols=c(<span class="string">"SYMBOL"</span>, <span class="string">"CHR"</span>), keytype=<span class="string">"SYMBOL"</span>)</span><br><span class="line">SYMBOL CHR</span><br><span class="line"><span class="number">1</span>   TP53  <span class="number">17</span></span><br><span class="line"><span class="comment">#find out the keys for the keytype CHR</span></span><br><span class="line">keys(org.Hs.eg.db, <span class="string">"CHR"</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"19"</span><span class="string">"12"</span><span class="string">"8"</span><span class="string">"14"</span><span class="string">"3"</span><span class="string">"2"</span><span class="string">"17"</span><span class="string">"16"</span><span class="string">"9"</span><span class="string">"X"</span><span class="string">"6"</span><span class="string">"1"</span><span class="string">"7"</span><span class="string">"10"</span><span class="string">"11"</span><span class="string">"22"</span><span class="string">"5"</span><span class="string">"18"</span><span class="string">"15"</span><span class="string">"Y"</span><span class="string">"20"</span></span><br><span class="line">[<span class="number">22</span>] <span class="string">"21"</span><span class="string">"4"</span><span class="string">"13"</span><span class="string">"MT"</span><span class="string">"Un"</span></span><br><span class="line"><span class="comment">#this question was asked in the lecture</span></span><br><span class="line"><span class="comment">#How many genes are there on chromosome 22 are in this annotation database?</span></span><br><span class="line"><span class="comment">#store all symbols</span></span><br><span class="line">symbol &lt;- keys(org.Hs.eg.db, <span class="string">"SYMBOL"</span>)</span><br><span class="line"><span class="comment">#how many gene symbols</span></span><br><span class="line">length(symbol)</span><br><span class="line">[<span class="number">1</span>] <span class="number">43819</span></span><br><span class="line"><span class="comment">#distribution of gene symbols along the chromosomes</span></span><br><span class="line">symbol_chr &lt;- select(org.Hs.eg.db, keys=symbol, cols=c(<span class="string">"CHR"</span>,<span class="string">"SYMBOL"</span>), keytype=<span class="string">"SYMBOL"</span>)</span><br><span class="line">Warning message:</span><br><span class="line">In .generateExtraRows(tab, keys, jointype) :</span><br><span class="line">  <span class="string">'select'</span> resulted <span class="keyword">in</span> <span class="number">1</span>:many mapping between keys and <span class="keyword">return</span> rows</span><br><span class="line"><span class="comment">#the above warning is for duplicated rows</span></span><br><span class="line"><span class="comment">#double check how many gene symbols are in symbol_chr</span></span><br><span class="line">length(symbol_chr$SYMBOL)</span><br><span class="line">[<span class="number">1</span>] <span class="number">43868</span></span><br><span class="line"><span class="comment">#unique ones</span></span><br><span class="line">length(unique(symbol_chr$SYMBOL))</span><br><span class="line">[<span class="number">1</span>] <span class="number">43819</span></span><br><span class="line"><span class="comment">#distribution of symbols on chromosomes</span></span><br><span class="line">table(symbol_chr$CHR)</span><br><span class="line">   <span class="number">1</span>   <span class="number">10</span>   <span class="number">11</span>   <span class="number">12</span>   <span class="number">13</span>   <span class="number">14</span>   <span class="number">15</span>   <span class="number">16</span>   <span class="number">17</span>   <span class="number">18</span>   <span class="number">19</span>    <span class="number">2</span>   <span class="number">20</span>   <span class="number">21</span>   <span class="number">22</span>    <span class="number">3</span>    <span class="number">4</span>    <span class="number">5</span>    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span> </span><br><span class="line"><span class="number">4173</span> <span class="number">1604</span> <span class="number">2524</span> <span class="number">1945</span> <span class="number">1124</span> <span class="number">1679</span> <span class="number">1475</span> <span class="number">1597</span> <span class="number">2079</span>  <span class="number">674</span> <span class="number">2245</span> <span class="number">2812</span> <span class="number">1017</span>  <span class="number">546</span> <span class="number">1029</span> <span class="number">2306</span> <span class="number">1702</span> <span class="number">1887</span> <span class="number">2432</span> <span class="number">2307</span> <span class="number">1586</span> </span><br><span class="line">   <span class="number">9</span>   MT   Un    X    Y </span><br><span class="line"><span class="number">1790</span>   <span class="number">37</span>  <span class="number">219</span> <span class="number">2087</span>  <span class="number">535</span></span><br><span class="line">plot(table(symbol_chr$CHR), xlab=<span class="string">"Chromosomes"</span>, ylab=<span class="string">"Number of genes"</span>)</span><br><span class="line"><span class="comment">#Find the GO IDs for the TP53 gene</span></span><br><span class="line">tp53_go &lt;- select(org.Hs.eg.db, keys=<span class="string">"TP53"</span>, cols=c(<span class="string">"SYMBOL"</span>,<span class="string">"GO"</span>), keytype=<span class="string">"SYMBOL"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##转换</span></span><br><span class="line">ensids &lt;- c(<span class="string">"ENSG00000130720"</span>, <span class="string">"ENSG00000103257"</span>, <span class="string">"ENSG00000156414"</span>,</span><br><span class="line"><span class="string">"ENSG00000144644"</span>,<span class="string">"ENSG00000159307"</span>, <span class="string">"ENSG00000144485"</span>)</span><br><span class="line">cols &lt;- c(<span class="string">"SYMBOL"</span>, <span class="string">"GENENAME"</span>，<span class="string">"ENTREZID"</span>)</span><br><span class="line">select(org.Hs.eg.db, keys=ensids, columns=cols, keytype=<span class="string">"ENSEMBL"</span>)</span><br><span class="line">或者：</span><br><span class="line">select(org.Hs.eg.db, keys=<span class="string">"BRCA1"</span>, columns= c(<span class="string">"ENSEMBL"</span>，<span class="string">"UNIGENE"</span>,<span class="string">"ENTREZID"</span>,<span class="string">"CHR"</span>,<span class="string">"GO"</span>,<span class="string">"GENENAME"</span>), keytype=<span class="string">"SYMBOL"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gene </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>滕王阁序</title>
      <link href="/hexo/2018/12/27/2018-12-27_tengwanggexu/"/>
      <url>/hexo/2018/12/27/2018-12-27_tengwanggexu/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。</p><p>时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿；临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。</p><p>披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津，青雀黄龙之舳。云销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨；雁阵惊寒，声断衡阳之浦。</p><p>遥襟甫畅，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人？萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？</p><p>嗟乎！时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！</p><p><code>勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？</code></p><p>呜乎！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵俱成。请洒潘江，各倾陆海云尔：</p><p>滕王高阁临江渚，佩玉鸣鸾罢歌舞。</p><p>画栋朝飞南浦云，珠帘暮卷西山雨。</p><p>闲云潭影日悠悠，物换星移几度秋。</p><p>阁中帝子今何在？槛外长江空自流。</p>]]></content>
      
      <categories>
          
          <category> 闲情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古散文 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo</title>
      <link href="/hexo/2018/12/27/2018-12-27_Hexoblog/"/>
      <url>/hexo/2018/12/27/2018-12-27_Hexoblog/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>去年发现Hugo blog之时，喜甚。以Hugo+R  <a href="https://github.com/rstudio/blogdown" target="_blank" rel="noopener"><strong>blogdown</strong></a>+Yihui <a href="https://github.com/yihui/hugo-ivy" target="_blank" rel="noopener">hugo-ivy</a>主题搭建了Blog，所有内容采用markdown编辑。久用之，存稍许缺憾，一是公式显示问题，二是缺少搜索功能。</p><p>今年学习动态贝叶斯网络，偶尔翻到<a href="https://longaspire.github.io/blog/" target="_blank" rel="noopener">李环博士Blog</a>, 非常喜爱该blog框架，满足我对Blog所有目前需求（1）文章列表显示，（2）搜索，（3）其他。细细探究一番，了解为Hexo，遂邮件索问，得其指引，再细加研究一晚，基本探索完毕。</p><p>去年用hugo-ivy之时，觉得自己可能会坚持到forever, 但是现在想重新更换主题框架。觉世事难料，也非人性善变，处不同阶段层次而已。我想有一点不太会变，blog作为学习记录会在很长一段时间维持。</p><hr><hr><h3 id="在Hexo中使用mathjax渲染数学公式-成功"><a href="#在Hexo中使用mathjax渲染数学公式-成功" class="headerlink" title="在Hexo中使用mathjax渲染数学公式(成功)"></a>在Hexo中使用mathjax渲染数学公式(成功)</h3><p><a href="https://blog.csdn.net/u013282174/article/details/80666123" target="_blank" rel="noopener">https://blog.csdn.net/u013282174/article/details/80666123</a></p><ol><li><p>更换Hexo的markdown渲染引擎</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm uninstall hexo-renderer-marked --save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm -g install hexo-renderer-kramed --save</span></span><br></pre></td></tr></table></figure></li><li><p>解决语义冲突</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#修改node_modules<span class="symbol">\k</span>ramed<span class="symbol">\l</span>ib<span class="symbol">\r</span>ules<span class="symbol">\i</span>nline.js中的第11行：</span><br><span class="line">//  escape: /^<span class="symbol">\\</span>([<span class="symbol">\\</span>`*&#123;&#125;<span class="symbol">\[</span><span class="symbol">\]</span>()#$+<span class="symbol">\-</span>.!_&gt;])/,</span><br><span class="line">escape: /^<span class="symbol">\\</span>([`*<span class="symbol">\[</span><span class="symbol">\]</span>()#$+<span class="symbol">\-</span>.!_&gt;])/,</span><br><span class="line"></span><br><span class="line">#第20行：</span><br><span class="line">//  em: /^<span class="symbol">\b</span>_((?:__|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)_<span class="symbol">\b</span>|^<span class="symbol">\*</span>((?:<span class="symbol">\*</span><span class="symbol">\*</span>|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)<span class="symbol">\*</span>(?!<span class="symbol">\*</span>)/,</span><br><span class="line">em: /^<span class="symbol">\*</span>((?:<span class="symbol">\*</span><span class="symbol">\*</span>|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)<span class="symbol">\*</span>(?!<span class="symbol">\*</span>)/,</span><br></pre></td></tr></table></figure></li><li><p>安装mathjax插件</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="built_in">math</span> <span class="comment">--save</span></span><br><span class="line">hexo install <span class="built_in">math</span></span><br></pre></td></tr></table></figure></li><li><p>在文章的front-matter中添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Title</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>在主题_config.yml中添加支持mathjax(如果有)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>在blog  _config.yml中添加支持mathjax</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#cdn: //cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></span><br><span class="line"><span class="attr">  cdn:</span> <span class="string">//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span></span><br></pre></td></tr></table></figure><h3 id="在hexo中使用mathjax的方法-不成功"><a href="#在hexo中使用mathjax的方法-不成功" class="headerlink" title="在hexo中使用mathjax的方法(不成功)"></a>在hexo中使用mathjax的方法(不成功)</h3><p><a href="https://blog.csdn.net/littlehaes/article/details/84370393" target="_blank" rel="noopener">https://blog.csdn.net/littlehaes/article/details/84370393</a></p><p>之前总是使用mathtype写公式然后再上传图片, 速度太慢了, 而且公式出错后不容易修改, 所以开始用mathjax, 但是原生hexo并不能直接渲染mathjax.</p><p>可以先换成淘宝的下载源,增加npm下载速度: </p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> registry <span class="comment">https:</span>//<span class="comment">registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h3 id="一-使用Kramed-代替-Marked"><a href="#一-使用Kramed-代替-Marked" class="headerlink" title="一. 使用Kramed 代替 Marked"></a>一. 使用Kramed 代替 Marked</h3><p>渲染引擎kramed支持mathjax</p><blockquote><p>npm uninstall hexo-renderer-marked —save<br>npm install hexo-renderer-kramed —save</p></blockquote><p>打开/node_modules/hexo-renderer-kramed/lib/renderer.js</p><blockquote><p>// Change inline math rule<br>function formatText(text) {<br>  // Fit kramed’s rule: <script type="math/tex">+ \1 +</script><br>  return text.replace(/<code>\$(.*?)\$</code>/g, ‘$$$$$1$$$$’);<br>}</p><p>更改为：</p><p>// Change inline math rule<br>function formatText(text) {<br>  // Fit kramed’s rule: <script type="math/tex">+ \1 +</script><br>​    return text;<br>}</p></blockquote><h3 id="二-使用hexo-renderer-mathjax-代替-hexo-math"><a href="#二-使用hexo-renderer-mathjax-代替-hexo-math" class="headerlink" title="二:使用hexo-renderer-mathjax 代替 hexo-math"></a>二:使用hexo-renderer-mathjax 代替 hexo-math</h3><blockquote><p>npm uninstall hexo-math —save<br>npm install hexo-renderer-mathjax —save</p></blockquote><h3 id="三-更新-Mathjax-的-CDN-链接"><a href="#三-更新-Mathjax-的-CDN-链接" class="headerlink" title="三:更新 Mathjax 的 CDN 链接"></a>三:更新 Mathjax 的 CDN 链接</h3><p>打开node_modules/hexo-renderer-mathjax/mathjax.html<br>将最下面&lt;script src=后的url改为</p><blockquote><p><a href="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML" target="_blank" rel="noopener">https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML</a></p></blockquote><h3 id="四-更改默认转义规则"><a href="#四-更改默认转义规则" class="headerlink" title="四. 更改默认转义规则"></a>四. 更改默认转义规则</h3><p>打开:博客根目录/node_modules/kramed/lib/rules/inline.js</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//escape: /^<span class="symbol">\\</span>([<span class="symbol">\\</span>`*&#123;&#125;<span class="symbol">\[</span><span class="symbol">\]</span>()#$+<span class="symbol">\-</span>.!_&gt;])/,      第11行，将其修改为</span><br><span class="line">escape: /^<span class="symbol">\\</span>([`*<span class="symbol">\[</span><span class="symbol">\]</span>()#$+<span class="symbol">\-</span>.!_&gt;])/,</span><br><span class="line">//em: /^<span class="symbol">\b</span>_((?:__|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)_<span class="symbol">\b</span>|^<span class="symbol">\*</span>((?:<span class="symbol">\*</span><span class="symbol">\*</span>|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)<span class="symbol">\*</span>(?!<span class="symbol">\*</span>)/,    第20行，将其修改为</span><br><span class="line">em: /^<span class="symbol">\*</span>((?:<span class="symbol">\*</span><span class="symbol">\*</span>|[<span class="symbol">\s</span><span class="symbol">\S</span>])+?)<span class="symbol">\*</span>(?!<span class="symbol">\*</span>)/,</span><br></pre></td></tr></table></figure><h3 id="五-开启mathjax"><a href="#五-开启mathjax" class="headerlink" title="五:开启mathjax"></a>五:开启mathjax</h3><p>在主题的配置文件中,我用的是next主题,那么在其_config.yml中找到mathjax并设置为true</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  cdn:</span> <span class="string">//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span></span><br></pre></td></tr></table></figure><p>写文章时,加上mathjax: true<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="string">/8/3</span> <span class="number">18</span><span class="string">:20:00</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">hexo</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">hexo博客MathJax公式渲染</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><hr><hr><h3 id="hexo-命令"><a href="#hexo-命令" class="headerlink" title="hexo 命令"></a>hexo 命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装hexo</span></span><br><span class="line">npm install hexo-cli g</span><br><span class="line">npm install hexo --save</span><br><span class="line"><span class="meta">#</span><span class="bash">安装hexo server</span></span><br><span class="line">npm install hexo-server --save</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 hexo-deployer-git</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成并部署</span></span><br><span class="line">hexo g -d</span><br><span class="line"><span class="meta">#</span><span class="bash">清理</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#实时浏览</span></span><br><span class="line"><span class="keyword">cd</span> hexo_project/</span><br><span class="line">npm install hexo-browsersync <span class="params">--save</span></span><br><span class="line">hexo s</span><br><span class="line">[BS] Access URLs:</span><br><span class="line"> <span class="params">--------------------------------------</span></span><br><span class="line">          UI: http:<span class="string">//localhost</span><span class="function">:3001</span></span><br><span class="line"> <span class="params">--------------------------------------</span></span><br><span class="line"> UI External: http:<span class="string">//192.168.191.1</span><span class="function">:3001</span></span><br><span class="line"> <span class="params">--------------------------------------</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http:<span class="string">//localhost</span><span class="function">:4000</span>/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>贝叶斯网络(Bayesian Network)</title>
      <link href="/hexo/2018/12/26/2018-12-26_bayesnetwork/"/>
      <url>/hexo/2018/12/26/2018-12-26_bayesnetwork/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>引用1： <a href="https://blog.csdn.net/gdp12315_gu/article/details/50002195" target="_blank" rel="noopener">https://blog.csdn.net/gdp12315_gu/article/details/50002195</a><br>引用2： <a href="https://longaspire.github.io/blog/动态贝叶斯网络/" target="_blank" rel="noopener">https://longaspire.github.io/blog/动态贝叶斯网络/</a></p><h4 id="贝叶斯网络（Bayesian-Networks）"><a href="#贝叶斯网络（Bayesian-Networks）" class="headerlink" title="贝叶斯网络（Bayesian Networks）"></a>贝叶斯网络（Bayesian Networks）</h4><p>贝叶斯网络（Bayesian Networks）也被称为信念网络（Belif Networks）或者因果网络（Causal Networks），是描述数据变量之间依赖关系的一种图形模式，是一种用来进行推理的模型。</p><h3 id="贝叶斯网络结构"><a href="#贝叶斯网络结构" class="headerlink" title="贝叶斯网络结构"></a>贝叶斯网络结构</h3><p>贝叶斯网的网络结构是一个有向无环图（Directed Acyclic Graph），其中每个结点代表一个属性或者数据变量，结点间的弧代表属性（数据变量） 间的概率依赖关系。一条弧由一个属性（数据变量）A指向另外一个属性（数据变量）B说明属性A的取值可以对属性B的取值产生影响，由于是有向无环图，A、B间不会出现有向回路。在贝叶斯网当中，直接的原因结点（弧尾）A叫做其结果结点（弧头）B的双亲结点（parents），B叫做A的孩子结点（children）。如果从一个结点X有一条有向通路指向Y，则称结点X为结点Y的祖先（ancestor），同时称结点Y为结点X的后代（descendent）。 在贝叶斯网中没有输入的结点被称作根结点（root），其他结点被统称为非根结点。</p><p>贝叶斯网络当中的弧表达了结点间的依赖关系，如果<strong>两个结点间有弧连接说明两者之间有因果联系</strong>，反之如果两者之间没有直接的弧连接或者是间接的有向联通路径，则说明两者之间没有依赖关系，即是相互独立的。结点间的相互独立关系是贝叶斯网络当中很重要的一个属性，可以大大减少建网过程当中的计算量。使用贝叶斯网络结构可以使人清晰的得出属性结点间的关系，进而也使得使用贝叶斯网进行推理和预测变得相对容易实现。</p><h3 id="条件概率表"><a href="#条件概率表" class="headerlink" title="条件概率表"></a>条件概率表</h3><p>一个原因结点的出现会导致某个结果的产生时，都是一个概率的表述，而不是必然的，这样就需要为每个结点添加一个<strong>条件概率</strong>。一个节点在其双亲节点（直接的原因接点）的不同取值组合条件下取不同属性值的概率，就构成了该结点的条件概率表。</p><p><strong>贝叶斯网络中的条件概率表是结点的条件概率的集合。当使用贝叶斯网络进行推理时，实际上是使用条件概率表当中的先验概率和已知的证据结点来计算所查询的目标结点的后验概率的过程。</strong></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/bayes_network1.jpg" alt=""></p><p>根据条件概率和贝叶斯网络结构，我们不仅可以由祖先接点推出后代的结果，还可以通过后代当中的证据结点来向前推出祖先取各种状态的概率。 </p><p>贝叶斯网可以处理不完整和带有噪声的数据集，因此被日益广泛的应用于各种推理程序当中。同时由于可以方便的结合已有的先验知识，将已有的经验与数据集的潜在知识相结合，可以弥补相互的片面性与缺点，因此越来越受到研究者的喜欢。</p><h3 id="贝叶斯网络分类"><a href="#贝叶斯网络分类" class="headerlink" title="贝叶斯网络分类"></a>贝叶斯网络分类</h3><ol><li>静态贝叶斯网络： 反映了一系列变量间的概率依存关系，没有考虑时间因素对变量的影响。</li><li>动态贝叶斯网络： 沿时间轴变化的贝叶斯网络。</li></ol><hr><p>以下部分全文引用（<a href="https://longaspire.github.io/blog/动态贝叶斯网络/）" target="_blank" rel="noopener">https://longaspire.github.io/blog/动态贝叶斯网络/）</a></p><hr><h3 id="动态贝叶斯网络（Dynamic-Bayesian-Network-DBN）"><a href="#动态贝叶斯网络（Dynamic-Bayesian-Network-DBN）" class="headerlink" title="动态贝叶斯网络（Dynamic Bayesian Network, DBN）"></a>动态贝叶斯网络（Dynamic Bayesian Network, DBN）</h3><p>动态贝叶斯网络是一种暂态模型（transient state model），能够学习变量间的概率依存关系及其随时间变化的规律，其主要用于时序数据建模。<strong>动态</strong>并不是说网络结构随着时间的变化而发生变化，而是样本数据，或者说观测数据，随着时间的变化而变化。隐马尔可夫模型（hidden markov model, HMM）是一种结构最简单的动态贝叶斯网络。线性状态空间模型（linear state-space models）如<a href="https://longaspire.github.io/blog/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2" target="_blank" rel="noopener">卡尔曼滤波</a>也可以等价看做是动态贝叶斯网络的一种形式。</p><p>一般 的 DBN有两个特点。网络 的 拓扑结构在每个时间片(time slice,快照) 内是相同的，而片与片之间通过类似的弧进行连接。</p><p>为方便处理，假设动态贝叶斯网络满足2个条件：</p><ul><li>网络拓扑结构不随时间发生改变，即除去初始时刻，其余时刻的变量及其概率依存关系相同；</li><li>满足<strong>一阶马尔可夫条件</strong>，即给定当前时刻的状态后，未来时刻的状态和先前时刻的状态无关。</li></ul><p>满足上述条件后，动态贝叶斯网络可以看作是贝叶斯网络在时间序列上的展开，如下图所示。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/bayes_network2.jpg" alt=""></p><p>上图中，贝叶斯网络的过程可以看成：新的数据集$M$在初始数据集$C$的基础上获得，使用贝叶斯公式结合初始数据集$C$得到估计值$O$。<br>而动态贝叶斯网络的过程中，每个时刻的变量$X_{t} = \{ C_{t}, M_{t}, O_{t} \}$的概率依存关系随时间$t$变化。在任意时刻，变量$M_{t}$的状态由变量$C_{t}$决定，而$O_{t}$的状态由$C_{t}$和$M_{t}$共同决定，即变量集$X_{t}$的联合概率分布为：</p><blockquote><p>$P(X_{t}) = P(C_{t}, M_{t}, O_{t}) = P(C_{t})P(M_{t} \mid C_{t})P(O_{t} \mid C_{t}, M_{t})$</p></blockquote><p>考虑$O_{t}$和$C_{t}$间的条件概率分布：</p><blockquote><p>$P(O_{t} \mid C_{t}) = \frac{P(C_{t}, M_{t}, O_{t})}{P(C_{t})}$<br>$= \frac{\sum_{m} P(C_{t}, O_{t}, M_{t} = m)}{P(C_{t})}$<br>$= \frac{\sum_{m} P(C_{t})P(M_{t} = m \mid C_{t}) P(O_{t} \mid C_{t}, M_{t} = m)}{P(C_{t})}$<br>$= \sum_{m} P(M_{t} = m \mid C_{t}) P(O_{t} \mid C_{t}, M_{t} = m)$</p></blockquote><p>在时刻$t-1$和$t$之间，变量集$C_{t}$的状态发生了转移，因此，变量集$X_{t}$的转移概率为$P(X_{t} \mid X_{t-1}) = P(C_{t} \mid C_{t-1})$。注意，$M_{t}$和$O_{t}$都是由$C_{t}$决定的。</p><p>可以看出，动态贝叶斯网络通过网络拓扑结构反映变量间的概率依存关系及随时间变化的情况，其不但能够对变量所对应的不同特征之间的依存关系进行概率建模，而且对特征之间的时序关系也能很好的加以反映。因此，适合对既具有特征相关性又具有时序相关性的复杂特征进行建模。</p><h2 id="2-DBN模型结构"><a href="#2-DBN模型结构" class="headerlink" title="2. DBN模型结构"></a>2. DBN模型结构</h2><p><img src="https://taoshengxu.github.io/DocumentGit/img/bayes_network3.jpg" alt="每个时间片对应一个静态网络，时间片间通过时间关系进行互联"><span class="image-caption-center">每个时间片对应一个静态网络，时间片间通过时间关系进行互联</span></p><p>正如上图所示的典型结构，DBN的结构上具有一些显著的特点<sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="[Dynamic Bayesian Networks: A State of the Art](https://ris.utwente.nl/ws/portalfiles/portal/27679465).">[4]</span></a></sup>：</p><ul><li>每个时间片对应的静态模型是一定的，可以看做多个随机变量（状态）交互影响的结构</li><li>每个时刻的某一个状态可能依赖于上一个时刻的某几个状态和/或当前时刻的某几个状态</li></ul><p>我们可以通过T个时刻的隐状态变量$X = \{ x_1, \ldots, x_T \}$和观测变量$Y = \{ y_1, \ldots, y_T \}$的概率分布函数来描述其对应的DBN，如下：</p><blockquote><p>$P(X, Y) = P(x_1)\prod\limits_{t=2}^{T}P(x_t \mid x_{t-1})\prod\limits_{t=1}^{T}P(y_t \mid x_t)$</p></blockquote><p>为了完整地对一个特定的DBN进行描述，我们需要确定以下参数：</p><ul><li>状态转移的概率密度函数$P(X_t \mid X_{t-1})$，用于表述状态在时间上的依赖性</li><li>观测的概率密度函数$P(Y_t \mid X_t)$，用来描述某一个时间片<strong>内部</strong>，观测数据对于其他（未观测）结点的依赖性</li><li>初始状态的概率密度函数$P(X_1)$，用来描述过程开始之初的状态分布情况</li></ul><p>以上的三个要素，在隐马尔科夫模型中可以一一完成对应，而动态贝叶斯网络则是采用了一种更为泛化，具有更通用数据和过程表达能力的模型。</p><p>对于上述前两个参数，需要在某个时间片上进行确定，我们通常简单地假定这些概率密度函数是不随时间改变（time-invariant）的。</p><p>根据随机变量的状态空间设定，DBN既可以是连续的、离散的或者二者皆有的。</p><h2 id="3-DBN的任务及其问题解决"><a href="#3-DBN的任务及其问题解决" class="headerlink" title="3. DBN的任务及其问题解决"></a>3. DBN的任务及其问题解决</h2><p>DBN主要解决的问题可以列举如下：</p><ul><li>推断（inference）：在给定初始分布和一些已知观测的情况下，对未知变量的分布进行求解计算；</li><li>解码（decoding）：在模型确定的情况下，根据已知观测结果对最佳（best-fitting probability value）的隐状态进行查找；</li><li>学习（learning）：给定一组观测序列，给结构已知模型的参数进行调整，以最好地支持观测到的数据；</li><li>剪枝（pruning）：找出当前DSN结构中哪些结点在语义层面上是重要的（semantically important），并将不重要的去除。</li></ul><h3 id="3-1-推断"><a href="#3-1-推断" class="headerlink" title="3.1 推断"></a>3.1 推断</h3><p>推断过程可以看做给定一组有限的$T$个连续的观测变量$Y_{0}^{T-1} = \{ y_0, \ldots, y_{T-1} \}$的情况下，对于连续隐变量序列$X_{0}^{T-1} = \{ x_0, \ldots, x_{T-1} \}$的条件概率分布$P(X_{0}^{T-1} \mid Y_{0}^{T-1})$进行计算。一个具体的例子如下图所示。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/bayes_network4.jpg" alt="已知每个时刻的观测$y_i$，对对应的隐变量$x_i$的取值进行推断"><span class="image-caption-center">已知每个时刻的观测$y_i$，对对应的隐变量$x_i$的取值进行推断</span></p><p>有时候，由于计算$P(X_{0}^{T-1} \mid Y_{0}^{T-1})$过于复杂，可以考虑不对$X_{0}^{T-1}$的每一个排列（constellation）进行条件概率的求解，而转而对概率密度函数的充分统计量（sufficient statistics）进行估计。因此，可以静静选择某一个或几个状态，并在不同时刻对其取值进行估计，即$P(x_{t} \mid Y_{0}^{T-1})$。</p><p>推断过程可以通过前向传播（forward propagation）和后向传播（backward propagation）完成。</p><h4 id="3-1-1-前向传播"><a href="#3-1-1-前向传播" class="headerlink" title="3.1.1 前向传播"></a>3.1.1 前向传播</h4><p>$t$时刻的前向概率分布（forward probability distribution）为：</p><blockquote><p>$\alpha_t(x_t) = P(Y_{0}^{t}, x_t)$</p></blockquote><p>根据网络结构的依赖关系，有：</p><blockquote><p>$\alpha_{t+1}(x_{t+1}) = P(y_{t+1} \mid x_{t+1}) \sum\limits_{x_{t}}P(x_{t+1} \mid x_t)\alpha_t(x_t)$<br>同时，有：<br>$\alpha_{0}(x_{0}) = P(x_{0})$</p></blockquote><h4 id="3-1-2-后向传播"><a href="#3-1-2-后向传播" class="headerlink" title="3.1.2 后向传播"></a>3.1.2 后向传播</h4><p>$t$时刻的后向概率分布（backward probability distribution）为：</p><blockquote><p>$\beta_t(x_t) = P(Y_{t}^{T-1} \mid x_t)$</p></blockquote><p>根据网络结构的依赖关系，有：</p><blockquote><p>$\beta_{t-1}(x_{t-1}) = \sum\limits_{x_{t}}P(x_{t} \mid x_{t-1})\beta_t(x_t)$P(y_t \mid x_t)<br>而且，有：<br>$\beta_{T-1}(x_{T-1}) = 1$</p></blockquote><h4 id="3-1-3-平滑"><a href="#3-1-3-平滑" class="headerlink" title="3.1.3 平滑"></a>3.1.3 平滑</h4><p>根据当前的观测值，还可以对某一个时刻变量的取值进行推断计算，称之为平滑。平滑操作符（smoothing operator）可以定义如下：</p><blockquote><p>$\gamma_{t}(x_t) = P(x_t \mid Y_{0}^{T-1}) = \frac{\alpha_t(x_t)\beta_t(x_t)}{\sum_{x_t}\alpha_t(x_t)\beta_t(x_t)}$</p></blockquote><p>更高阶的平滑方程也可以在前向和后向概率分布的基础上定义。例如，定义一个一阶的平滑：</p><blockquote><p>$\xi_{t, t-1}(x_t, x_{t-1}) = P(x_t, x_{t-1} \mid Y_{0}^{T-1}) = \frac{\alpha_{t-1}(x_{t-1}) P(x_t \mid x_{t-1}) P(y_t \mid x_t) \beta_t(x_t)}{\sum_{x_t}\alpha_t(x_t)\beta_t(x_t)}$</p></blockquote><h4 id="3-1-4-预测"><a href="#3-1-4-预测" class="headerlink" title="3.1.4 预测"></a>3.1.4 预测</h4><p>可形式化地描述为求解$P(y_{t+1} \mid Y_{0}^{t})$或者$P(x_{t+1} \mid Y_{0}^{t})$。</p><blockquote><p>$P(x_{t+1} \mid Y_{0}^{t}) = P(x_{t+1}, Y_{0}^{t}) / P(Y_{0}^{t})$<br>$= \sum_{x_t} P(x_{t+1} \mid x_t) \alpha_t(x_t) / \sum_{x_t} \alpha_t(x_t)$</p></blockquote><p>同时，也可以得到：</p><blockquote><p>$P(y_{t+1} \mid Y_{0}^{t}) = P(y_{t+1}, Y_{0}^{t}) / P(Y_{0}^{t})$<br>$= \sum_{x_{t+1}} P(y_{t+1} \mid x_{t+1}) \sum\limits_{x_{t}}P(x_{t+1} \mid x_t)\alpha_t(x_t) / \sum_{x_t} \alpha_t(x_t)$<br>$= \sum_{x_{t+1}} \alpha_{t+1}(x_{t+1}) / \sum_{x_t} \alpha_t(x_t)$</p></blockquote><p>预测问题可以表示为一个求最大似然（maximum likelihood）的问题：</p><blockquote><p>$x^{\star}_{t+1, t} = \arg\max_{x_{t+1}} P(x_{t+1} \mid Y_{0}^{t})$</p><p>$y^{\star}_{t+1, t} = \arg\max_{y_{t+1}} P(y_{t+1} \mid Y_{0}^{t})$</p></blockquote><h3 id="3-2-解码"><a href="#3-2-解码" class="headerlink" title="3.2 解码"></a>3.2 解码</h3><p>解码问题可以表述如下：</p><blockquote><p>$\hat{X}_{0}^{T-1} = \arg\max\limits_{X_{0}^{T-1}} P(X_{0}^{T-1} \mid Y_{0}^{T-1})$</p></blockquote><p>该问题的求解可以使用经典的动态规划算法——维特比（Viterbi）算法进行求解。</p><p>首先考虑以下简单的形式：</p><blockquote><p>$\delta_{t+1}(x_{t+1}) = \max\limits_{X_{0}^{t}} P(X_{0}^{t+1} \mid Y_{0}^{t+1})$</p></blockquote><p>可以对其进行时序上的递推：</p><blockquote><p>$\delta_{t+1}(x_{t+1}) = P(y_{t+1} \mid x_{t+1}) \max\limits_{x_t}[P(x_{t+1}, x_t) \max\limits_{X_0^{T-1}} P(X_{0}^{t-1} \mid Y_{0}^{t})]$<br>$= P(y_{t+1} \mid x_{t+1}) \max\limits_{x_t}[P(x_{t+1}, x_t) \delta_{t}(x_{t})]$</p></blockquote><p>则我们可以把以上简单形式嵌入到下式表达中：</p><blockquote><p>$\max\limits_{X_{0}^{T-1}} P(X_{0}^{T-1} \mid Y_{0}^{T-1}) = \max\limits_{x_{T-1}}\delta_{T-1}(x_{T-1})$</p></blockquote><p>其现实意义在于，为了找到$\hat{X}_{0}^{T-1}$，每一步都求解最大可能概率的隐变量$x_t$，其能够最大化$\delta_{t+1}(x_{t+1})$。</p><p>假定给定一个式子：</p><blockquote><p>$\psi_{t+1}(x_{t+1}) = \arg\max\limits_{x_t}[P(x_{t+1} \mid x_t) + \delta_{t}(x_t)]$</p></blockquote><p>则优化的目标为：</p><blockquote><p>$\hat{x}_t = \psi_{t+1}(\hat{x}_{t+1})$</p></blockquote><h3 id="3-3-学习"><a href="#3-3-学习" class="headerlink" title="3.3 学习"></a>3.3 学习</h3><p>当DBN网络结构确定时，某些结点间的条件概率依赖无法确切计算，这个时候，就需要考虑对模型参数进行学习调整。EM算法或者GEM（general EM）算法可用来对DBN参数进行学习。</p><blockquote><p>$\log P(X_{0}^{T-1}, Y_{0}^{T-1} \mid \theta) = \log [P(x_0) \prod_{1}^{T-1}P(x_i \mid x_{i-1}) \prod_{0}^{T-1}P(y_i \mid x_i)]$<br>$= \log P(x_0) + \sum_{1}^{T-1}\log P(x_i \mid x_{i-1}) + \sum_{0}^{T-1} \log P(y_i \mid x_i)]$</p></blockquote><p>对上式进行梯度下降，优化的目标为参数向量$\theta$：</p><blockquote><p>$\frac{\partial \log P(x_0)}{\partial \theta} + \sum_{1}^{T-1} \frac{\partial \log P(x_i \mid x_{i-1})}{\partial \theta} + \sum_{0}^{T-1} \frac{\partial \log P(y_i \mid x_i)}{\partial \theta} = 0$</p></blockquote><h3 id="3-4-剪枝"><a href="#3-4-剪枝" class="headerlink" title="3.4 剪枝"></a>3.4 剪枝</h3><p>对DBN进行剪枝的过程是非常复杂的。剪枝通常包括以下步骤：</p><ul><li>删除某个特定结点的某一个状态</li><li>去除两个结点间的关联</li><li>去除一个结点</li></ul><p>例如，对于$t$时刻的某个结点$V_{i}^{(t)}$，如果已经知道其概率$P(V_{i}^{(t)} = s_i) = 1$，即一定等于某个状态$s_i$，则其他的状态可以去除。同时，如果一个结点不存在前继结点同时其对某个状态的概率为0的情况下，该状态也可以被删除。</p><p>剪枝的决定是在推断执行的时间节省和做出错误的可能性间寻找平衡。</p><h2 id="4-构建DBN"><a href="#4-构建DBN" class="headerlink" title="4. 构建DBN"></a>4. 构建DBN</h2><div class="table-container"><table><thead><tr><th>结构 / 数据观测</th><th>方法</th></tr></thead><tbody><tr><td>已知 / 完整（complete）</td><td>simple statistics</td></tr><tr><td>已知 / 部分（incomplete）- 存在隐变量</td><td>EM or gradient ascent</td></tr><tr><td>未知 / 完整</td><td>search through model space</td></tr><tr><td>未知 / 部分</td><td>structural EM</td></tr></tbody></table></div><h3 id="4-1-已知结构和完整观测"><a href="#4-1-已知结构和完整观测" class="headerlink" title="4.1 已知结构和完整观测"></a>4.1 已知结构和完整观测</h3><p>已知结构$G$的情况下，对于参数的确定可以认为是模型参数在观测数据下的最大似然估计。</p><p>给定$S$个独立的数据序列，数据$\boldsymbol{D}$表示为$\{ D_1, \ldots, D_S \}$。</p><p>我们首先根据链式法则，将所有结点的联合概率分布写为：</p><blockquote><p>$P(X_1, \ldots, X_{m}) = \prod_i P(X_i \mid X_1, \ldots, X_{i-1}) = \prod_i P(X_i \mid Parent(X_i))$</p></blockquote><p>正规化对数似然（normalized log likelihood），也即平均对数似然，可以写为：</p><blockquote><p>$LL = 1/N \cdot \log P(\boldsymbol{D} \mid G)$</p></blockquote><p>$G$也即整个模型参数，$N$是采样的数量。</p><p>可以进一步写为：</p><blockquote><p>$LL = 1/N \cdot \sum_{i=1}^{m} \sum_{l=1}^{S} \log P(X_i \mid Parent(X_i), D_l)$</p></blockquote><p>按照上述公式，我们可以对每个DBN中每个结点对对数似然的贡献进行单独的计算。</p><h3 id="4-2-已知结构和部分观测"><a href="#4-2-已知结构和部分观测" class="headerlink" title="4.2 已知结构和部分观测"></a>4.2 已知结构和部分观测</h3><p>当结构已知，但是数据是部分观测的情况下，我们需要对模型中的部分未知变量进行估计，这个时候需要借助于一些迭代方法，例如EM或者梯度下降，来找到MLE或者MAP的局部最优解。其要点可参照3.1推断中的内容。</p><h3 id="4-3-未知结构和完整观测"><a href="#4-3-未知结构和完整观测" class="headerlink" title="4.3 未知结构和完整观测"></a>4.3 未知结构和完整观测</h3><p>当结构未知但是观测数据完整的情况下，可以考虑利用观测数据对模型结构进行学习。对于结构的学习，一般是通过初始化一个结构，并通过以下方式的修改，得到一个新的结构，并对其进行评估：</p><ol><li>新增一条边；</li><li>改变图中的某一条边；</li><li>删除图的一条边</li></ol><p>以上操作可以保障修改的静态图结构始终为一个DAG。</p><p>为了完成对模型结构的学习，我们按照如下方式对任务进行定义：</p><ol><li>找到一个能够比较不同结构的度量；</li><li>找到查找不同结构的搜索算法；</li></ol><p>搜索算法可以分为启发式算法和基于条件依赖（CI, conditional independence）的算法—即考量不同结点间的依赖关系强弱。启发式算法虽然在执行上较为快速，但其很难收敛到最优解。相比之下，通过CI测试的方法一般可以获得最优或者近似最优解。</p><h4 id="4-3-1-基于条件依赖测试的方法"><a href="#4-3-1-基于条件依赖测试的方法" class="headerlink" title="4.3.1 基于条件依赖测试的方法"></a>4.3.1 基于条件依赖测试的方法</h4><p>在信息论汇总，两个结点$X_i$和$X_j$的互信息（mutual information）可以定义为：</p><blockquote><p>$I(X_i, X_j) = \sum_{x_i, x_j} P(x_i, x_j) \log \frac{P(x_i, x_j)}{P(x_i)P(x_j)}$</p></blockquote><p>条件互信息（conditional mutual information）则可以定义为：</p><blockquote><p>$I(X_i, X_j \mid Y) = \sum_{x_i, x_j, y} P(x_i, x_j, y) \log \frac{P(x_i, x_j \mid y)}{P(x_i \mid y)P(x_j \mid y)}$</p></blockquote><p>在基于CI测试的方法中，$Y$可以看做一组有依赖关系的结点集合，而当两个结点$X_i$和$X_j$的条件互信息$I(X_i, X_j \mid Y)$小于某个阈值的时候，我们可以用条件集（conditional set）$Y$来对上述两个结点进行d-分割，即两个结点在给定$Y$的情况下条件独立。</p><h4 id="4-3-2-启发式搜索方法"><a href="#4-3-2-启发式搜索方法" class="headerlink" title="4.3.2 启发式搜索方法"></a>4.3.2 启发式搜索方法</h4><p>给定训练集$D$，启发式搜索需要找到一个模型结构$B = (G, \Theta)$来最好地拟合数据$D$。其中，$G$对应于网络中所有的随机变量$X (X_1, \ldots, X_N)$的DAG；而$\Theta$表示的是模型的参数。此时需要引入得分函数，并通过最大化评分函数来找到最优的网络结构和模型参数。参照<a href="/blog/静态贝叶斯网络">静态贝叶斯网络</a>。</p><p>总体而言，我们可将问题形式化为：</p><blockquote><p>$\arg\max\limits_{G}P(G \mid D) = \arg\max\limits_{G}\frac{P(D \mid G)P(G)}{P(D)}$</p></blockquote><p>两边取对数，可以写为：</p><blockquote><p>$\arg\min\limits_{G} \log P(G \mid D) = \arg\min\limits_{G} \log P(D \mid G) + \log P(G) + c$</p></blockquote><p>其中，在给定数据的情况下，可以将$\log P(D)$视为上式中的常数$c$。直接使用精确的贝叶斯推断方法通常很难解，这是由于求边缘分布$P(D) = \sum_{G} P(D,G)$通常会引入指数级的计算量。这种情况下，一般可以对后验概率$P(D \mid B)$进行近似，同时加上一定的惩罚。这个惩罚是针对模型的复杂程度进行的，特别是考虑到通常最大似然的网络结构往往是全连接的。</p><p>典型的Bayesian Information Criterion（BIC）如下：</p><blockquote><p>$\log P(G \mid D) \approx \log P(D \mid G, \hat{\Theta}_{G}) - \frac{\log N}{2} len(G)$</p></blockquote><p>上式中，$len(G)$表示模型的维度，$N$是所有采样值的个数，而$\hat{\Theta}_{G}$是模型$G$的最大似然的参数。</p><blockquote><p>总而言之，也是最为重要的，对于DBN的结构学习方法基本与静态贝叶斯网络的结构学习方法相同。</p></blockquote><h3 id="4-4-未知结构和部分观测"><a href="#4-4-未知结构和部分观测" class="headerlink" title="4.4 未知结构和部分观测"></a>4.4 未知结构和部分观测</h3><p>很多情况下，未知结构和部分观测都是真实世界系统中出现的情况。在此情况下，如果还考虑到DBN中时间维度上的变化，则情况变得更加复杂。考虑到部分观测的情况下时，一般很难保证随机过程的马尔科夫性。</p><p>一般情况下，可以考虑使用EM算法进行求解：</p><ol><li>E步：使用当前评估的参数补充完整观测数据；</li><li>M步：在认为补充值为真实观测值的情况下，重新对最大似然的参数进行计算；</li></ol><p>每一步EM都确保数据的似然提升，直到到达一个局部最优解。</p><p>EM算法在部分观测的情况下，也需要进行一定的调整，如结构化的EM（structural EM, SEM）算法。</p><ol><li>E步：同EM算法，根据当前的结构和参数，计算变量的期望值来补充完整数据；</li><li>M步：分为以下两个部分</li></ol><ul><li>同EM算法，重新对最大似然的参数进行估计；</li><li>根据当前的结构，利用期望值来评估其他的候选结构。候选结构的获取是通过完全搜索与当前结构类似的结构来获得的。</li></ul><h2 id="5-DBN和HMM的对比"><a href="#5-DBN和HMM的对比" class="headerlink" title="5. DBN和HMM的对比"></a>5. DBN和HMM的对比</h2><p>假定目前有$D$个对象，需要在一组图像序列（$t$个时刻）中进行位置状态追踪。</p><p>HMM的问题处理：</p><ul><li>假定每个对象每个时刻有$K$个可能状态</li><li>那么每个时刻的状态$X_{t} = (X_{t}^{(1)}, \ldots, X_{t}^{(D)})$具有$K^{D}$个可能取值</li><li>因此，完成推断需要的时间复杂度约为$O(T(K^D)^2)$，而空间复杂度约为$O(TK^D)$</li><li>$P(X_t \mid X_{t-1})$需要对$(K^D)^2$个参数进行判定</li></ul><p>DBN的问题处理：</p><ul><li>HMM对于状态空间的描述使用一个单一的随机变量 $X_{t} = \{ 1, \ldots, K \}$</li><li>DBN对于状态空间的描述使用一组随机变量 $X_{t}^{(1)}, \ldots, X_{t}^{(D)}$ (分解、离散的形式表达)</li><li>DBN对于$P(X_t \mid X_{t-1})$的表达采用更为紧凑的参数化图模型（parameterized graph）</li><li>DBN相比于HMM，在参数个数上指数级别减少，同时其参数估计速度也是指数级地加快了</li><li>时间复杂度约为$O(TDK^{D+1})$</li><li>$P(X_t \mid X_{t-1})$需要对$DK^2$个参数进行判定</li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>本文主要内容学习整理自引用<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="[Dynamic Bayesian Networks: A State of the Art](https://ris.utwente.nl/ws/portalfiles/portal/27679465).">[1]</span></a></sup>。</p></blockquote><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h2><p>在<a href="/blog/动态贝叶斯网络">上一篇</a>中，我们对动态贝叶斯网络的基本形式、概念和模型问题进行了一定的解释。其中，大部分内容都还停留在对单独的子模型（sub-model）的问题求解（例如，两大主要问题：推断和学习）。在这篇文章中，我们将从时序模型的角度出发，考虑在时间上结点具有关联的动态贝叶斯网络的主要求解问题，也就是推断（inference）和参数学习（parameter learning）。</p><p>由于在大部分的时态系统中，对于模型结构是大体可知的，那么本文主要考虑的是在结构已知的情况下，进行概率推断和学习参数的问题。</p><p>相比于<a href="/blog/静态贝叶斯网络">静态贝叶斯网络</a>，动态贝叶斯网络的挑战在于，每个time slice的子模型间存在结点的相互关系，那么在上述两个问题中必须要考虑到这些时间连接关系带来的影响。</p><p>在概率推断中，我们必须要对网络模型进行展开（unrolling or rolling up），同时要保证各结点的依赖关系，以及隐结点对观测结点的影响。</p><p>在参数学习中，主要难点在于——部分隐结点的概率分布情况的正确程度（correctness）是很难获知的。</p><p>以下分别对这两个问题的具体求解进行介绍。</p><h2 id="2-概率推断—网络展开问题"><a href="#2-概率推断—网络展开问题" class="headerlink" title="2. 概率推断—网络展开问题"></a>2. 概率推断—网络展开问题</h2><p>引用<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="R. Schafer and T. Weyrath. Assessing Temporally Variable User Properties with Dynamic Bayesian Networks.">[2]</span></a></sup>将DBN中的结点分为三个类别：</p><ul><li>dynamic nodes（DN）：随时间进行演变的对象</li><li>static nodes（SN）：不随时间进行演变的对象</li><li>temporary nodes（TN）：不同时刻接收不同的取值的对象，也称为<strong>evidence nodes</strong></li></ul><p>在DBN的网络展开问题中，我们希望每个时刻的子模型结构是一定的，那么在分析时刻$t$的模型时，我们希望利用推断来计算$t-1$时刻的结点带来的影响（influence），并将其删除。这个过程可以理解为网络展开。通过网络展开操作，时刻$t$的dynamic nodes可以转变为root nodes。</p><p>实际上，网络展开的结果，其实是将上一个时刻的知识引入到当前时刻的模型中。其主要依赖的是马尔科夫特性，也即将之前观测到的结果累积到当前时刻，不断迭代下去。</p><p>网络展开的问题在于，其结点消除（node elimination）的方法，可能会引入额外的结点链接关系，并进一步复杂化网络的结构，因此，一些方法被用于更为高效的网络展开：</p><ul><li>连接先验和转移网络（connecting prior and transition networks）</li><li>时态不变网络（temporally invariant networks）</li><li>随机模拟（stochastic simulation）</li><li>结点关系的准确表达（extrac representation of node dependencies）</li></ul><h3 id="2-1-连接先验和转移网络"><a href="#2-1-连接先验和转移网络" class="headerlink" title="2.1 连接先验和转移网络"></a>2.1 连接先验和转移网络</h3><p>在这种类型的DBN表达中，可以将网络分为两个部分：</p><ul><li>初始时刻的贝叶斯网络模型，即先验网络（prior network）；</li><li>连续两个时刻间结点的依赖关系，即转移网络（transition network），它是两个贝叶斯网络的结合。</li></ul><p>那么，网络展开的问题可以通过融合上述两个网络部分来进行求解。</p><p><img src="prior_and_transition_networks.png" alt="利用先验网络和转移网络表示网络"><span class="image-caption-center">利用先验网络和转移网络表示网络</span></p><p>在上图中，$t=0$时刻的随机变量的先验概率和条件概率在左图中进行描述；$t=1, \ldots, T-1$各个时刻的条件依赖关系则由右图给出。</p><p>在先验和转移网络中，若要进行概率推断，可以分别对两部分进行求解。注意，其前提假设在于一阶马尔科夫特性，即当前时刻的情况仅仅与上一时刻的情况相关。</p><h3 id="2-2-时态不变网络"><a href="#2-2-时态不变网络" class="headerlink" title="2.2 时态不变网络"></a>2.2 时态不变网络</h3><p>在展开操作后网络结构保持不变的网络可以被认为是时态不变网络。其前提在于，网络中只有一个temporal node接收来自于上个时刻的必要信息，也就是说网络中只有这个结点受到上个时刻的影响，而在展开中不涉及到其他结点间的关系。</p><p><img src="temporally_invariant_networks.png" alt="时态不变网络，只有结点$X$受到上个时刻结点的影响"><span class="image-caption-center">时态不变网络，只有结点$X$受到上个时刻结点的影响</span></p><p>相比于时态不变网络，下图中给出了一个时态变化网络（temporally variant network）。</p><p><img src="temporally_variant_networks.png" alt="时态变化网络"><span class="image-caption-center">时态变化网络</span></p><p>在上图中，我们发现，变量$X$和$Z$都受到上一个时刻结点的影响。例如，$X_2$和$Z_2$都依赖于$X_1$，也即在它们二者之间，是非独立的。因此，在转换后，我们需要给$X$和$Z$之间加入一条边。</p><blockquote><p>一个子模型中各结点完全连接的网络一定是一个时态不变网络，当然其计算非常复杂。通常这种情况下，需要将其转化为一个时态变化模型，并通过更为有效的结点消除算法来进行推断和学习。</p></blockquote><h3 id="2-3-随机模拟"><a href="#2-3-随机模拟" class="headerlink" title="2.3 随机模拟"></a>2.3 随机模拟</h3><p>随机模拟过程是通过一系列采样值来逼近网络中状态结点的置信（brief）。</p><p>典型的方法是似然权重（likelihood weighting）法。它通过有限次数的试验，每次试验的权重根据观测到的证据下的似然进行权重计算。通过对特别结点上加权平均值的计算，可以获得这些结点上的概率分布信息。</p><h3 id="2-4-结点关系的准确表达"><a href="#2-4-结点关系的准确表达" class="headerlink" title="2.4 结点关系的准确表达"></a>2.4 结点关系的准确表达</h3><p>在DBN中，有三种结点类型间的关系是允许的：</p><ul><li>between dynamic nodes (DN) and temporary nodes (TN)</li><li>between dynamic and dynamic nodes</li><li>between static nodes (SN) and dynamic nodes (DN)</li></ul><p>以下分别进行描述。</p><h4 id="2-4-1-DN和TN间依赖"><a href="#2-4-1-DN和TN间依赖" class="headerlink" title="2.4.1 DN和TN间依赖"></a>2.4.1 DN和TN间依赖</h4><p>TN也称为evidence nodes。</p><p><img src="dn-tn.png" alt="DN和TN间依赖，TN只受到DN的独立影响"><span class="image-caption-center">DN和TN间依赖，TN只受到DN的独立影响</span></p><h4 id="2-4-2-DN间依赖"><a href="#2-4-2-DN间依赖" class="headerlink" title="2.4.2 DN间依赖"></a>2.4.2 DN间依赖</h4><p>假如上图中的TN也会随着时间进行动态变化，则可以表达为下图的形式。</p><p><img src="dn-dn.png" alt="DN间依赖，DN2受到DN1在不同时刻的影响"><span class="image-caption-center">DN间依赖，DN2受到DN1在不同时刻的影响</span></p><h4 id="2-4-3-SN和DN间依赖"><a href="#2-4-3-SN和DN间依赖" class="headerlink" title="2.4.3 SN和DN间依赖"></a>2.4.3 SN和DN间依赖</h4><p>一个DN可以有父SN，如下图(a)所示。</p><p>在图(b)中，DN被认为是在每个时刻创建的TN。同时，DWN被认为是不受SN影响的DN。底下的TN受到SN和DWN的影响。</p><p>图(c)中，SN也可以被看做DN，以此来简化该模型，但是可能会导致更为不准确的推断结果。</p><p><img src="sn-dn.png" alt="SN和TN间依赖"><span class="image-caption-center">SN和TN间依赖</span></p><h2 id="3-参数学习问题"><a href="#3-参数学习问题" class="headerlink" title="3. 参数学习问题"></a>3. 参数学习问题</h2><p>在DBN的结构已知时，模型的参数也并不能完全确定，即便通过对专家知识进行获取的情况下。此时，需要根据数据的观测来对模型参数进行调节，学习到合理的参数。通常情况下，可以认为这是一个最大似然估计的问题——找到最能拟合观测数据的模型参数。</p><p>特别需要注意的是，我们并不是总能在所有的time slice观测到数据。如果模型还存在隐状态，则需要借助EM算法。</p><p>我们将$t$时刻的未观测变量写为$u_t$、观测变量写为$o_t$，那么整个DBN的所有变量的联合概率分布可以写为：</p><blockquote><p>$P(o_1, \ldots, o_T, u_1, \ldots, u_T) = P(u_1) P(o_1 \mid u_1) \prod_{t=2}^{T} P(u_{t} \mid u_{t-1}) P(o_t \mid u_t)$</p></blockquote><p>其对应的EM算法可以表示如下：</p><p><img src="em_dbn.png" alt=""></p><p>这个算法可以表示为 推断隐状态和最大化模型参数的迭代过程。</p><p>在引用<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="Audio-Visual Speaker Detection using Dynamic Bayesian Networks.">[3]</span></a></sup>中，作者为了简化学习过程，提出了在第一阶段忽略时间依赖的影响，单独对每个固定观测网络的转移概率进行计算。虽然得到的结果是suboptimal的，但是在计算效率上得到了很大提升。</p><h2 id="引用-1"><a href="#引用-1" class="headerlink" title="引用"></a>引用</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="http://blog.sina.com.cn/s/blog_13dd6d82a0102vclu.html" target="_blank" rel="noopener">动态贝叶斯网络简述</a>.<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://ris.utwente.nl/ws/portalfiles/portal/27679465" target="_blank" rel="noopener">Dynamic Bayesian Networks: A State of the Art</a>.<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://en.wikipedia.org/wiki/Dynamic_Bayesian_network" target="_blank" rel="noopener">Dynamic Bayesian Network, Wikipedia</a>.<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">R. Schafer and T. Weyrath. Assessing Temporally Variable User Properties with Dynamic Bayesian Networks.<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="http://www.cs.ubc.ca/~murphyk/papers/dbntalk.pdf" target="_blank" rel="noopener">A Tutorial on Dynamic Bayesian Networks</a>.<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Audio-Visual Speaker Detection using Dynamic Bayesian Networks.<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://ris.utwente.nl/ws/portalfiles/portal/27679465" target="_blank" rel="noopener">Dynamic Bayesian Networks: A State of the Art</a>.<a href="#fnref:4" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      <categories>
          
          <category> 因果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 因果 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>UpSetR包</title>
      <link href="/hexo/2018/12/24/2018-12-24_UpsetR/"/>
      <url>/hexo/2018/12/24/2018-12-24_UpsetR/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://www.jianshu.com/p/324aae3d5ea4" target="_blank" rel="noopener">https://www.jianshu.com/p/324aae3d5ea4</a></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/UpsetR.jpg" alt=""></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages(UpSetR)</span><br></pre></td></tr></table></figure><h5 id="输入方式一：-table"><a href="#输入方式一：-table" class="headerlink" title="输入方式一： table"></a>输入方式一： table</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span>(ggplot2); <span class="keyword">require</span>(plyr); <span class="keyword">require</span>(gridExtra); <span class="keyword">require</span>(grid);</span><br><span class="line">movies &lt;- read.csv(system.file(<span class="string">"extdata"</span>,<span class="string">"movies.csv"</span>,package = <span class="string">"UpSetR"</span>), header = <span class="literal">TRUE</span>, sep=<span class="string">";"</span>)</span><br><span class="line">View(movies)</span><br><span class="line">upset(movies, nsets = <span class="number">7</span>, nintersects = <span class="number">30</span>, mb.ratio = c(<span class="number">0.5</span>, <span class="number">0.5</span>),</span><br><span class="line">      order.by = c(<span class="string">"freq"</span>, <span class="string">"degree"</span>), decreasing = c(<span class="literal">TRUE</span>,<span class="literal">FALSE</span>))</span><br><span class="line"><span class="comment">#nsets: 最多展示多少个集合数据。毕竟原来有20多种电影类型，放不完的</span></span><br><span class="line"><span class="comment">#nintersects: 展示多少交集。</span></span><br><span class="line"><span class="comment">#mb.ratio： 点点图和条形图的比例。</span></span><br><span class="line"><span class="comment">#order.by： 交集如何排序。这里先根据freq，然后根据degree</span></span><br><span class="line"><span class="comment">#decreasing： 变量如何排序。这里表示freq降序，degree升序</span></span><br><span class="line"><span class="comment"># 用于query的函数</span></span><br><span class="line">between &lt;- <span class="keyword">function</span>(row, min, max)&#123;</span><br><span class="line">  newData &lt;- (row[<span class="string">"ReleaseDate"</span>] &lt; max) &amp; (row[<span class="string">"ReleaseDate"</span>] &gt; min)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upset(movies, sets=c(<span class="string">"Drama"</span>,<span class="string">"Comedy"</span>,<span class="string">"Action"</span>,<span class="string">"Thriller"</span>,<span class="string">"Western"</span>,<span class="string">"Documentary"</span>),</span><br><span class="line">      queries = list(list(query = intersects, params = list(<span class="string">"Drama"</span>, <span class="string">"Thriller"</span>)),</span><br><span class="line">                     list(query = between, params=list(<span class="number">1970</span>,<span class="number">1980</span>), color=<span class="string">"red"</span>, active=<span class="literal">TRUE</span>)))</span><br><span class="line"><span class="comment">#queries接受query所组成的list。然后不同query也是一个list，这个list由查询函数，和参数组成，参数也是一个list。查询函数可以用系统自带的，也可以自己写一个。比如说这里的between</span></span><br><span class="line"></span><br><span class="line">upset(movies,attribute.plots=list(gridrows=<span class="number">60</span>,plots=list(list(plot=scatter_plot, x=<span class="string">"ReleaseDate"</span>, y=<span class="string">"AvgRating"</span>),</span><br><span class="line">                                                         list(plot=scatter_plot, x=<span class="string">"ReleaseDate"</span>, y=<span class="string">"Watches"</span>),list(plot=scatter_plot, x=<span class="string">"Watches"</span>, y=<span class="string">"AvgRating"</span>),</span><br><span class="line">                                                         list(plot=histogram, x=<span class="string">"ReleaseDate"</span>)), ncols = <span class="number">2</span>))</span><br></pre></td></tr></table></figure><h3 id="输入方式二：集合交集向量"><a href="#输入方式二：集合交集向量" class="headerlink" title="输入方式二：集合交集向量"></a>输入方式二：集合交集向量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">input &lt;- c(</span><br><span class="line">  <span class="string">"MAQ"</span>=<span class="number">144600</span>,</span><br><span class="line">  <span class="string">"FaSD"</span>=<span class="number">16532</span>, </span><br><span class="line">  <span class="string">"Bcftools"</span>=<span class="number">283</span>, </span><br><span class="line">  <span class="string">"GATK"</span>=<span class="number">15160</span>, </span><br><span class="line">  <span class="string">"MAQ&amp;FaSD"</span>=<span class="number">16323</span>, </span><br><span class="line">  <span class="string">"MAQ&amp;Bcftools"</span>=<span class="number">636</span>, </span><br><span class="line">  <span class="string">"Bcftools&amp;GATK"</span>=<span class="number">65435</span>, </span><br><span class="line">  <span class="string">"FaSD&amp;GATK"</span>=<span class="number">33874</span>, </span><br><span class="line">  <span class="string">"MAQ&amp;FaSD&amp;Bcftools"</span>=<span class="number">114</span>, </span><br><span class="line">  <span class="string">"MAQ&amp;FaSD&amp;GATK"</span>=<span class="number">41858</span>, </span><br><span class="line">  <span class="string">"MAQ&amp;Bcftools&amp;GATK"</span>=<span class="number">4</span>, </span><br><span class="line">  <span class="string">"FaSD&amp;Bcftools&amp;GATK"</span>=<span class="number">6603</span>, </span><br><span class="line">  <span class="string">"MAQ&amp;FaSD&amp;Bcftools&amp;GATK"</span>=<span class="number">8357</span></span><br><span class="line">)</span><br><span class="line">data &lt;- fromExperssion(input)</span><br><span class="line">upset(data)</span><br></pre></td></tr></table></figure><h3 id="upsetplot"><a href="#upsetplot" class="headerlink" title="upsetplot()"></a>upsetplot()</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">require</span><span class="params">(TxDb.Hsapiens.UCSC.hg19.knownGene)</span></span></span><br><span class="line">txdb &lt;- TxDb<span class="selector-class">.Hsapiens</span><span class="selector-class">.UCSC</span><span class="selector-class">.hg19</span><span class="selector-class">.knownGene</span></span><br><span class="line">peakfile &lt;- system.file(<span class="string">"extdata"</span>, <span class="string">"sample_peaks.txt"</span>, package=<span class="string">"ChIPseeker"</span>)</span><br><span class="line">peakAnno &lt;- annotatePeak(peakfile, tssRegion=c(-<span class="number">3000</span>, <span class="number">3000</span>), TxDb=txdb)</span><br><span class="line">peakAnno</span><br><span class="line"><span class="function"><span class="title">upsetplot</span><span class="params">(peakAnno, vennpie=TRUE)</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Win10 Linux子系统</title>
      <link href="/hexo/2018/12/24/2018-12-24_Win10_Linuxsystem/"/>
      <url>/hexo/2018/12/24/2018-12-24_Win10_Linuxsystem/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="1-开启win10内置linux子系统"><a href="#1-开启win10内置linux子系统" class="headerlink" title="1. 开启win10内置linux子系统"></a>1. 开启win10内置linux子系统</h4><ol><li>选择开发人员模式</li></ol><p>​    设置—针对开发人员—开发人员模式</p><ol><li>开启windows功能中的Linux子系统功能。</li></ol><p>​    控制面板&gt;启用或关闭windows功能-&gt;适用于Linux的windows子系统</p><ol><li>重启计算机</li><li>CMD-输入bash</li></ol><h4 id="2-启动Linux"><a href="#2-启动Linux" class="headerlink" title="2. 启动Linux"></a>2. 启动Linux</h4><p><code>CMD-输入bash即可</code></p><h4 id="3-Linux子系统升级"><a href="#3-Linux子系统升级" class="headerlink" title="3. Linux子系统升级"></a>3. Linux子系统升级</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#查看当前 Windows 10内置的Ubuntu系统版本，bash中输入</span></span></span><br><span class="line">lsb_release -a</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># CMD中 移除Ubuntu 14.04版</span></span></span><br><span class="line">lxrun /uninstall /full /y</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># CMD中 安装最新Ubuntu </span></span></span><br><span class="line">lxrun /install /y</span><br></pre></td></tr></table></figure><h2 id="cmder的使用"><a href="#cmder的使用" class="headerlink" title="cmder的使用"></a>cmder的使用</h2><p>由于Windows自带的命令提示符cmd并不是很好用，界面也不美观，这里使用效果更好的</p><p><a href="http://cmder.net/" target="_blank" rel="noopener">cmder</a>，下载<a href="https://github.com/cmderdev/cmder/releases/download/v1.3.2/cmder_mini.zip" target="_blank" rel="noopener">mini版</a>的解压即可使用。</p><p>进入在cmder的标题栏或状态栏 右键 或者点击右下角menu，如下图，选择”Settings”进行环境设置：选择Command line，输入”bash -cur_console:p”，另外通过ssh连接服务器的时候，会出现中文字体相互重叠的情况，这时去设置Main总取消选择 Compress long strings to fit space。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>dplyr_tidyr包</title>
      <link href="/hexo/2018/12/23/2018-12-23_dplyr_tidyr/"/>
      <url>/hexo/2018/12/23/2018-12-23_dplyr_tidyr/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://blog.csdn.net/pilouduo1367/article/details/69675678" target="_blank" rel="noopener">https://blog.csdn.net/pilouduo1367/article/details/69675678</a></p><h1 id="1-dplyr包—数据框整理神器"><a href="#1-dplyr包—数据框整理神器" class="headerlink" title="1 dplyr包—数据框整理神器"></a>1 dplyr包—数据框整理神器</h1><h3 id="1-1-展现数据-tbl-df-："><a href="#1-1-展现数据-tbl-df-：" class="headerlink" title="1.1 展现数据 tbl_df()："></a>1.1 展现数据 <code>tbl_df()</code>：</h3><p>函数<code>tbl_df()</code>使得大数据集规范显示出来，行列都只显示10个，跟head差不多，但是head只能控制行，无法控制列，使用<code>tbl_df()</code>就是为了防止数据刷屏。</p><h3 id="1-2-筛选数据-filter-："><a href="#1-2-筛选数据-filter-：" class="headerlink" title="1.2 筛选数据 filter()："></a>1.2 筛选数据 <code>filter()</code>：</h3><p>按给定的逻辑判断筛选出符合要求的子数据集</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mtcars_df &lt;- tbl_df(mtcars)</span><br><span class="line">filter(mtcars_df, mpg == <span class="number">21</span>, cyl == <span class="number">6</span>)</span><br><span class="line"><span class="comment"># A tibble: 2 × 11</span></span><br><span class="line"><span class="comment">#    mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb</span></span><br><span class="line"><span class="comment">#  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#1    21     6   160   110   3.9 2.620 16.46     0     1     4     4</span></span><br><span class="line"><span class="comment">#2    21     6   160   110   3.9 2.875 17.02     0     1     4     4</span></span><br></pre></td></tr></table></figure><h3 id="1-3-排列数据-arrange-："><a href="#1-3-排列数据-arrange-：" class="headerlink" title="1.3 排列数据 arrange()："></a>1.3 排列数据 <code>arrange()</code>：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先对cyl列正序排列，再对carb列倒序排列</span></span><br><span class="line">xx= arrange(mtcars_df, cyl, desc(carb))</span><br></pre></td></tr></table></figure><h3 id="1-4-选择子集-select"><a href="#1-4-选择子集-select" class="headerlink" title="1.4 选择子集 select()"></a>1.4 选择子集 <code>select()</code></h3><p>用列名作参数来选择子数据集</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select(mtcars_df, mpg, disp:wt, carb) <span class="comment"># disp:wt表示从disp列选到wt列</span></span><br></pre></td></tr></table></figure><h3 id="1-5-变形-mutate-："><a href="#1-5-变形-mutate-：" class="headerlink" title="1.5 变形 mutate()："></a>1.5 变形 <code>mutate()</code>：</h3><p>对已有列进行数据运算并添加为新列</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutate(mtcars_df, NO = <span class="number">1</span>:dim(mtcars_df)[<span class="number">1</span>], res = hp - drat)</span><br></pre></td></tr></table></figure><h3 id="1-6-总览数据-summarise-："><a href="#1-6-总览数据-summarise-：" class="headerlink" title="1.6 总览数据 summarise()："></a>1.6 总览数据 <code>summarise()</code>：</h3><p>对数据框调用其它函数进行汇总操作, 返回一维的结果</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">summarise(mtcars_df, mdisp = mean(disp, na.rm = <span class="literal">TRUE</span>), mhp = mean(hp, na.rm = <span class="literal">TRUE</span>))</span><br><span class="line"><span class="comment"># A tibble: 1 × 2</span></span><br><span class="line">     mdisp      mhp</span><br><span class="line">     &lt;dbl&gt;    &lt;dbl&gt;</span><br><span class="line"><span class="number">1</span> <span class="number">230.7219</span> <span class="number">146.6875</span></span><br></pre></td></tr></table></figure><h3 id="1-7-数据分组-group-by-："><a href="#1-7-数据分组-group-by-：" class="headerlink" title="1.7 数据分组 group_by()："></a>1.7 数据分组 <code>group_by()</code>：</h3><p>当对数据集通过group_by()添加了分组信息后，mutate()，arrange() 和 summarise() 函数会自动对这些 tbl 类数据执行分组操作。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cars &lt;- group_by(mtcars_df, cyl)</span><br><span class="line">(countcars &lt;- summarise(cars, count = n())) <span class="comment"># count = n()用来计算次数</span></span><br><span class="line"><span class="comment"># A tibble: 3 × 2</span></span><br><span class="line">    cyl count</span><br><span class="line">  &lt;dbl&gt; &lt;int&gt;</span><br><span class="line"><span class="number">1</span>     <span class="number">4</span>    <span class="number">11</span></span><br><span class="line"><span class="number">2</span>     <span class="number">6</span>     <span class="number">7</span></span><br><span class="line"><span class="number">3</span>     <span class="number">8</span>    <span class="number">14</span></span><br></pre></td></tr></table></figure><h1 id="2-tidyr包—数据变形"><a href="#2-tidyr包—数据变形" class="headerlink" title="2 tidyr包—数据变形"></a>2 tidyr包—数据变形</h1><h3 id="2-1-宽转长-gather-："><a href="#2-1-宽转长-gather-：" class="headerlink" title="2.1 宽转长 gather()："></a>2.1 宽转长 <code>gather()</code>：</h3><p>使用gather()函数实现宽表转长表，语法如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gather(data, key, value, …, na.rm = FALSE, convert = FALSE)</span></span><br><span class="line"><span class="comment"># data：需要被转换的宽形表</span></span><br><span class="line"><span class="comment"># key：将原数据框中的所有列赋给一个新变量key</span></span><br><span class="line"><span class="comment"># value：将原数据框中的所有值赋给一个新变量value</span></span><br><span class="line"><span class="comment"># …：可以指定哪些列聚到同一列中</span></span><br><span class="line"><span class="comment"># na.rm：是否删除缺失值</span></span><br><span class="line"></span><br><span class="line">longdata &lt;- gather(mtcars_df, attribute, value, -mpg)</span><br><span class="line">longdata &lt;- gather(mtcars_df, attribute, value)</span><br><span class="line">longdata &lt;- gather(mtcars_df, attribute, value, mpg, carb)</span><br></pre></td></tr></table></figure><h3 id="2-2-长转宽-spread-："><a href="#2-2-长转宽-spread-：" class="headerlink" title="2.2 长转宽 spread()："></a>2.2 长转宽 <code>spread()</code>：</h3><p>有时，为了满足建模或绘图的要求，往往需要将长形表转换为宽形表，或将宽形表变为长形表。如何实现这两种数据表类型的转换。使用spread()函数实现长表转宽表，语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> spread(data, key, value, fill = NA, convert = FALSE, drop = TRUE)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> data：为需要转换的长形表</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> key：需要将变量值拓展为字段的变量</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> value：需要分散的值</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> fill：对于缺失值，可将fill的值赋值给被转型后的缺失值</span></span><br><span class="line"></span><br><span class="line">spread(longdata, attribute, value)</span><br></pre></td></tr></table></figure><h3 id="2-3-合并-unit-："><a href="#2-3-合并-unit-：" class="headerlink" title="2.3 合并 unit()："></a>2.3 合并 <code>unit()</code>：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># unite(data, col, …, sep = “_”, remove = TRUE)</span></span><br><span class="line"><span class="comment"># data：为数据框</span></span><br><span class="line"><span class="comment"># col：被组合的新列名称</span></span><br><span class="line"><span class="comment"># …：指定哪些列需要被组合</span></span><br><span class="line"><span class="comment"># sep：组合列之间的连接符，默认为下划线</span></span><br><span class="line"><span class="comment"># remove：是否删除被组合的列</span></span><br><span class="line"></span><br><span class="line">TIMES &lt;- data.frame(years = c(<span class="string">'1990'</span>, <span class="string">'1991'</span>, <span class="string">'1992'</span>), months = c(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>), day = c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">TIMESunite &lt;- unite(TIMES, information, months, day, sep= <span class="string">"-"</span>)</span><br></pre></td></tr></table></figure><h3 id="2-4-拆分-separate-："><a href="#2-4-拆分-separate-：" class="headerlink" title="2.4 拆分 separate()："></a>2.4 拆分 <code>separate()</code>：</h3><p>separate()函数可将一列拆分为多列，一般可用于日志数据或日期时间型数据的拆分.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># separate(data, col, into, sep = “[^[:alnum:]]+”, remove = TRUE,</span></span><br><span class="line"><span class="comment"># convert = FALSE, extra = “warn”, fill = “warn”, …)</span></span><br><span class="line"><span class="comment"># data：为数据框</span></span><br><span class="line"><span class="comment"># col：需要被拆分的列</span></span><br><span class="line"><span class="comment"># into：新建的列名，为字符串向量</span></span><br><span class="line"><span class="comment"># sep：被拆分列的分隔符</span></span><br><span class="line"><span class="comment"># remove：是否删除被分割的列</span></span><br><span class="line">TIMESsep &lt;- separate(TIMESunite, information, c(<span class="string">"months"</span>, <span class="string">"day"</span>), sep = <span class="string">"-"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>WGCNA加权基因共表达网络分析</title>
      <link href="/hexo/2018/12/23/2018-12-23_WGCNA/"/>
      <url>/hexo/2018/12/23/2018-12-23_WGCNA/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://www.bio-info-trainee.com/2535.html" target="_blank" rel="noopener">原文</a>    <a href="http://blog.genesino.com/2018/04/wgcna/" target="_blank" rel="noopener">WGCNA分析，简单全面</a>   <a href="http://tiramisutes.github.io/2016/09/14/WGCNA.html" target="_blank" rel="noopener">学习WGCNA总结</a>  <a href="https://taoshengxu.github.io/DocumentGit/pdf/WGCNA Background and glossary.pdf">WGCNA Background and glossary</a></p><p>程序跑了一遍，很多问题依然不清楚，需要继续深入研究。</p><hr><p><strong>GEO数据挖掘系列文-第一期-胶质母细胞瘤</strong></p><p> <a href="http://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247486195&amp;idx=1&amp;sn=2839a431fddf7f1846b54d03054b8f32&amp;chksm=fa46cfcecd3146d8afc6bbc981c954a791a6ac4529096e23e71cd0006597d14bddff0e3a158b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener"><strong>GEO数据挖掘系列文-第二期-三阴性乳腺癌</strong></a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247486277&amp;idx=1&amp;sn=91b65441eea077183c66827a288c03f7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">GEO数据挖掘系列文-第三期-口腔鳞状细胞癌**</a></p><p><strong>GEO数据挖掘系列文-第四期-肝细胞癌 （WGCNA）</strong></p><p><strong>GEO数据挖掘系列文-第五期-肝细胞癌 （多组差异分析）</strong></p><p><a href="http://www.bio-info-trainee.com/3650.html" target="_blank" rel="noopener"><strong>GEO数据挖掘-第六期-RNA-seq数据也照挖不误</strong></a></p><p>外传：<a href="http://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247486365&amp;idx=1&amp;sn=f6f9a124cc153f2a74a4f85e9cd02ec4&amp;chksm=fa46cea0cd3147b683074e7b47f9cb06f8f81aafea0d20276a1d52653c34c578ae8474f81c17&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">保姆式GEO数据挖掘演示—重现9分文章</a></p><hr><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><strong>加权基因共表达网络分析 (WGCNA, Weighted correlation network analysis)</strong>是用来描述不同样品之间基因关联模式的系统生物学方法，可以用来鉴定高度<strong>协同变化</strong>的基因集, 并根据基因集的内连性和基因集与表型之间的关联鉴定候补生物标记基因或治疗靶点。</p><p>相比于只关注差异表达的基因，WGCNA利用数千或近万个变化最大的基因或全部基因的信息识别感兴趣的基因集，并与表型进行显著性关联分析。一是充分利用了信息，二是把数千个基因与表型的关联转换为数个基因集与表型的关联，免去了多重假设检验校正的问题。</p><p>理解WGCNA，需要先理解下面几个术语和它们在WGCNA中的定义。</p><ul><li><p><strong>共表达网络：</strong>定义为加权基因网络。点代表基因，边代表基因表达相关性。加权是指对<strong>相关性值进行幂次运算</strong> (幂次的值也就是<strong>软阈值</strong> (power, pickSoftThreshold这个函数所做的就是确定合适的power))。</p><blockquote><p>无向网络的边属性计算方式为 <code>abs(cor(genex, geney)) ^ power</code>；</p><p>有向网络的边属性计算方式为 <code>(1+cor(genex, geney)/2) ^ power</code>; </p><p>sign hybrid的边属性计算方式为<code>cor(genex, geney)^power if cor&gt;0 else 0</code>。</p></blockquote><p>这种处理方式强化了强相关，弱化了弱相关或负相关，使得相关性数值更符合<code>无标度网络</code>特征，更具有生物意义。如果没有合适的<strong>power</strong>，一般是由于部分样品与其它样品因为某种原因差别太大导致的，可根据具体问题移除部分样品或查看后面的<code>经验值</code>。</p></li><li><p><strong>Module(模块)</strong>：高度內连的基因集。</p><blockquote><p>在无向网络中，模块内是高度<strong>相关</strong>的基因。</p><p>在有向网络中，模块内是高度<strong>正相关</strong>的基因。</p></blockquote><p>把基因聚类成模块后，可以对每个模块进行三个层次的分析：</p><blockquote><p><code>1</code>. 功能富集分析查看其功能特征是否与研究目的相符；基因富集相关文章 <a href="https://mp.weixin.qq.com/s/l6j2encDfEQkt2UeNCMFhg" target="_blank" rel="noopener">去东方，最好用的在线GO富集分析工具</a>；<a href="http://mp.weixin.qq.com/s/d1KCETQZ88yaOLGwAtpWYg" target="_blank" rel="noopener">GO、GSEA富集分析一网打进</a>；<a href="http://mp.weixin.qq.com/s/3Nd3urhfRGkw-F0LGZrlZQ" target="_blank" rel="noopener">GSEA富集分析-界面操作</a>。</p><p><code>2</code>. 模块与性状进行关联分析，找出与关注性状相关度最高的模块；</p><p><code>3</code>. 模块与样本进行关联分析，找到样品特异高表达的模块。</p></blockquote></li><li><p><strong>Connectivity (连接度)</strong>：类似于网络中 “度” (degree)的概念。每个基因的连接度是与其相连的基因的<code>边属性之和</code>。</p></li><li><p><strong>Module eigengene E</strong>: 给定模型的第一主成分，代表<strong>整个模型的基因表达谱</strong>。这个是个很巧妙的梳理，我们之前讲过<a href="https://mp.weixin.qq.com/s/ZKvQieq_6KX6l6LZyUz7jA" target="_blank" rel="noopener">PCA分析</a>的降维作用，之前主要是拿来做可视化，现在用到这个地方，很好的用一个向量代替了一个矩阵，方便后期计算。(降维除了PCA，还可以看看<a href="http://mp.weixin.qq.com/s/alBfj3Y08qCnZoz5JwVdaw" target="_blank" rel="noopener">tSNE</a>)</p></li><li><p><strong>Intramodular connectivity</strong>: 给定基因与给定模型内其他基因的关联度，判断基因所属关系。</p></li><li><p><strong>Module membership</strong>: 给定基因表达谱与给定模型的eigengene的相关性。</p></li><li><p><strong>Hub gene:</strong> 关键基因 (连接度最多或连接多个模块的基因)。</p></li><li><p><strong>Adjacency matrix (邻接矩阵)</strong>：基因和基因之间的加权相关性值构成的矩阵。</p></li><li><p><strong>TOM (Topological overlap matrix)</strong>：把邻接矩阵转换为拓扑重叠矩阵，以降低噪音和假相关，获得的新距离矩阵，这个信息可拿来构建网络或绘制TOM图。WGCNA认为基因之间的简单的相关性不足以计算共表达，所以它利用上面的邻近矩阵，又计算了一个新的邻近矩阵。一般来说，TOM就是WGCNA分析的最终结果，后续的只是对TOM的下游注释。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/WGCNA_TOM.png" alt=""></p></li></ul><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><p>该分析方法旨在寻找协同表达的基因模块(module)，并探索基因网络与关注的表型之间的关联关系，以及网络中的核心基因。<strong>推荐5组(或者15个样品)以上的数据</strong>。一般可应用的研究方向有：不同器官或组织类型发育调控、同一组织不同发育调控、非生物胁迫不同时间点应答、病原菌侵染后不同时间点应答。从方法上来讲，WGCNA分为<strong>表达量聚类分析和表型关联</strong>两部分。</p><h5 id="1-基因之间相关系数计算"><a href="#1-基因之间相关系数计算" class="headerlink" title="1. 基因之间相关系数计算"></a>1. 基因之间相关系数计算</h5><p><em>计算任意两个基因之间的相关系数（Person Coefficient）。为了衡量两个基因是否具有相似表达模式，一般需要设置阈值来筛选，高于阈值的则认为是相似的。但是这样如果将阈值设为0.8，那么很难说明0.8和0.79两个是有显著差别的。因此，<strong>WGCNA分析时采用相关系数加权值，即对基因相关系数取N次幂</strong>，使得网络中的基因之间的连接服从<strong>无尺度网络分布(scale-freenetworks)</strong>，这种算法更具生物学意义。</em></p><h5 id="2-基因模块（表达模式相似的基因分为一类，这样的一类基因称为模块）的确定"><a href="#2-基因模块（表达模式相似的基因分为一类，这样的一类基因称为模块）的确定" class="headerlink" title="2. 基因模块（表达模式相似的基因分为一类，这样的一类基因称为模块）的确定"></a>2. 基因模块（<strong>表达模式相似的基因分为一类，这样的一类基因称为模块</strong>）的确定</h5><p><em>通过基因之间的相关系数构建分层聚类树，<strong>聚类树的不同分支代表不同的基因模块</strong>，不同颜色代表不同的模块。基于基因的加权相关系数，将基因按照表达模式进行分类，将模式相似的基因归为一个模块。这样就可以将几万个基因通过基因表达模式被分成了几十个模块，是一个提取归纳信息的过程。</em></p><p><code>得到模块之后的下游分析</code></p><ul><li>模块的功能富集</li><li>模块与性状之间的相关性</li><li>模块与样本间的相关系数</li></ul><p><code>挖掘模块的关键信息</code></p><ul><li>找到模块的核心基因</li><li>利用关系预测基因功能<h5 id="3-共表达网络"><a href="#3-共表达网络" class="headerlink" title="3. 共表达网络"></a>3. 共表达网络</h5><h5 id="4-模块与性状关联"><a href="#4-模块与性状关联" class="headerlink" title="4. 模块与性状关联"></a>4. 模块与性状关联</h5></li></ul><h2 id="示例程序"><a href="#示例程序" class="headerlink" title="示例程序"></a>示例程序</h2><p><a href="https://taoshengxu.github.io/DocumentGit/data/GSE48213-wgcna-input.RData">数据下载</a></p><h3 id="STEP1-输入数据的准备"><a href="#STEP1-输入数据的准备" class="headerlink" title="STEP1: 输入数据的准备"></a>STEP1: 输入数据的准备</h3><p>这里主要是<strong>表达矩阵</strong>， 如果是芯片数据，那么常规的归一化矩阵即可，如果是转录组数据，最好是RPKM值或者其它归一化好的表达量。然后就是<strong>临床信息</strong>或者其它表型，总之就是样本的属性。为了保证后续脚本的统一性，表达矩阵统一用<strong>datExpr</strong>标识，临床 信息统一用<strong>datTraits</strong>标识。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">setwd(<span class="string">'WGCNA/'</span>)</span><br><span class="line"><span class="comment">#   56 breast cancer cell lines were profiled to identify patterns of gene expression associated with subtype and response to therapeutic compounds.</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">F</span>)&#123;</span><br><span class="line">  <span class="comment">## linux 代码  </span></span><br><span class="line">  <span class="comment">## https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE48213</span></span><br><span class="line">  <span class="comment">#wget -c ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE48nnn/GSE48213/suppl/GSE48213_RAW.tar</span></span><br><span class="line">  <span class="comment">#tar -xf GSE48213_RAW.tar</span></span><br><span class="line">  <span class="comment">#gzip -d *.gz</span></span><br><span class="line">  <span class="comment">## 首先在GSE48213_RAW目录里面生成tmp.txt文件，使用shell脚本：</span></span><br><span class="line">  <span class="comment">## awk '&#123;print FILENAME"\t"$0&#125;' * |grep -v EnsEMBL_Gene_ID &gt;tmp.txt</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment"># 然后把tmp.txt导入R语言里面用reshape2处理即可！</span></span><br><span class="line">  a=read.table(<span class="string">'GSE48213_RAW/tmp.txt'</span>,sep = <span class="string">'\t'</span>,stringsAsFactors = <span class="literal">F</span>)</span><br><span class="line">  <span class="keyword">library</span>(reshape2)</span><br><span class="line">  fpkm &lt;- dcast(a,formula = V2~V1)</span><br><span class="line">  rownames(fpkm)=fpkm[,<span class="number">1</span>]</span><br><span class="line">  fpkm=fpkm[,-<span class="number">1</span>]</span><br><span class="line">  colnames(fpkm)=sapply(colnames(fpkm),<span class="keyword">function</span>(x) strsplit(x,<span class="string">"_"</span>)[[<span class="number">1</span>]][<span class="number">1</span>])</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">library</span>(GEOquery)</span><br><span class="line">  a=getGEO(<span class="string">'GSE48213'</span>)</span><br><span class="line">  metadata=pData(a[[<span class="number">1</span>]])[,c(<span class="number">2</span>,<span class="number">10</span>,<span class="number">12</span>)]</span><br><span class="line">  datTraits = data.frame(gsm=metadata[,<span class="number">1</span>],</span><br><span class="line">             cellline=trimws(sapply(as.character(metadata$characteristics_ch1),<span class="keyword">function</span>(x) strsplit(x,<span class="string">":"</span>)[[<span class="number">1</span>]][<span class="number">2</span>])),</span><br><span class="line">             subtype=trimws(sapply(as.character(metadata$characteristics_ch1.2),<span class="keyword">function</span>(x) strsplit(x,<span class="string">":"</span>)[[<span class="number">1</span>]][<span class="number">2</span>]))</span><br><span class="line">             )</span><br><span class="line">save(fpkm,datTraits,file = <span class="string">'GSE48213-wgcna-input.RData'</span>)</span><br><span class="line">&#125;</span><br><span class="line">                            </span><br><span class="line"><span class="keyword">library</span>(WGCNA)</span><br><span class="line">RNAseq_voom &lt;- fpkm </span><br><span class="line"><span class="comment">## 因为WGCNA针对的是基因进行聚类，而一般我们的聚类是针对样本用hclust即可，所以这个时候需要转置。</span></span><br><span class="line">WGCNA_matrix = t(RNAseq_voom[order(apply(RNAseq_voom,<span class="number">1</span>,mad), decreasing = <span class="literal">T</span>)[<span class="number">1</span>:<span class="number">5000</span>],])</span><br><span class="line">datExpr0 &lt;- WGCNA_matrix  <span class="comment">## top 5000 mad genes</span></span><br><span class="line">datExpr &lt;- datExpr0 </span><br><span class="line"><span class="comment">## 下面主要是为了防止临床表型与样本名字对不上</span></span><br><span class="line">sampleNames = rownames(datExpr);</span><br><span class="line">traitRows = match(sampleNames, datTraits$gsm)  </span><br><span class="line">rownames(datTraits) = datTraits[traitRows, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">head(datTraits)  <span class="comment">## 56 个细胞系的分类信息，表型</span></span><br><span class="line">                  gsm cellline       subtype</span><br><span class="line">GSM1172844 GSM1172844    184A1 Non-malignant</span><br><span class="line">GSM1172845 GSM1172845    184B5 Non-malignant</span><br><span class="line">GSM1172846 GSM1172846    21MT1         Basal</span><br><span class="line">GSM1172847 GSM1172847    21MT2         Basal</span><br><span class="line">GSM1172848 GSM1172848     21NT         Basal</span><br><span class="line">GSM1172849 GSM1172849     21PT         Basal</span><br><span class="line">fpkm[<span class="number">1</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">4</span>]  <span class="comment">## 56个细胞系的36953个基因的表达矩阵</span></span><br><span class="line">                GSM1172844 GSM1172845 GSM1172846  GSM1172847</span><br><span class="line">ENSG00000000003   <span class="number">95.21255</span>   <span class="number">95.69868</span>   <span class="number">19.99467</span>  <span class="number">65.6863763</span></span><br><span class="line">ENSG00000000005    <span class="number">0.00000</span>    <span class="number">0.00000</span>    <span class="number">0.00000</span>   <span class="number">0.1492021</span></span><br><span class="line">ENSG00000000419  <span class="number">453.20831</span>  <span class="number">243.64804</span>  <span class="number">142.05818</span> <span class="number">200.4131493</span></span><br><span class="line">ENSG00000000457   <span class="number">18.10439</span>   <span class="number">26.56661</span>   <span class="number">16.12776</span>  <span class="number">12.0873135</span></span><br></pre></td></tr></table></figure><p>上面代码里面的rpkm就是我们的转录组数据的表达矩阵，以rpkm为单位。而datTraits就是所有样本对应的表型信息。需要自己制作，这个是学习WGCNA的基础，本次实例代码都是基于这两个数据。</p><p>这个数据集里面的56种细胞系被分成了5组，如果要分开两两做差异分析，有10种组合，也就是说需要做10次差异分析，每个差异分析结果都需要去注释，会比较麻烦，这个时候WGCNA就派上用场啦。</p><p>当然，如果你一定要去做差异分析，我也给你代码：<a href="https://github.com/jmzeng1314/my-R/blob/master/10-RNA-seq-3-groups/hisat2_mm10_htseq.R" target="_blank" rel="noopener">https://github.com/jmzeng1314/my-R/blob/master/10-RNA-seq-3-groups/hisat2_mm10_htseq.R</a></p><h3 id="STEP2-确定最佳BETA值"><a href="#STEP2-确定最佳BETA值" class="headerlink" title="STEP2:确定最佳BETA值"></a>STEP2:确定最佳BETA值</h3><p>选择合适软阀值（soft thresholding power）beta。<strong>关键就是理解<code>pickSoftThreshold</code>函数及其返回的对象，最佳的beta值就是<code>sft$powerEstimate</code></strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">powers = c(c(<span class="number">1</span>:<span class="number">10</span>), seq(from = <span class="number">12</span>, to=<span class="number">20</span>, by=<span class="number">2</span>))</span><br><span class="line"><span class="comment"># Call the network topology analysis function</span></span><br><span class="line">sft = pickSoftThreshold(datExpr, powerVector = powers, verbose = <span class="number">5</span>)</span><br><span class="line"><span class="comment">#设置网络构建参数选择范围，计算无尺度分布拓扑矩阵</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Plot the results:</span></span><br><span class="line">  <span class="comment">##sizeGrWindow(9, 5)</span></span><br><span class="line">  par(mfrow = c(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">  cex1 = <span class="number">0.9</span>;</span><br><span class="line">  <span class="comment"># Scale-free topology fit index as a function of the soft-thresholding power</span></span><br><span class="line">  plot(sft$fitIndices[,<span class="number">1</span>], -sign(sft$fitIndices[,<span class="number">3</span>])*sft$fitIndices[,<span class="number">2</span>],</span><br><span class="line">       xlab=<span class="string">"Soft Threshold (power)"</span>,ylab=<span class="string">"Scale Free Topology Model Fit,signed R^2"</span>,type=<span class="string">"n"</span>,</span><br><span class="line">       main = paste(<span class="string">"Scale independence"</span>));</span><br><span class="line">  text(sft$fitIndices[,<span class="number">1</span>], -sign(sft$fitIndices[,<span class="number">3</span>])*sft$fitIndices[,<span class="number">2</span>],</span><br><span class="line">       labels=powers,cex=cex1,col=<span class="string">"red"</span>);</span><br><span class="line">  <span class="comment"># this line corresponds to using an R^2 cut-off of h</span></span><br><span class="line">  abline(h=<span class="number">0.90</span>,col=<span class="string">"red"</span>)</span><br><span class="line">  <span class="comment"># Mean connectivity as a function of the soft-thresholding power</span></span><br><span class="line">  plot(sft$fitIndices[,<span class="number">1</span>], sft$fitIndices[,<span class="number">5</span>],</span><br><span class="line">       xlab=<span class="string">"Soft Threshold (power)"</span>,ylab=<span class="string">"Mean Connectivity"</span>, type=<span class="string">"n"</span>,</span><br><span class="line">       main = paste(<span class="string">"Mean connectivity"</span>))</span><br><span class="line">  text(sft$fitIndices[,<span class="number">1</span>], sft$fitIndices[,<span class="number">5</span>], labels=powers, cex=cex1,col=<span class="string">"red"</span>)</span><br></pre></td></tr></table></figure><p><img src="http://www.bio-info-trainee.com/wp-content/uploads/2017/09/step2-beta-value.png" alt="img"><span class="image-caption-center">img</span></p><p>参数beta取值默认是1到30，上述图形的横轴均代表权重参数β，左图纵轴代表对应的网络中log(k)与log(p(k))相关系数的平方。<strong>相关系数的平方越高，说明该网络越逼近无网路尺度的分布。</strong>右图的纵轴代表对应的基因模块中所有基因邻接函数的均值。</p><h3 id="STEP3：一步法构建共表达矩阵"><a href="#STEP3：一步法构建共表达矩阵" class="headerlink" title="STEP3：一步法构建共表达矩阵"></a>STEP3：一步法构建共表达矩阵</h3><p>有了表达矩阵和估计好的最佳beta值，就可以直接构建共表达矩阵了。</p><p>所有的核心就在这一步，把输入的表达矩阵的<strong>几千个基因组归类成了几十个模块。</strong></p><p>大体思路：<em>计算基因间的邻接性，根据邻接性计算基因间的相似性，然后推出基因间的相异性系数，并据此得到基因间的系统聚类树。然后按照混合动态剪切树的标准，设置每个基因模块最少的基因数目为30。根据动态剪切法确定基因模块后，再次分析，依次计算每个模块的特征向量值，然后对模块进行聚类分析，将距离较近的模块合并为新的模块。</em></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">net = blockwiseModules(</span><br><span class="line">                 datExpr,</span><br><span class="line">                 power = sft$powerEstimate,</span><br><span class="line">                 maxBlockSize = <span class="number">6000</span>,</span><br><span class="line">                 TOMType = <span class="string">"unsigned"</span>, minModuleSize = <span class="number">30</span>,</span><br><span class="line">                 reassignThreshold = <span class="number">0</span>, mergeCutHeight = <span class="number">0.25</span>,</span><br><span class="line">                 numericLabels = <span class="literal">TRUE</span>, pamRespectsDendro = <span class="literal">FALSE</span>,</span><br><span class="line">                 saveTOMs = <span class="literal">TRUE</span>,</span><br><span class="line">                 saveTOMFileBase = <span class="string">"AS-green-FPKM-TOM"</span>,</span><br><span class="line">                 verbose = <span class="number">3</span></span><br><span class="line"> )</span><br><span class="line"> table(net$colors)</span><br></pre></td></tr></table></figure><h3 id="STEP4-模块可视化"><a href="#STEP4-模块可视化" class="headerlink" title="STEP4: 模块可视化"></a>STEP4: 模块可视化</h3><p>这里用不同的颜色来代表那些所有的模块，其中灰色默认是无法归类于任何模块的那些基因，如果灰色模块里面的基因太多，那么前期对表达矩阵挑选基因的步骤可能就不太合适。</p><p><strong>重点就是<code>plotDendroAndColors</code>函数，它接受一个聚类的对象，以及该对象里面包含的所有个体所对应的颜色。</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Convert labels to colors for plotting</span></span><br><span class="line">mergedColors = labels2colors(net$colors)</span><br><span class="line">table(mergedColors)</span><br><span class="line"><span class="comment"># Plot the dendrogram and the module colors underneath</span></span><br><span class="line">plotDendroAndColors(net$dendrograms[[<span class="number">1</span>]], mergedColors[net$blockGenes[[<span class="number">1</span>]]],</span><br><span class="line">                    <span class="string">"Module colors"</span>,</span><br><span class="line">                    dendroLabels = <span class="literal">FALSE</span>, hang = <span class="number">0.03</span>,</span><br><span class="line">                    addGuide = <span class="literal">TRUE</span>, guideHang = <span class="number">0.05</span>)</span><br><span class="line"><span class="comment">## assign all of the gene to their corresponding module </span></span><br><span class="line"><span class="comment">## hclust for the genes.</span></span><br></pre></td></tr></table></figure><p><img src="http://www.bio-info-trainee.com/wp-content/uploads/2017/09/step4-genes-modules.png" alt="img"><span class="image-caption-center">img</span></p><hr><p>对表达矩阵进行hclust之后，加上表达矩阵里面所有样本的分组信息对应的颜色，也是可以用<code>plotDendroAndColors</code>函数可视化—-如下面<strong>样品图</strong>（样本进行聚类的代码跟WGCNA本身关系不大。）</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#明确样本数和基因数</span></span><br><span class="line"><span class="attr">nGenes</span> = ncol(datExpr)</span><br><span class="line"><span class="attr">nSamples</span> = nrow(datExpr)</span><br><span class="line"><span class="comment">#首先针对样本做个系统聚类树</span></span><br><span class="line">datExpr_tree&lt;-hclust(dist(datExpr), <span class="attr">method</span> = <span class="string">"average"</span>)</span><br><span class="line">par(<span class="attr">mar</span> = c(<span class="number">0</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">0</span>))</span><br><span class="line">plot(datExpr_tree, <span class="attr">main</span> = <span class="string">"Sample clustering"</span>, <span class="attr">sub="",</span> <span class="attr">xlab="",</span> cex.<span class="attr">lab</span> = <span class="number">2</span>, </span><br><span class="line">     cex.<span class="attr">axis</span> = <span class="number">1</span>, cex.<span class="attr">main</span> = <span class="number">1</span>,cex.<span class="attr">lab=1)</span></span><br><span class="line"><span class="comment">## 如果这个时候样本是有性状，或者临床表型的，可以加进去看看是否聚类合理</span></span><br><span class="line"><span class="comment">#针对前面构造的样品矩阵添加对应颜色</span></span><br><span class="line">sample_colors &lt;- numbers2colors(as.numeric(factor(datTraits$Tumor.Type)), </span><br><span class="line">                                <span class="attr">colors</span> = c(<span class="string">"white"</span>,<span class="string">"blue"</span>,<span class="string">"red"</span>,<span class="string">"green"</span>),<span class="attr">signed</span> = FALSE)</span><br><span class="line"><span class="comment">## 这个给样品添加对应颜色的代码需要自行修改以适应自己的数据分析项目。</span></span><br><span class="line"><span class="comment">#  sample_colors &lt;- numbers2colors( datTraits ,signed = FALSE)</span></span><br><span class="line"><span class="comment">## 如果样品有多种分类情况，而且 datTraits 里面都是分类信息，那么可以直接用上面代码，当然，这样给的颜色不明显，意义不大。</span></span><br><span class="line"><span class="comment">#构造10个样品的系统聚类树及性状热图</span></span><br><span class="line">par(<span class="attr">mar</span> = c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>),<span class="attr">cex=0.8)</span></span><br><span class="line">plotDendroAndColors(datExpr_tree, sample_colors,</span><br><span class="line">                    <span class="attr">groupLabels</span> = colnames(sample),</span><br><span class="line">                    cex.<span class="attr">dendroLabels</span> = <span class="number">0.8</span>,</span><br><span class="line">                    <span class="attr">marAll</span> = c(<span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>),</span><br><span class="line">                    cex.<span class="attr">rowText</span> = <span class="number">0.01</span>,</span><br><span class="line">                    <span class="attr">main</span> = <span class="string">"Sample dendrogram and trait heatmap"</span>)</span><br></pre></td></tr></table></figure><p><img src="http://www.bio-info-trainee.com/wp-content/uploads/2017/09/sample-subtype-cluster.png" alt="img"><span class="image-caption-center">img</span></p><p>可以看到这些乳腺癌的细胞系的表达谱聚类情况并不是完全与其分类匹配，所以仅仅是根据样本的分组信息做差异分析并不完全准确。</p><hr><h3 id="STEP5-模块和性状的关系"><a href="#STEP5-模块和性状的关系" class="headerlink" title="STEP5:模块和性状的关系"></a>STEP5:模块和性状的关系</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">design=model.matrix(~<span class="number">0</span>+ datTraits$subtype)</span><br><span class="line">colnames(design)=levels(datTraits$subtype)</span><br><span class="line">moduleColors &lt;- labels2colors(net$colors)</span><br><span class="line"><span class="comment"># Recalculate MEs with color labels</span></span><br><span class="line">MEs0 = moduleEigengenes(datExpr, moduleColors)$eigengenes</span><br><span class="line">MEs = orderMEs(MEs0); <span class="comment">##不同颜色的模块的ME值矩阵(样本vs模块)</span></span><br><span class="line">moduleTraitCor = cor(MEs, design , use = <span class="string">"p"</span>);</span><br><span class="line">moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)</span><br><span class="line"></span><br><span class="line">sizeGrWindow(<span class="number">10</span>,<span class="number">6</span>)</span><br><span class="line"><span class="comment"># Will display correlations and their p-values</span></span><br><span class="line">textMatrix = paste(signif(moduleTraitCor, <span class="number">2</span>), <span class="string">"\n("</span>,</span><br><span class="line">                   signif(moduleTraitPvalue, <span class="number">1</span>), <span class="string">")"</span>, sep = <span class="string">""</span>);</span><br><span class="line">dim(textMatrix) = dim(moduleTraitCor)</span><br><span class="line">par(mar = c(<span class="number">6</span>, <span class="number">8.5</span>, <span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line"><span class="comment"># Display the correlation values within a heatmap plot</span></span><br><span class="line">labeledHeatmap(Matrix = moduleTraitCor,</span><br><span class="line">               xLabels = colnames(design),</span><br><span class="line">               yLabels = names(MEs),</span><br><span class="line">               ySymbols = names(MEs),</span><br><span class="line">               colorLabels = <span class="literal">FALSE</span>,</span><br><span class="line">               colors = greenWhiteRed(<span class="number">50</span>),</span><br><span class="line">               textMatrix = textMatrix,</span><br><span class="line">               setStdMargins = <span class="literal">FALSE</span>,</span><br><span class="line">               cex.text = <span class="number">0.5</span>,</span><br><span class="line">               zlim = c(-<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">               main = paste(<span class="string">"Module-trait relationships"</span>))</span><br></pre></td></tr></table></figure><p>通过模块与各种表型的相关系数，可以很清楚的挑选自己感兴趣的模块进行下游分析了。这个图就是把<code>moduleTraitCor</code>这个矩阵给用热图可视化一下。</p><p><img src="http://www.bio-info-trainee.com/wp-content/uploads/2017/09/step5-Module-trait-relationships.png" alt="img"><span class="image-caption-center">img</span><br>从上图已经可以看到跟乳腺癌分类相关的基因模块了，包括<code>&quot;Basal&quot; &quot;Claudin-low&quot; &quot;Luminal&quot; &quot;Non-malignant&quot; &quot;unknown&quot;</code> 这5类所对应的不同模块的基因列表。可以看到每一种乳腺癌都有跟它强烈相关的模块，可以作为它的表达signature，模块里面的基因可以拿去做下游分析。我们看到<strong>Luminal表型</strong>跟<strong>棕色的模块</strong>相关性高达0.86，而且极其显著的相关，所以值得我们挖掘，这<strong>个模块里面的基因是什么，为什么如此的相关呢？</strong></p><h3 id="STEP6-感兴趣性状的模块的具体基因分析"><a href="#STEP6-感兴趣性状的模块的具体基因分析" class="headerlink" title="STEP6:感兴趣性状的模块的具体基因分析"></a>STEP6:感兴趣性状的模块的具体基因分析</h3><p>性状跟模块虽然求出了相关性，可以挑选最相关的那些模块来分析，但是模块本身仍然包含非常多的基因，还需进一步的寻找最重要的基因。所有的模块都可以跟基因算出相关系数，所有的连续型性状也可以跟基因的表达值算出相关系数。主要参考资料：<a href="https://labs.genetics.ucla.edu/horvath/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/FemaleLiver-03-relateModsToExt.pdf" target="_blank" rel="noopener">PDF document</a>, <a href="https://labs.genetics.ucla.edu/horvath/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/FemaleLiver-03-relateModsToExt.R" target="_blank" rel="noopener">R script</a> 如果跟性状显著相关基因也跟某个模块显著相关，那么这些基因可能就非常重要。</p><h4 id="首先计算模块与基因的相关性矩阵"><a href="#首先计算模块与基因的相关性矩阵" class="headerlink" title="首先计算模块与基因的相关性矩阵"></a>首先计算模块与基因的相关性矩阵</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># names (colors) of the modules</span></span><br><span class="line">modNames = <span class="keyword">substring(names(MEs), </span><span class="number">3</span>)</span><br><span class="line">geneModuleMembership = as<span class="meta">.data</span>.frame(cor(datExpr, MEs, use = <span class="string">"p"</span>))<span class="comment">;</span></span><br><span class="line"><span class="comment">## 算出每个模块跟基因的皮尔森相关系数矩阵</span></span><br><span class="line"><span class="comment">## MEs是每个模块在每个样本里面的值</span></span><br><span class="line"><span class="comment">## datExpr是每个基因在每个样本的表达量</span></span><br><span class="line">MMPvalue = as<span class="meta">.data</span>.frame(corPvalueStudent(as.matrix(geneModuleMembership), nSamples))<span class="comment">;</span></span><br><span class="line">names(geneModuleMembership) = paste(<span class="string">"MM"</span>, modNames, sep=<span class="string">""</span>)<span class="comment">;</span></span><br><span class="line">names(MMPvalue) = paste(<span class="string">"p.MM"</span>, modNames, sep=<span class="string">""</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><h4 id="再计算性状与基因的相关性矩阵"><a href="#再计算性状与基因的相关性矩阵" class="headerlink" title="再计算性状与基因的相关性矩阵"></a>再计算性状与基因的相关性矩阵</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 只有连续型性状才能只有计算</span></span><br><span class="line"><span class="comment">## 这里把是否属于 Luminal 表型这个变量用0,1进行数值化。</span></span><br><span class="line">Luminal = as<span class="meta">.data</span>.frame(design[,<span class="number">3</span>])<span class="comment">;</span></span><br><span class="line">names(Luminal) = <span class="string">"Luminal"</span></span><br><span class="line">geneTraitSignificance = as<span class="meta">.data</span>.frame(cor(datExpr, Luminal, use = <span class="string">"p"</span>))<span class="comment">;</span></span><br><span class="line">GSPvalue = as<span class="meta">.data</span>.frame(corPvalueStudent(as.matrix(geneTraitSignificance), nSamples))<span class="comment">;</span></span><br><span class="line">names(geneTraitSignificance) = paste(<span class="string">"GS."</span>, names(Luminal), sep=<span class="string">""</span>)<span class="comment">;</span></span><br><span class="line">names(GSPvalue) = paste(<span class="string">"p.GS."</span>, names(Luminal), sep=<span class="string">""</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><h4 id="最后把两个相关性矩阵联合起来-指定感兴趣模块进行分析"><a href="#最后把两个相关性矩阵联合起来-指定感兴趣模块进行分析" class="headerlink" title="最后把两个相关性矩阵联合起来,指定感兴趣模块进行分析"></a>最后把两个相关性矩阵联合起来,指定感兴趣模块进行分析</h4><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">module = <span class="string">"brown"</span></span><br><span class="line"> column = match(<span class="name">module</span>, modNames)<span class="comment">;</span></span><br><span class="line"> moduleGenes = moduleColors==module<span class="comment">;</span></span><br><span class="line"> sizeGrWindow(<span class="number">7</span>, <span class="number">7</span>)<span class="comment">;</span></span><br><span class="line"> par(<span class="name">mfrow</span> = c(<span class="number">1</span>,<span class="number">1</span>))<span class="comment">;</span></span><br><span class="line"> verboseScatterplot(<span class="name">abs</span>(<span class="name">geneModuleMembership</span>[moduleGenes, column]),</span><br><span class="line">                    abs(<span class="name">geneTraitSignificance</span>[moduleGenes, <span class="number">1</span>]),</span><br><span class="line">                    xlab = paste(<span class="string">"Module Membership in"</span>, module, <span class="string">"module"</span>),</span><br><span class="line">                    ylab = <span class="string">"Gene significance for Luminal"</span>,</span><br><span class="line">                    main = paste(<span class="string">"Module membership vs. gene significance\n"</span>),</span><br><span class="line">                    cex.main = <span class="number">1.2</span>, cex.lab = <span class="number">1.2</span>, cex.axis = <span class="number">1.2</span>, col = module)</span><br></pre></td></tr></table></figure><p><img src="http://www.bio-info-trainee.com/wp-content/uploads/2017/09/step6-Module_membership-gene_significance.png" alt="img"><span class="image-caption-center">img</span></p><p>可以看到这些基因不仅仅是跟其对应的模块高度相关，而且是跟其对应的性状高度相关，进一步说明了基因值得深度探究。</p><h3 id="STEP7-网络的可视化"><a href="#STEP7-网络的可视化" class="headerlink" title="STEP7:网络的可视化"></a>STEP7:网络的可视化</h3><p>主要参考资料：<a href="https://labs.genetics.ucla.edu/horvath/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/FemaleLiver-05-Visualization.pdf" target="_blank" rel="noopener">PDF document</a>, <a href="https://labs.genetics.ucla.edu/horvath/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/FemaleLiver-05-Visualization.R" target="_blank" rel="noopener">R script</a></p><h4 id="首先针对所有基因画热图"><a href="#首先针对所有基因画热图" class="headerlink" title="首先针对所有基因画热图"></a>首先针对所有基因画热图</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nGenes = ncol(datExpr)</span><br><span class="line">nSamples = nrow(datExpr)</span><br><span class="line">geneTree = net$dendrograms[[1]]; </span><br><span class="line">dissTOM = 1-TOMsimilarityFromExpr(datExpr, power = 6); </span><br><span class="line">plotTOM = dissTOM^7; </span><br><span class="line">diag(plotTOM) = NA; </span><br><span class="line"><span class="comment">#TOMplot(plotTOM, geneTree, moduleColors, main = "Network heatmap plot, all genes")</span></span><br></pre></td></tr></table></figure><p>这个非常消耗计算资源和时间，所以建议选取其中部分基因作图即可，我就没有画，而且根据下面的代码选取部分基因来作图！</p><h4 id="然后随机选取部分基因作图"><a href="#然后随机选取部分基因作图" class="headerlink" title="然后随机选取部分基因作图"></a>然后随机选取部分基因作图</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">nSelect = 400</span><br><span class="line"><span class="comment"># For reproducibility, we set the random seed</span></span><br><span class="line">set.seed(10);</span><br><span class="line">select = sample(nGenes, size = nSelect);</span><br><span class="line">selectTOM = dissTOM[select, select];</span><br><span class="line"><span class="comment"># There’s no simple way of restricting a clustering tree to a subset of genes, so we must re-cluster.</span></span><br><span class="line">selectTree = hclust(as.dist(selectTOM), method = <span class="string">"average"</span>)</span><br><span class="line">selectColors = moduleColors[select];</span><br><span class="line"><span class="comment"># Open a graphical window</span></span><br><span class="line">sizeGrWindow(9,9)</span><br><span class="line"><span class="comment"># Taking the dissimilarity to a power, say 10, makes the plot more informative by effectively changing</span></span><br><span class="line"><span class="comment"># the color palette; setting the diagonal to NA also improves the clarity of the plot</span></span><br><span class="line">plotDiss = selectTOM^7;</span><br><span class="line">diag(plotDiss) = NA;</span><br><span class="line">TOMplot(plotDiss, selectTree, selectColors, main = <span class="string">"Network heatmap plot, selected genes"</span>)</span><br></pre></td></tr></table></figure><p><img src="http://www.bio-info-trainee.com/wp-content/uploads/2017/09/step7-Network-heatmap.png" alt="img"><span class="image-caption-center">img</span></p><p>这个图凑数的意义居多，如果是把全部基因画上去，可以很清楚的看到各个区块颜色差异。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/WGCNA_TOM1.png" alt=""></p><h4 id="最后画模块和性状的关系"><a href="#最后画模块和性状的关系" class="headerlink" title="最后画模块和性状的关系"></a>最后画模块和性状的关系</h4><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Recalculate module eigengenes</span></span><br><span class="line"> <span class="attr">MEs</span> = moduleEigengenes(datExpr, moduleColors)$eigengenes</span><br><span class="line"> <span class="comment">## 只有连续型性状才能只有计算</span></span><br><span class="line"> <span class="comment">## 这里把是否属于 Luminal 表型这个变量用0,1进行数值化。</span></span><br><span class="line"> <span class="attr">Luminal</span> = as.data.frame(design[,<span class="number">3</span>]);</span><br><span class="line"> names(Luminal) = <span class="string">"Luminal"</span></span><br><span class="line"> <span class="comment"># Add the weight to existing module eigengenes</span></span><br><span class="line"> <span class="attr">MET</span> = orderMEs(cbind(MEs, Luminal))</span><br><span class="line"> <span class="comment"># Plot the relationships among the eigengenes and the trait</span></span><br><span class="line"> sizeGrWindow(<span class="number">5</span>,<span class="number">7.5</span>);</span><br><span class="line"> par(<span class="attr">cex</span> = <span class="number">0.9</span>)</span><br><span class="line"> plotEigengeneNetworks(MET, <span class="string">""</span>, <span class="attr">marDendro</span> = c(<span class="number">0</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>), <span class="attr">marHeatmap</span> = c(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>), cex.<span class="attr">lab</span> = <span class="number">0.8</span>, xLabelsAngle</span><br><span class="line">                       = <span class="number">90</span>)</span><br><span class="line"> <span class="comment"># Plot the dendrogram</span></span><br><span class="line"> sizeGrWindow(<span class="number">6</span>,<span class="number">6</span>);</span><br><span class="line"> par(<span class="attr">cex</span> = <span class="number">1.0</span>)</span><br><span class="line"> <span class="comment">## 模块的聚类图</span></span><br><span class="line"> plotEigengeneNetworks(MET, <span class="string">"Eigengene dendrogram"</span>, <span class="attr">marDendro</span> = c(<span class="number">0</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">0</span>),</span><br><span class="line">                       <span class="attr">plotHeatmaps</span> = FALSE)</span><br><span class="line"> <span class="comment"># Plot the heatmap matrix (<span class="doctag">note:</span> this plot will overwrite the dendrogram plot)</span></span><br><span class="line"> par(<span class="attr">cex</span> = <span class="number">1.0</span>)</span><br><span class="line"> <span class="comment">## 性状与模块热图</span></span><br><span class="line"> plotEigengeneNetworks(MET, <span class="string">"Eigengene adjacency heatmap"</span>, <span class="attr">marHeatmap</span> = c(<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>),</span><br><span class="line">                       <span class="attr">plotDendrograms</span> = FALSE, <span class="attr">xLabelsAngle</span> = <span class="number">90</span>)</span><br></pre></td></tr></table></figure><p><img src="http://www.bio-info-trainee.com/wp-content/uploads/2017/09/step7-Eigengene-dendrogram.png" alt="img"><span class="image-caption-center">img</span></p><h3 id="step8-提取指定模块的基因名"><a href="#step8-提取指定模块的基因名" class="headerlink" title="step8:提取指定模块的基因名"></a>step8:提取指定模块的基因名</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Select module</span></span><br><span class="line">module = <span class="string">"brown"</span>;</span><br><span class="line"><span class="comment"># Select module probes</span></span><br><span class="line">probes = colnames(datExpr) <span class="comment">## 我们例子里面的probe就是基因名</span></span><br><span class="line">inModule = (moduleColors==module);</span><br><span class="line">modProbes = probes[inModule];</span><br></pre></td></tr></table></figure><p>有了基因信息，下游分析就很简单了。包括GO/KEGG等功能数据库的注释。</p><h3 id="Step9-模块的导出"><a href="#Step9-模块的导出" class="headerlink" title="Step9: 模块的导出"></a>Step9: 模块的导出</h3><p>主要模块里面的基因直接的相互作用关系信息可以导出到<strong>cytoscape</strong>,<strong>VisANT</strong>等网络可视化软件。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Recalculate topological overlap</span></span><br><span class="line">TOM = TOMsimilarityFromExpr(datExpr, power = 6); </span><br><span class="line"><span class="comment"># Select module</span></span><br><span class="line">module = <span class="string">"brown"</span>;</span><br><span class="line"><span class="comment"># Select module probes</span></span><br><span class="line">probes = colnames(datExpr) <span class="comment">## 我们例子里面的probe就是基因名</span></span><br><span class="line">inModule = (moduleColors==module);</span><br><span class="line">modProbes = probes[inModule]; </span><br><span class="line"><span class="comment">## 也是提取指定模块的基因名</span></span><br><span class="line"><span class="comment"># Select the corresponding Topological Overlap</span></span><br><span class="line">modTOM = TOM[inModule, inModule];</span><br><span class="line">dimnames(modTOM) = list(modProbes, modProbes)</span><br><span class="line"><span class="comment">## 模块对应的基因关系矩阵</span></span><br></pre></td></tr></table></figure><p>首先是导出到<strong>VisANT</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vis</span> = exportNetworkToVisANT(modTOM,</span><br><span class="line"><span class="attr">file</span> = paste(<span class="string">"VisANTInput-"</span>, module, <span class="string">".txt"</span>, sep=<span class="string">""</span>),</span><br><span class="line"><span class="attr">weighted</span> = <span class="literal">TRUE</span>,</span><br><span class="line"><span class="attr">threshold</span> = <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>然后是导出到<strong>cytoscape</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cyt = exportNetworkToCytoscape(</span><br><span class="line">     modTOM,</span><br><span class="line">    edgeFile = paste(<span class="string">"CytoscapeInput-edges-"</span>, paste(module, <span class="attribute">collapse</span>=<span class="string">"-"</span>), <span class="string">".txt"</span>, <span class="attribute">sep</span>=<span class="string">""</span>),</span><br><span class="line">    nodeFile = paste(<span class="string">"CytoscapeInput-nodes-"</span>, paste(module, <span class="attribute">collapse</span>=<span class="string">"-"</span>), <span class="string">".txt"</span>, <span class="attribute">sep</span>=<span class="string">""</span>),</span><br><span class="line">    weighted = <span class="literal">TRUE</span>,</span><br><span class="line">    threshold = 0.02,</span><br><span class="line">    nodeNames = modProbes, </span><br><span class="line">    nodeAttr = moduleColors[inModule]</span><br><span class="line">                              );</span><br></pre></td></tr></table></figure><p>如果模块包含的基因太多，网络太复杂，还可以进行筛选，比如：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nTop = 30;</span><br><span class="line">IMConn = softConnectivity(datExpr[, modProbes]);</span><br><span class="line">top = (rank(-IMConn) &lt;= nTop)</span><br><span class="line">filter &lt;- modTOM[top, top]</span><br></pre></td></tr></table></figure><p>后面就是cytoscape自身的教程了，这里不再赘述。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>clusterProfiler包</title>
      <link href="/hexo/2018/12/23/2018-12-23_clusterProfiler/"/>
      <url>/hexo/2018/12/23/2018-12-23_clusterProfiler/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p> <a href="https://bioconductor.org/packages/release/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html" target="_blank" rel="noopener">clusterProfiler</a>包</p><h2 id="GO-classification-（GO分类，似乎不重要的功能）"><a href="#GO-classification-（GO分类，似乎不重要的功能）" class="headerlink" title="GO classification （GO分类，似乎不重要的功能）"></a>GO classification （GO分类，似乎不重要的功能）</h2><p><code>groupGO</code> is designed for gene classification based on GO distribution at a specific level. </p><p><strong>问题：</strong> GO的level，在什么研究中会涉及到？ 一般来说，level越大，GO功能越具体。level就像一棵树树主干一样，发了不同的枝叶，level越大枝叶越详细。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">data(geneList, package=<span class="string">"DOSE"</span>)</span><br><span class="line">gene &lt;- names(geneList)[abs(geneList) &gt; <span class="number">2</span>]</span><br><span class="line">gene.df &lt;- bitr(gene, fromType = <span class="string">"ENTREZID"</span>,</span><br><span class="line">        toType = c(<span class="string">"ENSEMBL"</span>, <span class="string">"SYMBOL"</span>),</span><br><span class="line">        OrgDb = org.Hs.eg.db)</span><br><span class="line">head(gene.df)</span><br><span class="line"><span class="comment">##   ENTREZID         ENSEMBL SYMBOL</span></span><br><span class="line"><span class="comment">## 1     4312 ENSG00000196611   MMP1</span></span><br><span class="line"><span class="comment">## 2     8318 ENSG00000093009  CDC45</span></span><br><span class="line"><span class="comment">## 3    10874 ENSG00000109255    NMU</span></span><br><span class="line"><span class="comment">## 4    55143 ENSG00000134690  CDCA8</span></span><br><span class="line"><span class="comment">## 5    55388 ENSG00000065328  MCM10</span></span><br><span class="line"><span class="comment">## 6      991 ENSG00000117399  CDC20</span></span><br><span class="line">ggo &lt;- groupGO(gene     = gene,</span><br><span class="line">               OrgDb    = org.Hs.eg.db,</span><br><span class="line">               ont      = <span class="string">"CC"</span>,</span><br><span class="line">               level    = <span class="number">3</span>,</span><br><span class="line">               readable = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h2 id="GO-over-representation-test（GO分析，常用）"><a href="#GO-over-representation-test（GO分析，常用）" class="headerlink" title="GO over-representation test（GO分析，常用）"></a>GO over-representation test（GO分析，常用）</h2><p>Over-representation test(Boyle et al. 2004) were implemented in <a href="https://www.bioconductor.org/packages/clusterProfiler" target="_blank" rel="noopener">clusterProfiler</a>. For calculation details and explanation of paramters, please refer to the vignette of <a href="https://www.bioconductor.org/packages/DOSE" target="_blank" rel="noopener">DOSE</a>.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ego &lt;- enrichGO(gene          = gene,</span><br><span class="line">                universe      = names(geneList),</span><br><span class="line">                OrgDb         = org.Hs.eg.db,</span><br><span class="line">                ont           = <span class="string">"CC"</span>,</span><br><span class="line">                pAdjustMethod = <span class="string">"BH"</span>,</span><br><span class="line">                pvalueCutoff  = <span class="number">0.01</span>,</span><br><span class="line">                qvalueCutoff  = <span class="number">0.05</span>,</span><br><span class="line">        readable      = <span class="literal">TRUE</span>)</span><br><span class="line">head(ego)</span><br><span class="line"><span class="comment">##                    ID                              Description GeneRatio</span></span><br><span class="line"><span class="comment">## GO:0005819 GO:0005819                                  spindle    25/202</span></span><br><span class="line"><span class="comment">## GO:0005876 GO:0005876                      spindle microtubule    12/202</span></span><br><span class="line"><span class="comment">## GO:0000779 GO:0000779 condensed chromosome, centromeric region    15/202</span></span><br><span class="line"><span class="comment">## GO:0072686 GO:0072686                          mitotic spindle    14/202</span></span><br><span class="line"><span class="comment">## GO:0000775 GO:0000775           chromosome, centromeric region    18/202</span></span><br><span class="line"><span class="comment">## GO:0000776 GO:0000776                              kinetochore    15/202</span></span><br><span class="line"><span class="comment">##              BgRatio       pvalue     p.adjust       qvalue</span></span><br><span class="line"><span class="comment">## GO:0005819 262/11812 2.569986e-12 8.146855e-10 7.520590e-10</span></span><br><span class="line"><span class="comment">## GO:0005876  45/11812 7.912518e-12 1.254134e-09 1.157726e-09</span></span><br><span class="line"><span class="comment">## GO:0000779  91/11812 3.254384e-11 3.438799e-09 3.174452e-09</span></span><br><span class="line"><span class="comment">## GO:0072686  84/11812 1.292642e-10 9.903693e-09 9.142376e-09</span></span><br><span class="line"><span class="comment">## GO:0000775 156/11812 1.562097e-10 9.903693e-09 9.142376e-09</span></span><br><span class="line"><span class="comment">## GO:0000776 106/11812 3.073022e-10 1.623580e-08 1.498772e-08</span></span><br></pre></td></tr></table></figure><p>Any gene ID type that supported in <code>OrgDb</code> can be directly used in GO analyses. User need to specify the <code>keyType</code> parameter to specify the input gene ID type.</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ego2 &lt;- enrichGO(<span class="attr">gene</span>         = gene.df$ENSEMBL,</span><br><span class="line">                <span class="attr">OrgDb</span>         = org.Hs.eg.db,</span><br><span class="line">                <span class="attr">keyType</span>       = 'ENSEMBL',</span><br><span class="line">                <span class="attr">ont</span>           = <span class="string">"CC"</span>,</span><br><span class="line">                <span class="attr">pAdjustMethod</span> = <span class="string">"BH"</span>,</span><br><span class="line">                <span class="attr">pvalueCutoff</span>  = <span class="number">0.01</span>,</span><br><span class="line">                <span class="attr">qvalueCutoff</span>  = <span class="number">0.05</span>)</span><br></pre></td></tr></table></figure><p>Gene ID can be mapped to gene Symbol by using paramter <code>readable=TRUE</code> or <code>setReadable</code> function.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ego2 &lt;- setReadable(ego2, OrgDb = org<span class="selector-class">.Hs</span><span class="selector-class">.eg</span><span class="selector-class">.db</span>)</span><br></pre></td></tr></table></figure><h2 id="KEGG-over-representation-test"><a href="#KEGG-over-representation-test" class="headerlink" title="KEGG over-representation test"></a>KEGG over-representation test</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kk &lt;- enrichKEGG(gene         = gene,</span><br><span class="line">                 organism     = <span class="string">'hsa'</span>,</span><br><span class="line">                 pvalueCutoff = <span class="number">0.05</span>)</span><br><span class="line">head(kk)</span><br></pre></td></tr></table></figure><h2 id="KEGG-Module-over-representation-test"><a href="#KEGG-Module-over-representation-test" class="headerlink" title="KEGG Module over-representation test"></a>KEGG Module over-representation test</h2><p><a href="http://www.genome.jp/kegg/module.html" target="_blank" rel="noopener">KEGG Module</a> is a collection of manually defined function units. In some situation, KEGG Modules have a more straightforward interpretation.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkk &lt;- enrichMKEGG(gene = gene,</span><br><span class="line">                   organism = <span class="string">'hsa'</span>)</span><br></pre></td></tr></table></figure><h2 id="GO-Gene-Set-Enrichment-Analysis"><a href="#GO-Gene-Set-Enrichment-Analysis" class="headerlink" title="GO Gene Set Enrichment Analysis"></a>GO Gene Set Enrichment Analysis</h2><p>GO GSEA 与GSEA有什么区别?</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ego3 &lt;- gseGO(geneList     = geneList,</span><br><span class="line">              OrgDb        = org.Hs.eg.db,</span><br><span class="line">              ont          = <span class="string">"CC"</span>,</span><br><span class="line">              nPerm        = <span class="number">1000</span>,</span><br><span class="line">              minGSSize    = <span class="number">100</span>,</span><br><span class="line">              maxGSSize    = <span class="number">500</span>,</span><br><span class="line">              pvalueCutoff = <span class="number">0.05</span>,</span><br><span class="line">              verbose      = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><h2 id="KEGG-Gene-Set-Enrichment-Analysis"><a href="#KEGG-Gene-Set-Enrichment-Analysis" class="headerlink" title="KEGG Gene Set Enrichment Analysis"></a>KEGG Gene Set Enrichment Analysis</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">kk2 &lt;- gseKEGG(geneList     = geneList,</span><br><span class="line">               organism     = <span class="string">'hsa'</span>,</span><br><span class="line">               nPerm        = <span class="number">1000</span>,</span><br><span class="line">               minGSSize    = <span class="number">120</span>,</span><br><span class="line">               pvalueCutoff = <span class="number">0.05</span>,</span><br><span class="line">               verbose      = <span class="literal">FALSE</span>)</span><br><span class="line">head(kk2)</span><br><span class="line"><span class="comment">##                ID                              Description setSize</span></span><br><span class="line"><span class="comment">## hsa04151 hsa04151               PI3K-Akt signaling pathway     322</span></span><br><span class="line"><span class="comment">## hsa04510 hsa04510                           Focal adhesion     188</span></span><br><span class="line"><span class="comment">## hsa04218 hsa04218                      Cellular senescence     143</span></span><br><span class="line"><span class="comment">## hsa05166 hsa05166  Human T-cell leukemia virus 1 infection     200</span></span><br><span class="line"><span class="comment">## hsa05169 hsa05169             Epstein-Barr virus infection     192</span></span><br><span class="line"><span class="comment">## hsa05170 hsa05170 Human immunodeficiency virus 1 infection     189</span></span><br><span class="line"><span class="comment">##          enrichmentScore       NES      pvalue  p.adjust    qvalues rank</span></span><br><span class="line"><span class="comment">## hsa04151      -0.3482755 -1.503715 0.001328021 0.0276644 0.01814059 1997</span></span><br><span class="line"><span class="comment">## hsa04510      -0.4188582 -1.725829 0.001390821 0.0276644 0.01814059 2183</span></span><br><span class="line"><span class="comment">## hsa04218       0.4153718  1.792654 0.002967359 0.0276644 0.01814059 1155</span></span><br><span class="line"><span class="comment">## hsa05166       0.3926594  1.744570 0.003484321 0.0276644 0.01814059 1955</span></span><br><span class="line"><span class="comment">## hsa05169       0.4343189  1.916668 0.003533569 0.0276644 0.01814059 2820</span></span><br><span class="line"><span class="comment">## hsa05170       0.3711150  1.635182 0.003533569 0.0276644 0.01814059 3178</span></span><br><span class="line"><span class="comment">##                            leading_edge</span></span><br><span class="line"><span class="comment">## hsa04151 tags=23%, list=16%, signal=20%</span></span><br><span class="line"><span class="comment">## hsa04510 tags=27%, list=17%, signal=23%</span></span><br><span class="line"><span class="comment">## hsa04218  tags=17%, list=9%, signal=16%</span></span><br><span class="line"><span class="comment">## hsa05166 tags=26%, list=16%, signal=23%</span></span><br><span class="line"><span class="comment">## hsa05169 tags=40%, list=23%, signal=31%</span></span><br><span class="line"><span class="comment">## hsa05170 tags=38%, list=25%, signal=29%</span></span><br></pre></td></tr></table></figure><h2 id="KEGG-Module-Gene-Set-Enrichment-Analysis"><a href="#KEGG-Module-Gene-Set-Enrichment-Analysis" class="headerlink" title="KEGG Module Gene Set Enrichment Analysis"></a>KEGG Module Gene Set Enrichment Analysis</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkk2 &lt;- gseMKEGG(geneList = geneList,</span><br><span class="line">                 species = <span class="string">'hsa'</span>)</span><br></pre></td></tr></table></figure><hr><h5 id="剩下富集分析点图-直接看网页即可。"><a href="#剩下富集分析点图-直接看网页即可。" class="headerlink" title="剩下富集分析点图 直接看网页即可。"></a>剩下富集分析点图 直接看网页即可。</h5>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R Apply函数</title>
      <link href="/hexo/2018/12/22/2018-12-2_R_applyfunction/"/>
      <url>/hexo/2018/12/22/2018-12-2_R_applyfunction/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="table-container"><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>apply</td><td>Apply Functions Over ArrayMargins 对阵列行或者列使用函数</td><td>apply(X, MARGIN, FUN,…)</td></tr><tr><td>lapply</td><td>Apply a Function over a Listor Vector对列表或者向量使用函数</td><td>lapply(X, FUN,…)</td></tr><tr><td>sapply</td><td>Apply a Function over a Listor Vector对列表或者向量使用函数</td><td>sapply(X, FUN, …, simplify= TRUE, USE.NAMES = TRUE)</td></tr><tr><td>vapply</td><td>Apply a Function over a Listor Vector对列表或者向量使用函数</td><td>vapply(X, FUN, FUN.VALUE,…, USE.NAMES = TRUE)</td></tr><tr><td>tapply</td><td>Apply a Function Over aRagged Array对不规则阵列使用函数</td><td>tapply(X, INDEX, FUN = NULL,…, simplify = TRUE)</td></tr><tr><td>eapply</td><td>Apply a Function Over Valuesin an Environment对环境中的值使用函数</td><td>eapply(env, FUN, …,all.names = FALSE, USE.NAMES = TRUE)</td></tr><tr><td>mapply</td><td>Apply a Function to MultipleList or Vector Arguments对多个列表或者向量参数使用函数</td><td>mapply(FUN, …, MoreArgs =NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE)</td></tr><tr><td>rapply</td><td>Recursively Apply a Functionto a List运用函数递归产生列表</td><td>rapply(object, f, classes =”ANY”, deflt = NULL,how = c(“unlist”, “replace”, “list”),…)</td></tr></tbody></table></div><ul><li>apply(X, MARGIN, FUN,…)<br><em>X阵列，包括矩阵</em><br><em>MARGIN 1表示矩阵行，2表示矩阵列，也可以是c(1,2)</em></li><li>lapply(X, FUN, …)<br>X表示一个向量或者表达式对象，其余对象将被通过as.list强制转换为list</li><li>sapply(X, FUN, …, simplify= TRUE, USE.NAMES = TRUE)<br>X表示一个向量或者表达式对象，其余对象将被通过as.list强制转换为list<br>simplify逻辑值或者字符串，如果可以，结果应该被简化为向量、矩阵或者高维数组。必须是命名的，不能是简写。默认值是TRUE，若合适将会返回一个向量或者矩阵。如果simplify=”array”，结果将返回一个阵列。<br>USE.NAMES 逻辑值，如果为TRUE，且x没有被命名，则对x进行命名。这是一个用户友好版本，是lapply函数的包装版。该函数返回值为向量、矩阵，如果simplify=”array”，且合适的情况下，将会通过simplify2array()函数转换为阵列。sapply(x, f, simplify=FALSE,USE.NAMES=FALSE)返回的值与lapply(x,f)是一致的。</li></ul><p>举几个不是很常见但确实很有用的函数。</p><p>1、tapply()</p><p>tapply最常用于分组求和</p><p>df = data.frame(x1 = 1:15, x2 = c(rep(1, 1), rep(2, 2), </p><p>​        rep(3, 3), rep(4, 4), rep(5, 5)))</p><p>me = tapply(X = df$x1, INDEX = df$x2, FUN = mean); me</p><p>   1    2    3    4    5 </p><p>1.0  2.5  5.0  8.5 13.0 </p><p>其实这里最强大的是FUN这个参数，因为函数完全可以自己写，比如：</p><p>su = tapply(X = df$x1, INDEX = df$x2, FUN = function(x){sum(x)}); su</p><p>1  2  3  4  5 </p><p>1  5 15 34 65 </p><p>2、sweep()</p><p>sweep函数用法有点类似apply，但是比apply更强大。</p><p>mat = matrix(1:25, ncol = 5, byrow = T)</p><p>sweep(mat, 1, 1:5, FUN = “+”)</p><p>​     [,1] [,2] [,3] [,4] [,5]</p><p>[1,]    2    3    4    5    6</p><p>[2,]    8    9   10   11   12</p><p>[3,]   14   15   16   17   18</p><p>[4,]   20   21   22   23   24</p><p>[5,]   26   27   28   29   30</p><p>sweep(mat, 2, 1:5, FUN = “-“)</p><p>​     [,1] [,2] [,3] [,4] [,5]</p><p>[1,]    0    0    0    0    0</p><p>[2,]    5    5    5    5    5</p><p>[3,]   10   10   10   10   10</p><p>[4,]   15   15   15   15   15</p><p>[5,]   20   20   20   20   20</p><p>同样的，这里函数可以自己定义。</p><p>3、coplot()</p><p>coplot这个协同图函数tiger的课程中有讲到过，简单的用法如下：</p><p>studata = read.table(‘exam3.7data.txt’, header = TRUE); studata</p><p>   学号    姓名 性别 年龄 身高  体重</p><p>1     1   Alice    F   13 56.5  84.0</p><p>2     2   Becka    F   13 65.3  98.0</p><p>3     3    Gail    F   14 64.3  90.0</p><p>4     4   Karen    F   12 56.3  77.0</p><p>5     5   Kathy    F   12 59.8  84.5</p><p>6     6    Mary    F   15 66.5 112.0</p><p>7     7   Sandy    F   11 51.3  50.5</p><p>8     8  Sharon    F   15 62.5 112.5</p><p>9     9   Tammy    F   14 62.8 102.5</p><p>10   10  Alfred    M   14 69.0 112.5</p><p>11   11    Duke    M   14 63.5 102.5</p><p>12   12   Guido    M   15 67.0 133.0</p><p>13   13   James    M   12 57.3  83.0</p><p>14   14 Jeffrey    M   13 62.5  84.0</p><p>15   15    John    M   12 59.0  99.5</p><p>16   16  Philip    M   16 72.0 150.0</p><p>17   17  Robert    M   12 64.8 128.0</p><p>18   18  Thomas    M   11 57.5  85.0</p><p>19   19 William    M   15 66.5 112.0</p><p>coplot(体重 ~ 身高 | 性别 + 年龄, data = studata)</p><p>其实运用R的技巧，这个函数能做的事情还有好多，比如：</p><p>panel.lm = function(x, y, …) {</p><p>  tmp = lm(y ~ x)</p><p>  abline(tmp, lwd = 2, col = 4)</p><p>  points(x,y, …)}</p><p>coplot(体重 ~ 身高 | 性别 + 年龄, data = studata, panel = panel.lm, number = 3)</p><p>如果还有其他因素，这个函数还能显示更多：</p><p>studata$team = c(rep(2, 10), rep(3, 9))</p><p>coplot(体重 ~ 身高 | 性别 + 年龄, panel = panel.lm, cex = 1.5, pch = 19, number = 3,</p><p>​        col = studata$team, data = studata)</p><p>如果把学生按组或其他因素分开，也能用散点颜色进行区分。</p><p>如果还有成绩等因素，还能按成绩等级或者平均分进行划分。。。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R语言字符串处理汇总</title>
      <link href="/hexo/2018/12/21/2018-12-2_String_process/"/>
      <url>/hexo/2018/12/21/2018-12-2_String_process/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="字符翻译"><a href="#字符翻译" class="headerlink" title="字符翻译"></a>字符翻译</h1><ul><li><p>tolower(),</p></li><li><p>toupper()</p></li><li><p>chartr()</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dna &lt;-<span class="string">"AgCTaaGGGcctTagct"</span></span><br><span class="line"><span class="function"><span class="title">chartr</span><span class="params">(<span class="string">"T"</span>, <span class="string">"U"</span>, dna)</span></span>#将T碱基替换成U碱基</span><br></pre></td></tr></table></figure></li></ul><h1 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h1><ul><li><p>paste (…, sep = “ “, collapse = NULL)</p></li><li><p>paste0(…, collapse = NULL)</p><p><em>sep:     a character string to separate the terms.</em></p><p><em>collapse: an optional character string to separate the results.</em></p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">paste(<span class="string">"control"</span>, <span class="number">1</span>:<span class="number">3</span>, sep =<span class="string">"_"</span>)</span><br><span class="line"><span class="comment">## [1] "control_1" "control_2" "control_3"</span></span><br><span class="line">x &lt;- list(a =<span class="string">"aa"</span>, b =<span class="string">"bb"</span>)</span><br><span class="line">y &lt;- list(c =<span class="number">1</span>, d =<span class="number">2</span>)</span><br><span class="line">paste(x, y, sep =<span class="string">"-"</span>)</span><br><span class="line"><span class="comment">## [1] "aa-1" "bb-2"</span></span><br><span class="line">paste(x, y, sep =<span class="string">"-"</span>, collapse =<span class="string">";"</span>)</span><br><span class="line"><span class="comment">## [1] "aa-1;bb-2"</span></span><br><span class="line">paste(x, collapse =<span class="string">":"</span>)</span><br><span class="line"><span class="comment">## [1] "aa:bb"</span></span><br></pre></td></tr></table></figure><p><strong>特殊应用场景</strong>：对应一个矩阵x, 按行连接矩阵元素(以“#”分隔)并生成一个向量.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste(x, collapse = <span class="string">'#'</span>)</span><br></pre></td></tr></table></figure><h1 id="字符串替换"><a href="#字符串替换" class="headerlink" title="字符串替换"></a>字符串替换</h1><ul><li><p>gsub(pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)</p><p><em>gsub()是对向量里面的每个元素进行搜素，如果发现元素里面有多个位置匹配了模式，则全部进行替换.</em></p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">text &lt;- c(<span class="string">"we are the world"</span>, <span class="string">"we are the children"</span>) </span><br><span class="line">gsub(<span class="string">"w"</span>, <span class="string">"W"</span>, text)</span><br><span class="line"><span class="comment"># [1] "We are the World"    "We are the children" </span></span><br><span class="line">gsub(<span class="string">" "</span>, <span class="string">""</span>, <span class="string">"abc def ghi"</span>)</span><br><span class="line"><span class="comment"># [1] "abcdefghi"</span></span><br></pre></td></tr></table></figure><h1 id="字符串查找"><a href="#字符串查找" class="headerlink" title="字符串查找"></a>字符串查找</h1><ul><li><p>grep(pattern, x, ignore.case= F, perl= F, value= F, fixed= F, useBytes= F, invert= F</p><p><em>返回向量x中哪个元素匹配了模式pattern（即返回了向量x的某些下标）或者具体哪个元素匹配了模式（通过设置value参数来完成）</em></p></li><li><p>grepl(pattern, x, ignore.case= F, perl= F, fixed= F, useBytes= F) </p><p><em>返回一系列逻辑值，其长度等同于向量x的长度，表示向量x中的元素是否匹配了模式。</em></p><p><code>以上两个函数都没有提供具体的位置信息，即向量x中的元素在哪个位置匹配了模式。</code></p></li><li><p>regexpr(pattern, text, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)</p><p><em>查找每个向量中每个元素第一个匹配的位置，返回值是向量</em></p></li><li><p>regexec(pattern, text, ignore.case = FALSE, fixed = FALSE, useBytes = FALSE)</p><p> <em>查找每个向量中每个元素第一个匹配的位置，返回值是list</em></p></li><li><p><strong>gregexpr</strong>(pattern, text, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)</p><p> <strong><em>查找向量中每个元素所有能匹配的位置，返回值是list。 这个函数最常用☆</em></strong></p></li></ul><p>​       <em><code>以上三个返回的结果中包含了匹配的具体位置和字符串长度信息（因此可用于字符串的提取操作中去）</code></em></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 非常清晰的示例程序</span></span><br><span class="line">text &lt;- c(<span class="string">"We are the world"</span>, <span class="string">"we are the children"</span>)</span><br><span class="line">grep(<span class="string">"We"</span>, text)<span class="comment">#向量text中的哪些元素匹配了单词'We'</span></span><br><span class="line"><span class="comment">## [1] 1</span></span><br><span class="line">grep(<span class="string">"We"</span>, text, invert =<span class="literal">T</span>)<span class="comment">#向量text中的哪些元素没有匹配单词'We'</span></span><br><span class="line"><span class="comment">## [1] 2</span></span><br><span class="line">grep(<span class="string">"we"</span>, text, ignore.case =<span class="literal">T</span>)<span class="comment">#匹配时忽略大小写</span></span><br><span class="line"><span class="comment">## [1] 1 2</span></span><br><span class="line">grepl(<span class="string">"We"</span>, text)<span class="comment">#向量text中的每个元素是否匹配了单词'We'，即只返回TRUE或FALSE</span></span><br><span class="line"><span class="comment">## [1] TRUE FALSE</span></span><br><span class="line"></span><br><span class="line">regexpr(<span class="string">"e"</span>, text)</span><br><span class="line"><span class="comment">## [1] 2 2</span></span><br><span class="line"><span class="comment">## attr(,"match.length")</span></span><br><span class="line"><span class="comment">## [1] 1 1</span></span><br><span class="line"><span class="comment">## attr(,"useBytes")</span></span><br><span class="line"><span class="comment">## [1] TRUE</span></span><br><span class="line"></span><br><span class="line">regexec(<span class="string">"e"</span>, text) </span><br><span class="line"><span class="comment">## [[1]]</span></span><br><span class="line"><span class="comment">## [1] 2</span></span><br><span class="line"><span class="comment">## attr(,"match.length")</span></span><br><span class="line"><span class="comment">## [1] 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## [[2]]</span></span><br><span class="line"><span class="comment">## [1] 2</span></span><br><span class="line"><span class="comment">## attr(,"match.length")</span></span><br><span class="line"><span class="comment">## [1] 1</span></span><br><span class="line"></span><br><span class="line">gregexpr(<span class="string">"e"</span>, text)</span><br><span class="line"><span class="comment">## [[1]]</span></span><br><span class="line"><span class="comment">## [1]  2  6 10</span></span><br><span class="line"><span class="comment">## attr(,"match.length")</span></span><br><span class="line"><span class="comment">## [1] 1 1 1</span></span><br><span class="line"><span class="comment">## attr(,"useBytes")</span></span><br><span class="line"><span class="comment">## [1] TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## [[2]]</span></span><br><span class="line"><span class="comment">## [1]  2  6 10 18</span></span><br><span class="line"><span class="comment">## attr(,"match.length")</span></span><br><span class="line"><span class="comment">## [1] 1 1 1 1</span></span><br><span class="line"><span class="comment">## attr(,"useBytes")</span></span><br><span class="line"><span class="comment">## [1] TRUE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##另外一个例子</span></span><br><span class="line">gregexpr(pattern =<span class="string">'2'</span>,<span class="string">"the2quickbrownfoxeswere2tired"</span>)</span><br><span class="line"><span class="keyword">library</span>(stringr)</span><br><span class="line">str_locate_all(pattern =<span class="string">'2'</span>, <span class="string">"the2quickbrownfoxeswere2tired"</span>)</span><br><span class="line"><span class="comment">##[[1]]</span></span><br><span class="line"><span class="comment">##     start end</span></span><br><span class="line"><span class="comment">##[1,]     4   4</span></span><br><span class="line"><span class="comment">##[2,]    24  24</span></span><br><span class="line">lapply(strsplit(x, <span class="string">''</span>), <span class="keyword">function</span>(x) which(x == <span class="string">'2'</span>))</span><br></pre></td></tr></table></figure><h3 id="完全匹配"><a href="#完全匹配" class="headerlink" title="完全匹配"></a>完全匹配</h3><p> match(x, table, nomatch= NAinteger, incomparables)</p><p><em>只有参数x的内容被完全匹配，函数才会返回参数x所在table参数中的下标，否则的话会返回nomatch参数中定义的值（默认是NA）</em></p><p>此外还有一个charmatch()或者pmatch()，其命令形式类似于match。同样该函数也会返回其匹配字符串所在table中的下标，该函数在进行匹配时，会从table里字符串的最左面（即第一个字符）开始匹配，如果起始位置没有匹配则返回NA；如果同时部分匹配和完全匹配，则会优先选择完全匹配；如果同时有多个完全匹配或者多个部分匹配时，则会返回0；如果以上三个都没有，则返回NA。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">text &lt;- c(<span class="string">"We are the world"</span>, <span class="string">"we are the children"</span>, <span class="string">"we"</span>) </span><br><span class="line">match(<span class="string">"we"</span>, text)</span><br><span class="line"><span class="comment"># [1] 3 </span></span><br><span class="line">match(<span class="number">2</span>, c(<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>))</span><br><span class="line"><span class="comment"># [1] 3 </span></span><br><span class="line">match(<span class="string">"xx"</span>, c(<span class="string">"abc"</span>, <span class="string">"xxx"</span>, <span class="string">"xx"</span>, <span class="string">"xx"</span>))<span class="comment">#只会返回第一个完全匹配的元素的下标</span></span><br><span class="line"><span class="comment"># [1] 3 </span></span><br><span class="line">match(<span class="string">"xx"</span>, c(<span class="string">"abc"</span>, <span class="string">"xxx"</span>))<span class="comment"># 没有完全匹配的，因此返回NA</span></span><br><span class="line"><span class="comment"># [1] NA </span></span><br><span class="line"></span><br><span class="line">charmatch(<span class="string">"xx"</span>, c(<span class="string">"abc"</span>, <span class="string">"xxa"</span>))</span><br><span class="line"><span class="comment"># [1] 2 </span></span><br><span class="line">charmatch(<span class="string">"xx"</span>, c(<span class="string">"abc"</span>, <span class="string">"axx"</span>))<span class="comment"># 从最左面开始匹配</span></span><br><span class="line"><span class="comment"># [1] NA </span></span><br><span class="line">charmatch(<span class="string">"xx"</span>, c(<span class="string">"xxa"</span>, <span class="string">"xxb"</span>))<span class="comment"># 不唯一</span></span><br><span class="line"><span class="comment"># [1] 0 </span></span><br><span class="line">charmatch(<span class="string">"xx"</span>, c(<span class="string">"xxa"</span>, <span class="string">"xxb"</span>, <span class="string">"xx"</span>))<span class="comment"># 优先选择完全匹配，尽管有两个部分匹配</span></span><br><span class="line"><span class="comment"># [1] 3 </span></span><br><span class="line">charmatch(<span class="number">2</span>, c(<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>))</span><br><span class="line"><span class="comment"># [1] 3 </span></span><br><span class="line">charmatch(<span class="number">2</span>, c(<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">2</span>))</span><br><span class="line"><span class="comment"># [1] 0</span></span><br></pre></td></tr></table></figure><h3 id="多重查找"><a href="#多重查找" class="headerlink" title="多重查找"></a>多重查找</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- sample(<span class="number">1</span>:<span class="number">10</span>,<span class="number">20</span>,replace=<span class="literal">TRUE</span>)</span><br><span class="line">x </span><br><span class="line"><span class="comment"># [1]8 6 9 9 7 3 2 5 5 1 6 8 5 2 9 3 5 1 0 8 2</span></span><br><span class="line">inds &lt;- which(x %<span class="keyword">in</span>% c(<span class="number">8</span>,<span class="number">9</span>))</span><br><span class="line">inds</span><br><span class="line"><span class="comment"># [1]1 3 4 1 2 1 5 1 9</span></span><br><span class="line">x[inds]</span><br><span class="line"><span class="comment"># [1]8 9 9 8 9 8</span></span><br></pre></td></tr></table></figure><h3 id="查找所有重复项"><a href="#查找所有重复项" class="headerlink" title="查找所有重复项"></a>查找所有重复项</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vec &lt;- c(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"c"</span>,<span class="string">"c"</span>)  </span><br><span class="line">vec[duplicated(vec)| duplicated(vec, fromLast=<span class="literal">TRUE</span>)]</span><br><span class="line"><span class="comment">## [1] "c" "c" "c"</span></span><br></pre></td></tr></table></figure><h3 id="比较两个向量"><a href="#比较两个向量" class="headerlink" title="比较两个向量"></a>比较两个向量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#compare two vector in R</span></span><br><span class="line">all( vector1, vetor2 )</span><br><span class="line">isTRUE(all.equal(D,E))</span><br></pre></td></tr></table></figure><h1 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strsplit(x, split, fixed = <span class="literal">FALSE</span>, perl = <span class="literal">FALSE</span>, useBytes = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><ul><li><p><em>参数x为字符串格式向量，函数依次对向量的每个元素进行拆分</em></p></li><li><p><em>参数split为拆分位置的字串向量，即在哪个字串处开始拆分；该参数默认是正则表达式匹配；若设置fixed= T则表示是用普通文本匹配或者正则表达式的精确匹配。用普通文本来匹配的运算速度要快些。</em></p></li><li><p><em>参数perl的设置和perl的版本有关，表示可以使用perl语言里面的正则表达式。如果正则表达式过长，则可以考虑使用perl的正则来提高运算速度。</em></p></li><li><p>*参数useBytes表示是否逐字节进行匹配，默认为FALSE，表示是按字符匹配而不是按字节进行匹配</p></li></ul><p><code>strsplit()的返回结果是list类型，如果想将其转换成字符串类型，则可以使用上面提到的unlist()和as.character()。有一种特殊情况，如果strsplit()的split参数为空字符串的话，得函数的返回结果是一个个字符。</code></p><p><strong>特殊应用场景</strong>：对于输入是一个字符串vector, 取每一个元素拆分的第二位置的数据。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(plyr)</span><br><span class="line">gene=c(<span class="string">"1 KRT19"</span>, <span class="string">"2 AGR2"</span>,<span class="string">"3 RAB25"</span>, <span class="string">"4 CDH1"</span>,<span class="string">"5 ERBB3"</span>)</span><br><span class="line">gene=ldply(strsplit(gene, split = <span class="string">" "</span>))[[<span class="number">2</span>]]</span><br></pre></td></tr></table></figure><h1 id="字符串提取"><a href="#字符串提取" class="headerlink" title="字符串提取"></a>字符串提取</h1><ul><li><p>substr(x, start, stop)</p><p><em>返回字符串个数等于第一个向量的长度</em></p></li><li><p>substring(text, first, last)</p></li></ul><p>​      <em>返回的字符串个数等于其三个参数中长度最长的那个参数的长度</em></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x &lt;-<span class="string">"123456789"</span> </span><br><span class="line">substr(x, c(<span class="number">2</span>, <span class="number">4</span>), c(<span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>))</span><br><span class="line"><span class="comment"># [1] "234" </span></span><br><span class="line">substring(x, c(<span class="number">2</span>, <span class="number">4</span>), c(<span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>))</span><br><span class="line"><span class="comment"># [1] "234"     "45"      "2345678" </span></span><br><span class="line">y &lt;- c(<span class="string">"12345678"</span>, <span class="string">"abcdefgh"</span>)</span><br><span class="line">substr(y, c(<span class="number">2</span>, <span class="number">4</span>), c(<span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>))</span><br><span class="line"><span class="comment"># [1] "234" "de" </span></span><br><span class="line">substring(y, c(<span class="number">2</span>, <span class="number">4</span>), c(<span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>))</span><br><span class="line"><span class="comment"># [1] "234"     "de"      "2345678"</span></span><br></pre></td></tr></table></figure><p>从上面的输出结果来，向量x的长度为1，substr()不管后面的两个参数的长度如何，它只会用到这两个参数的第一个数值，即分别为2和4，表示提取的起始和终止位置分别为2和4，返回的结果则是字符串“234”。而用substring()来提取时，则会依据参数最长的last参数，此外还需要注意的是first和last两个参数的长度不等，这时会用到R里面的“短向量循环”原则，参数first会自动延长为c(2, 4, 2)，函数会依次提取从2到4，从4到5，从2到8这三个字符串。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用substing()可以很方便地把DNA或RNA序列进行翻译（三个碱基转换成一个密码子）。</span></span><br><span class="line">dna &lt;- paste(sample(c(<span class="string">"A"</span>, <span class="string">"G"</span>, <span class="string">"C"</span>, <span class="string">"T"</span>), <span class="number">12</span>, replace =<span class="literal">T</span>), collapse =<span class="string">""</span>) </span><br><span class="line">dna </span><br><span class="line"><span class="comment"># [1] "ATAACGCGTGGG" </span></span><br><span class="line">substring(dna, seq(<span class="number">1</span>, <span class="number">10</span>, by =<span class="number">3</span>), seq(<span class="number">3</span>, <span class="number">12</span>, by =<span class="number">3</span>))</span><br><span class="line"><span class="comment"># [1] "ATA" "ACG" "CGT" "GGG"</span></span><br></pre></td></tr></table></figure><h2 id="字符串的定制输出"><a href="#字符串的定制输出" class="headerlink" title="字符串的定制输出"></a>字符串的定制输出</h2><ul><li><p>strtrim(x, width)</p><p><em>将字符串修剪到特定的显示宽度</em></p></li><li><p>strwrap(x, width, indent= 0, exdent= 0, prefix= “”, simplify= T, initial= prefix)</p><p> <em>把字符串当成一个段落来处理（不管段落中是否有换行），按照段落的格式进行缩进和分行，返回结果就是  一行行的字符串.</em></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">strtrim(c(<span class="string">"abcde"</span>, <span class="string">"abcde"</span>, <span class="string">"abcde"</span>), c(<span class="number">1</span>, <span class="number">5</span>, <span class="number">10</span>))</span><br><span class="line"><span class="comment">## [1] "a"     "abcde" "abcde"</span></span><br><span class="line">strtrim(c(<span class="number">1</span>, <span class="number">123</span>, <span class="number">12345</span>), <span class="number">4</span>)<span class="comment">#短向量循环</span></span><br><span class="line"><span class="comment">## [1] "1"    "123"  "1234"</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="其他处理技巧汇总"><a href="#其他处理技巧汇总" class="headerlink" title="其他处理技巧汇总"></a>其他处理技巧汇总</h1><p>1,查找 NA</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which(<span class="name">is</span>.na(<span class="name">vector</span>))</span><br><span class="line">any(<span class="name">is</span>.na(<span class="name">data</span>))</span><br></pre></td></tr></table></figure><p>2, <strong>生成一个限定长度带名字的list</strong> </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mylist<span class="selector-class">.names</span> &lt;- c(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>)</span><br><span class="line">mylist &lt;- vector(<span class="string">"list"</span>, length(mylist.names))</span><br><span class="line"><span class="function"><span class="title">names</span><span class="params">(mylist)</span></span> &lt;- mylist.names</span><br></pre></td></tr></table></figure><p>3,  矩阵和向量按行乘</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MyMatrix &lt;- matrix(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>), nrow =<span class="number">2</span>, ncol=<span class="number">3</span>, byrow=<span class="literal">TRUE</span>)</span><br><span class="line">MyVector &lt;- c(<span class="number">1</span>:<span class="number">3</span>)</span><br><span class="line"><span class="comment"># You could use either:</span></span><br><span class="line">t(t(MyMatrix)* MyVector)</span><br><span class="line"><span class="comment"># or:</span></span><br><span class="line">MyMatrix %*% diag(MyVector)</span><br></pre></td></tr></table></figure><p>4,通过字符串取对象的值</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ret_series &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">x &lt;-<span class="string">"ret_series"</span>;</span><br><span class="line">get(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#相反功能</span></span><br><span class="line">assign(name[i],feature_cox_result_order)</span><br><span class="line">a =<span class="number">1</span></span><br><span class="line">get(<span class="string">'a'</span>)</span><br><span class="line"><span class="comment">#To use it with save:</span></span><br><span class="line">to_be_saved_obj = paste(<span class="string">"mat"</span>, a, sep =<span class="string">"_"</span>) </span><br><span class="line">save(list = to_be_saved_obj, file =<span class="string">'mat.Rdata'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>GSVA基因集合变异分析</title>
      <link href="/hexo/2018/12/21/2018-12-2_GSVA/"/>
      <url>/hexo/2018/12/21/2018-12-2_GSVA/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="GSVA-微阵列和RNA-Seq数据的基因集合变异分析"><a href="#GSVA-微阵列和RNA-Seq数据的基因集合变异分析" class="headerlink" title="GSVA 微阵列和RNA-Seq数据的基因集合变异分析"></a>GSVA 微阵列和RNA-Seq数据的基因集合变异分析</h2><p><a href="https://doi.org/10.1186/1471-2105-14-7" target="_blank" rel="noopener">GSVA: gene set variation analysis for microarray and RNA-Seq data</a>   </p><h2 id="GSVA和GSEA的不同"><a href="#GSVA和GSEA的不同" class="headerlink" title="GSVA和GSEA的不同"></a>GSVA和GSEA的不同</h2><ul><li>GSVA是先将基因对应到gene set上,得到不同的gene set的得分,然后再根据分组,对gene set的得分进行差异分析.</li><li>GSEA是先根据分组对基因进行差异分析,再将基因富集到gene set中.</li></ul><h2 id="GSVA分析中需要用的文件只有两个"><a href="#GSVA分析中需要用的文件只有两个" class="headerlink" title="GSVA分析中需要用的文件只有两个:"></a>GSVA分析中需要用的文件只有两个:</h2><p>(1)基因表达矩阵(gene expression matrix),SYMBOL或者INTERID格式的均可，但要做均一化处理(如TPM值即可) </p><p>(2)geneset:可以直接从MSigDB下载(一般是.gmt格式的文件)，或者自己制作。下载时，要选择合适的geneID，和表达矩阵保持一致即可。（一般都是SYMBOL格式，因为比较容易供使用者观看）</p><h2 id="MSiDB中的数据"><a href="#MSiDB中的数据" class="headerlink" title="MSiDB中的数据"></a>MSiDB中的数据</h2><p>官网主页： <a href="http://software.broadinstitute.org/gsea/msigdb/index.jsp" target="_blank" rel="noopener">http://software.broadinstitute.org/gsea/msigdb/index.jsp</a></p><p>比如我们需要用KEGG相关的的gene set,选择C2,单击C2进入详细介绍页面,就可以看到我们要下载的文件链接了,记得下载和自己的gene ID 格式相同的gmt文件.下载下来之后,可以看到gmt文件的内容也很单纯,每一行表示一个gene set.第一列是gene set的名字,第三列及之后是每个gene set中含有的gene,所以自己制作gene set时,先对gene set命名然后再添加基因就可以了,但要保证其合理性.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">gene &lt;- read.csv(<span class="string">"XXX.csv"</span>,header = <span class="literal">TRUE</span>,sep = <span class="string">","</span>)</span><br><span class="line">genesets &lt;- getGmt(<span class="string">"c2.cp.kegg.v6.1.symbols.gmt"</span>)</span><br><span class="line">nGrp1 &lt;-n</span><br><span class="line">nGrp2 &lt;- m </span><br><span class="line"><span class="comment">#n和m是对照组和处理组的组数。    </span></span><br><span class="line">design &lt;- cbind(sampleGroup1=<span class="number">1</span>, sampleGroup2vs1=c(rep(<span class="number">0</span>, nGrp1), rep(<span class="number">1</span>, nGrp2)))</span><br><span class="line"><span class="keyword">library</span>(limma)</span><br><span class="line"><span class="keyword">library</span>(GSVA)</span><br><span class="line"><span class="comment">#根据需要调整一下表达矩阵</span></span><br><span class="line">rownames(gene) &lt;- gene[,<span class="number">1</span>]    <span class="comment">#添加gene中的行标题</span></span><br><span class="line">gene &lt;- gene[,-<span class="number">1</span>]         <span class="comment">#删除第一列</span></span><br><span class="line">topMatrixGSVA &lt;- gsva(data.matrix(gene), genesets, min.sz=<span class="number">1</span>, max.sz=<span class="number">999999</span>, kcdf=<span class="string">"Poisson"</span>, abs.ranking=<span class="literal">FALSE</span>, verbose=<span class="literal">TRUE</span>)        <span class="comment">#得到GSVA在这些通路上的分值。</span></span><br></pre></td></tr></table></figure><h2 id="GSVA分析"><a href="#GSVA分析" class="headerlink" title="GSVA分析"></a>GSVA分析</h2><p><a href="https://bioconductor.org/packages/release/bioc/vignettes/GSVA/inst/doc/GSVA.pdf" target="_blank" rel="noopener">https://bioconductor.org/packages/release/bioc/vignettes/GSVA/inst/doc/GSVA.pdf</a><br><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(GSVA)</span><br><span class="line"></span><br><span class="line">p &lt;- <span class="number">20000</span>    <span class="comment">## number of genes</span></span><br><span class="line">n &lt;- <span class="number">30</span>       <span class="comment">## number of samples</span></span><br><span class="line">nGS &lt;- <span class="number">100</span>    <span class="comment">## number of gene sets</span></span><br><span class="line">min.sz &lt;- <span class="number">10</span>  <span class="comment">## minimum gene set size</span></span><br><span class="line">max.sz &lt;- <span class="number">100</span> <span class="comment">## maximum gene set size</span></span><br><span class="line">X &lt;- matrix(rnorm(p*n), nrow=p, dimnames=list(<span class="number">1</span>:p, <span class="number">1</span>:n))</span><br><span class="line">dim(X)</span><br><span class="line">gs &lt;- as.list(sample(min.sz:max.sz, size=nGS, replace=<span class="literal">TRUE</span>)) <span class="comment">## sample gene set sizes</span></span><br><span class="line">gs &lt;- lapply(gs, <span class="keyword">function</span>(n, p) sample(<span class="number">1</span>:p, size=n, replace=<span class="literal">FALSE</span>), p) <span class="comment">## sample gene sets</span></span><br><span class="line">es.max &lt;- gsva(X, gs, mx.diff=<span class="literal">FALSE</span>, verbose=<span class="literal">FALSE</span>, parallel.sz=<span class="number">1</span>)</span><br><span class="line">es.dif &lt;- gsva(X, gs, mx.diff=<span class="literal">TRUE</span>, verbose=<span class="literal">FALSE</span>, parallel.sz=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### code chunk number 3: maxvsdif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###################################################</span></span><br><span class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">2</span>), mar=c(<span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">1</span>))</span><br><span class="line">plot(density(as.vector(es.max)), main=<span class="string">"Maximum deviation from zero"</span>, xlab=<span class="string">"GSVA score"</span>, lwd=<span class="number">2</span>, las=<span class="number">1</span>, xaxt=<span class="string">"n"</span>, xlim=c(-<span class="number">0.75</span>, <span class="number">0.75</span>), cex.axis=<span class="number">0.8</span>)</span><br><span class="line">axis(<span class="number">1</span>, at=seq(-<span class="number">0.75</span>, <span class="number">0.75</span>, by=<span class="number">0.25</span>), labels=seq(-<span class="number">0.75</span>, <span class="number">0.75</span>, by=<span class="number">0.25</span>), cex.axis=<span class="number">0.8</span>)</span><br><span class="line">plot(density(as.vector(es.dif)), main=<span class="string">"Difference between largest\npositive and negative deviations"</span>,xlab=<span class="string">"GSVA score"</span>, lwd=<span class="number">2</span>, las=<span class="number">1</span>, xaxt=<span class="string">"n"</span>, xlim=c(-<span class="number">0.75</span>, <span class="number">0.75</span>), cex.axis=<span class="number">0.8</span>)</span><br><span class="line">axis(<span class="number">1</span>, at=seq(-<span class="number">0.75</span>, <span class="number">0.75</span>, by=<span class="number">0.25</span>), labels=seq(-<span class="number">0.75</span>, <span class="number">0.75</span>, by=<span class="number">0.25</span>), cex.axis=<span class="number">0.8</span>)</span><br></pre></td></tr></table></figure></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GSVA_mxdifff.jpg" alt=""></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>同源染色体和等位基因</title>
      <link href="/hexo/2018/11/08/2018-11-08_allele/"/>
      <url>/hexo/2018/11/08/2018-11-08_allele/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-同源染色体"><a href="#1-同源染色体" class="headerlink" title="1.同源染色体"></a>1.同源染色体</h2><h4 id="有丝分裂"><a href="#有丝分裂" class="headerlink" title="有丝分裂"></a>有丝分裂</h4><p>间期：染色质（呈松散状）自我复制形成两条完全一样的<strong>姐妹染色单体</strong>。</p><p>前期: 染色质高度螺旋化形成染色体。</p><blockquote><p>“X”中有两条染色单体，一条染色体，两个DNA分子</p><p>当“X”分裂成“|”和“|”后，这时没有染色单体了（“|”不能称为一条染色单体，只有在“X”这个形态时才能说其中有两条染色单体）</p><p>染色单体的计算根据着丝点，一个着丝点有两个染色单体。</p><p>“|”没有染色单体，一条染色体，一个DNA分子。</p></blockquote><p><img src="https://taoshengxu.github.io/DocumentGit/img/chromatin1.png" alt=""></p><p>末期：染色体解螺旋形成染色质。</p><h4 id="减数分裂"><a href="#减数分裂" class="headerlink" title="减数分裂"></a>减数分裂</h4><p>得到一套 单倍体（DNA仍然是双链）</p><h4 id="同源染色体"><a href="#同源染色体" class="headerlink" title="同源染色体"></a>同源染色体</h4><p>同源染色体是在二倍体生物细胞中，形态、结构基本相同的<a href="https://baike.baidu.com/item/%E6%9F%93%E8%89%B2%E4%BD%93/195881" target="_blank" rel="noopener">染色体</a>，并在减数第一次分裂（参考<a href="https://baike.baidu.com/item/%E5%87%8F%E6%95%B0%E5%88%86%E8%A3%82/67234" target="_blank" rel="noopener">减数分裂</a>）的<a href="https://baike.baidu.com/item/%E5%9B%9B%E5%88%86%E4%BD%93/5365946" target="_blank" rel="noopener">四分体</a>时期中彼此<a href="https://baike.baidu.com/item/%E8%81%94%E4%BC%9A" target="_blank" rel="noopener">联会</a>（若是三倍体及其他奇数倍体生物细胞，联会时会发生紊乱），最后分开到不同的<a href="https://baike.baidu.com/item/%E7%94%9F%E6%AE%96%E7%BB%86%E8%83%9E/1317972" target="_blank" rel="noopener">生殖细胞</a>（即精子、<a href="https://baike.baidu.com/item/%E5%8D%B5%E7%BB%86%E8%83%9E/769512" target="_blank" rel="noopener">卵细胞</a>）的一对染色体，在这一对染色体其中的一个来自母方，另一个来自父方。人类有23对染色体，每一对染色体都对应有一对等位基因。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/chromatinchromosome23.gif" alt=""></p><h2 id="2-基因座"><a href="#2-基因座" class="headerlink" title="2.基因座"></a>2.基因座</h2><p>在<a href="https://zh.wikipedia.org/wiki/%E7%94%9F%E7%89%A9%E5%AD%B8" target="_blank" rel="noopener">生物学</a>与<a href="https://zh.wikipedia.org/w/index.php?title=%E6%BC%94%E5%8C%96%E9%81%8B%E7%AE%97&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">演化运算</a>（evolutionary computation）中，<strong>基因座</strong>（英语：<strong>locus</strong>），也称为“基因位点”或“位点”，是指染色体上的固定位置，例如某个<a href="https://zh.wikipedia.org/wiki/%E5%9F%BA%E5%9B%A0" target="_blank" rel="noopener">基因</a>的所在。而基因座上的DNA序列可能有许多不同的变化，各种变化形式称为<a href="https://zh.wikipedia.org/wiki/%E7%AD%89%E4%BD%8D%E5%9F%BA%E5%9B%A0" target="_blank" rel="noopener">等位基因</a>（allele）。基因座在基因组中的排列位置称为<a href="https://zh.wikipedia.org/wiki/%E5%9F%BA%E5%9B%A0%E5%9C%96%E8%AD%9C" target="_blank" rel="noopener">基因图谱</a>（genetic map），<a href="https://zh.wikipedia.org/wiki/%E5%9F%BA%E5%9B%A0%E4%BD%9C%E5%9B%BE" target="_blank" rel="noopener">基因作图</a>（Gene mapping）则是测定基因座与特定<a href="https://zh.wikipedia.org/wiki/%E6%80%A7%E7%8B%80" target="_blank" rel="noopener">性状</a>关系的过程。</p><p><strong><a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%80%8D%E9%AB%94" target="_blank" rel="noopener">二倍体</a>与<a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E5%80%8D%E9%AB%94" target="_blank" rel="noopener">多倍体</a>细胞的某些染色体上，在同一基因座上有相同的等位基因，这类细胞称为<a href="https://zh.wikipedia.org/wiki/%E7%BA%AF%E5%90%88%E5%AD%90" target="_blank" rel="noopener">纯合子</a>/<a href="https://zh.wikipedia.org/wiki/%E5%90%8C%E5%9E%8B%E5%90%88%E5%AD%90" target="_blank" rel="noopener">同型合子</a>（homozygous）。若是相同基因座上含有不同的等位基因，则称作<a href="https://zh.wikipedia.org/wiki/%E7%95%B0%E5%9E%8B%E5%90%88%E5%AD%90" target="_blank" rel="noopener">杂合子</a>/<a href="https://zh.wikipedia.org/wiki/%E7%95%B0%E5%9E%8B%E5%90%88%E5%AD%90" target="_blank" rel="noopener">异型合子</a>（heterozygous）。</strong></p><h6 id="命名-：一个典型的基因座可能写成“6p21-3”，解释如下"><a href="#命名-：一个典型的基因座可能写成“6p21-3”，解释如下" class="headerlink" title="命名 ：一个典型的基因座可能写成“6p21.3”，解释如下"></a>命名 ：一个典型的基因座可能写成“6p21.3”，解释如下</h6><ul><li>6 = <a href="https://zh.wikipedia.org/wiki/6%E8%99%9F%E6%9F%93%E8%89%B2%E9%AB%94" target="_blank" rel="noopener">6号染色体</a></li><li>p = 短臂</li><li>21 = 2区, 1带</li><li>3 = 子带3</li></ul><p>区、带和子带是从<a href="https://zh.wikipedia.org/wiki/%E8%91%97%E7%B5%B2%E7%B2%92" target="_blank" rel="noopener">着丝粒</a>向外朝<a href="https://zh.wikipedia.org/wiki/%E7%AB%AF%E7%B2%92" target="_blank" rel="noopener">端粒</a>开始编号。</p><div class="table-container"><table><thead><tr><th><strong>符号</strong></th><th><strong>解释</strong></th></tr></thead><tbody><tr><td><em>6</em></td><td>染色体编号。</td></tr><tr><td><em>p</em></td><td>染色体上的短臂（<em>p</em>）或长臂（<em>q</em>）位置。<em>p</em>来自法文<em>petit</em> (小)；<em>q</em>则是选定<em>p</em>的下一个字母，也有来自法文<em>queue</em> (尾巴)一说。</td></tr><tr><td><em>21.3</em></td><td>染色体臂上的所在位置，21表示2区（region）1带（band），3表示子带（sub-band），染色体带经过适当染色之后，可于<a href="https://zh.wikipedia.org/wiki/%E9%A1%AF%E5%BE%AE%E9%8F%A1" target="_blank" rel="noopener">显微镜</a>底下观察。每个带皆有编号，最靠近<a href="https://zh.wikipedia.org/wiki/%E8%91%97%E7%B5%B2%E7%B2%92" target="_blank" rel="noopener">着丝粒</a>（centromere）的为1号。</td></tr></tbody></table></div><h2 id="3-等位基因"><a href="#3-等位基因" class="headerlink" title="3.等位基因"></a>3.等位基因</h2><p>在一个生物体里，某个基因的<a href="https://zh.wikipedia.org/wiki/%E5%9F%BA%E5%9B%A0%E5%9E%8B" target="_blank" rel="noopener">基因型</a>是由该基因所拥有的一对等位基因所决定。例如在人和其他<a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%80%8D%E9%AB%94" target="_blank" rel="noopener">二倍体</a>生物，也就是每条染色体都有两套的生物，其等位基因的两个位点决定了该基因的基因型。等位基因两个位点来自父辈和母辈的遗传，其基因型决定了生物的<a href="https://zh.wikipedia.org/wiki/%E8%A1%A8%E7%8E%B0%E5%9E%8B" target="_blank" rel="noopener">表现型</a>。 生物的表现型由一对等位基因的一个位点决定的，称<a href="https://zh.wikipedia.org/wiki/%E6%98%BE%E6%80%A7%E5%9F%BA%E5%9B%A0" target="_blank" rel="noopener">显性基因</a>；而由两个位点决定的，则称为<a href="https://zh.wikipedia.org/wiki/%E9%9A%90%E6%80%A7%E5%9F%BA%E5%9B%A0" target="_blank" rel="noopener">隐性基因</a>。例如等位基因一个位点的<a href="https://zh.wikipedia.org/wiki/%E7%AA%81%E5%8F%98" target="_blank" rel="noopener">突变</a>，可产生<a href="https://zh.wikipedia.org/wiki/%E7%99%8C%E5%9F%BA%E5%9B%A0" target="_blank" rel="noopener">癌基因</a>，而两个位点的突变或丢失，则可导致<a href="https://zh.wikipedia.org/wiki/%E8%82%BF%E7%98%A4%E6%8A%91%E5%88%B6%E5%9F%BA%E5%9B%A0" target="_blank" rel="noopener">肿瘤抑制基因</a>，或抑癌基因的突变。这些基因的改变是<a href="https://zh.wikipedia.org/wiki/%E8%82%BF%E7%98%A4" target="_blank" rel="noopener">肿瘤</a>发生的分子基础。</p><h2 id="4-基因变异"><a href="#4-基因变异" class="headerlink" title="4. 基因变异"></a>4. 基因变异</h2><p><img src="https://taoshengxu.github.io/DocumentGit/img/gene_variant.png" alt=""></p><p>Germline variant：与生俱来的与参考基因组不同的基因组位点；</p><p>Somatic variant：后天环境中新产生的基因组变异位点；(肿瘤发生的)</p><p>LoH variant : 杂合缺失变异</p><p>Allele frequency：变异位点等位基因频率</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>测序的几个概念</title>
      <link href="/hexo/2018/11/08/2018-11-08_squencing/"/>
      <url>/hexo/2018/11/08/2018-11-08_squencing/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="de-novo-测序"><a href="#de-novo-测序" class="headerlink" title="de-novo 测序"></a>de-novo 测序</h3><p>没有参考基因组情况下对新物种测序构建参考基因组</p><h3 id="DNA-Re-sequencing"><a href="#DNA-Re-sequencing" class="headerlink" title="DNA Re-sequencing"></a>DNA Re-sequencing</h3><p>相对于de-novo而言在有参考基因组的条件下进行较低覆盖度的测序，与参考基因组比对，寻找相似品种之间的差异。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>GISTIC2.0</title>
      <link href="/hexo/2018/11/08/2018-11-08_GISTIC2/"/>
      <url>/hexo/2018/11/08/2018-11-08_GISTIC2/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://www.jianshu.com/p/eafa7e266806" target="_blank" rel="noopener">https://www.jianshu.com/p/eafa7e266806</a>   <a href="http://www.bio-info-trainee.com/1648.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/1648.html</a></p><p>GISTIC2.0用以分析癌症拷贝数变异的一个数据处理模块。这个软件在TCGA计划里面被频繁使用者，用这个软件的目的很简单，就是你研究了很多癌症样本，通过芯片得到了每个样本的拷贝数变化信息，芯片结果一般是segment结果，可以解释为CNV区域，需要用GISTIC把样本综合起来分析，寻找somatic的CNV，并且注释基因信息。</p><blockquote><p> <strong>Summary:</strong><br> The GISTIC module identifies regions of the genome that are significantly amplified or deleted across a set of samples. Each aberration is assigned a G-score that considers the amplitude of the aberration as well as the frequency of its occurrence across samples. False Discovery Rate q-values are then calculated for the aberrant regions, and regions with q-values below a user-defined threshold are considered significant. For each significant region, a “peak region” is identified, which is the part of the aberrant region with greatest amplitude and frequency of alteration. In addition, a “wide peak” is determined using a leave-one-out algorithm to allow for errors in the boundaries in a single sample. The “wide peak” boundaries are more robust for identifying the most likely gene targets in the region. Each significantly aberrant region is also tested to determine whether it results primarily from broad events (longer than half a chromosome arm), focal events, or significant levels of both. The GISTIC module reports the genomic locations and calculated q-values for the aberrant regions. It identifies the samples that exhibit each significant amplification or deletion, and it lists genes found in each “wide peak” region.<br> <strong>References:</strong><br> Mermel C, Schumacher S, et al. (2011). “GISTIC2.0 facilitates sensitive and confident localization of the targets of focal somatic copy-number alteration in human cancers.” <em>Genome Biology</em>, <strong>12</strong>:R41.<br> Beroukhim R, Mermel C, et al. (2010). “The landscape of somatic copy -number alteration across human cancers.” <em>Nature</em>, <strong>463</strong>:899-905.</p><p>Beroukhim R, Getz G, et al. (2007). “Assessing the significance of chromosomal abberations in cancer: Methodology and application to glioma.” <em>Proc Natl Acad Sci,</em> <strong>104</strong>:20007-20012.</p></blockquote><h4 id="输出数据解读"><a href="#输出数据解读" class="headerlink" title="输出数据解读"></a><strong>输出数据解读</strong></h4><p>all_data_by_genes.txt 代表了基因（包括非编码RNA如miRNA，lncRNA）在样本中具体的拷贝数值。</p><p>all_lesions.conf_90.txt 代表识别的拷贝数扩增和缺失Peak区域。</p><p>all_thresholded.by_genes.txt 代表离散化之后的数值，如<strong>-2代表丢失两个拷贝，-1代表丢失一个拷贝,0代表拷贝数正常,1代表增加一个拷贝，2代表扩增两个拷贝</strong>。</p><p>broad_significance_results.txt代表显著发生拷贝数变异的broad区域。</p><p>broad_values_by_arm.txt 代表染色体臂在样本中的拷贝数数值。</p><p>scores.gistic代表通过该方法打分之后的结果。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>DNA甲基化</title>
      <link href="/hexo/2018/11/07/2018-11-07_DNAmethylation/"/>
      <url>/hexo/2018/11/07/2018-11-07_DNAmethylation/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-甲基化"><a href="#1-甲基化" class="headerlink" title="1. 甲基化"></a>1. 甲基化</h2><p>DNA甲基化是科学家们最早发现的DNA修饰途径之一，即在甲基转移酶的催化下，DNA的CG两个核苷酸的胞嘧啶被选择性地添加甲基，形成5－甲基胞嘧啶。</p><p><code>DNA甲基化通常抑制基因表达,去甲基化则诱导了基因的重新活化和表达。</code></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/methylation.png" alt=""></p><h2 id="2-CpG岛—-不易被甲基化"><a href="#2-CpG岛—-不易被甲基化" class="headerlink" title="2. CpG岛— 不易被甲基化"></a>2. CpG岛— 不易被甲基化</h2><p><strong>在哺乳动物中CpG以两种形式存在：一种是分散于DNA序列中；另一种呈现高度聚集状态，人们称之为CpG岛（CpG island）。</strong></p><p>CpG双核苷酸在人类基因组中的分布很不均一，而在基因组的某些区段，CpG保持或高于正常概率。CpG岛主要位于基因的启动子（promotor）和外显子区域，是富含CpG二核苷酸的一些区域，长度为300—3000bp。这里CpG是胞嘧啶（C）—磷酸（p）—鸟嘌呤（G）的缩写。CpG岛常位于基因转录调控区附近，与56%的人类基因组编码基因相关，因此<em>基因转录区CpG岛的甲基化状态的研究就显得十分重要</em>。人类基因组序列草图分析结果表明，人类基因组CpG岛约为28890个，大部分染色体每1Mb就有5-15个CpG岛，平均值为每Mb含10.5个CpG岛，CpG岛的数目与基因密度有良好的对应关系。</p><p>CpG岛经常出现在<a href="https://baike.baidu.com/item/%E7%9C%9F%E6%A0%B8%E7%94%9F%E7%89%A9" target="_blank" rel="noopener">真核生物</a>的编码基因的调控区，在其它地方出现时会由于CpG中的C易被甲基化而形成5’-甲基胞嘧啶，脱氨基后形成<a href="https://baike.baidu.com/item/%E8%83%B8%E8%85%BA%E5%98%A7%E5%95%B6" target="_blank" rel="noopener">胸腺嘧啶</a> T，由于T本身就会存在于DNA中，因此不易被修复，所以被淘汰。故CpG在基因组中是以岛的形式分布的。CpG岛，其中G在DNA链中紧随C后。在许多基因的启动子（promotor）或“起始”区域周围，甲基化经常被抑制。这些区域包含浓度相对较高的CpG对，与此段区域对应的染色体区段一起被称作CpG岛，其长度通常在几百到几千核苷酸的长度内变化。</p><p><strong>在正常组织里，70%～90%散在的CpG是被甲基修饰的，而与之相反，大小为100-1000bp左右且富含CpG二核苷酸的CpG岛，则往往非甲基化的。在肿瘤发生时,抑癌基因CpG岛以外的CpG序列非甲基化程度增加,CpG岛中的CpG则呈高度甲基化状态,导致抑癌基因表达的下降。</strong></p><p><strong>当DNA的CpG岛处于高甲基化水平时，基因表达水平被抑制。当DNA的CpG岛处于低甲基化水平时，基因得以正常表达。</strong></p><p>许多基因，尤其是<a href="https://baike.baidu.com/item/%E7%AE%A1%E5%AE%B6%E5%9F%BA%E5%9B%A0" target="_blank" rel="noopener">管家基因</a>的启动子区，其中通常存在一些富含双核苷酸“CG”的区域，称为“CpG岛”（CpG island）。<strong>研究<a href="https://baike.baidu.com/item/%E7%A2%B1%E5%9F%BA" target="_blank" rel="noopener">碱基</a>G和C在整个基因组内的含量和分布有十分重要的意义。例如在人类基因组内，GC的含量大约为40%；这些GC并不是平均分布在基因组内，在某些DNA片段上其含量可高达60%以上，而在另一些区域则只有33%左右。</strong>这种GC含量的差别，在<a href="https://baike.baidu.com/item/%E5%9F%BA%E5%9B%A0%E8%A1%A8%E8%BE%BE" target="_blank" rel="noopener">基因表达</a>的调控和基因突变上都可能扮演着重要的角色。在人类基因组内，存在有近3万个CpG岛；在大多数染色体上，平均每100万碱基含有5～15个CpG岛，其中有1.8万多个CpG岛片段的GC含量为60%～70%。通常，这些CpG岛不仅是基因的一种标志，而且还参与基因表达的调控和影响染色质的结构。例如， 除定位于失活X染色体上的基因、印迹基因和非表达的组织特异基因（奢侈基因）外，正常细胞的CpG岛由于被保护而处于非<a href="https://baike.baidu.com/item/%E7%94%B2%E5%9F%BA%E5%8C%96" target="_blank" rel="noopener">甲基化</a>状态。</p><h3 id="CpG岛总结"><a href="#CpG岛总结" class="headerlink" title="CpG岛总结"></a>CpG岛总结</h3><ul><li>CpG岛主要位于基因的启动子区，少量位于基因的第一个外显子区；其甲基化状态直接影响基因表达。</li><li>甲基化的 CpG 双核苷酸通过募集转录抑制因子或者阻碍转录激活因子的结合抑制基因的表达。</li><li>CpG岛一般是非甲基化的，而在失活 X染色体、印记基因和非表达的组织特异基因中则是甲基化的。</li><li>成体基因组通常中，奢侈基因呈现高密度甲基化，而含有丰富 CpG 岛的管家基因则呈非甲基化</li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>染色质 DNaseⅠ超敏感位点</title>
      <link href="/hexo/2018/11/07/2018-11-07_DNaseI/"/>
      <url>/hexo/2018/11/07/2018-11-07_DNaseI/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-染色质是什么"><a href="#1-染色质是什么" class="headerlink" title="1. 染色质是什么"></a>1. 染色质是什么</h2><p><img src="https://taoshengxu.github.io/DocumentGit/img/chromatin.png" alt=""></p><h2 id="2-染色质-DNaseⅠ超敏感位点（-DNaseⅠ-hypersensitive-sites，DHSs-）"><a href="#2-染色质-DNaseⅠ超敏感位点（-DNaseⅠ-hypersensitive-sites，DHSs-）" class="headerlink" title="2.  染色质 DNaseⅠ超敏感位点（(DNaseⅠ hypersensitive sites，DHSs)）"></a>2.  染色质 DNaseⅠ超敏感位点（(DNaseⅠ hypersensitive sites，DHSs)）</h2><p>基因活化时其染色质一般呈开放的疏松型构象，更易被 DNaseⅠ降解，形成 DNaseⅠ超敏感位点。当一个基因处于转录活性状态时，含有这个基因的染色质区域对DNase（一种内切块酶）降解的敏感性要比无转录活性区域高得多。仔细分析具有转录活性基因周围的DNA区域，表明有一个中心区域存在，称为超敏感区域（hypersensitive region）或超敏感位点（hypersensitive site），它对DNaseⅠ是高敏感的。这些位点或区域将首先受到DNaseⅠ的剪切。</p><p>ENCODE 计划研究确定 2890742 个高可信度 DHSs中，约 3% (75 575 个)的 DHSs 分布在 TSS 区，5%(135735 个)位于 TSS 区 2． 5 kb 内，95% DHSs 距离 TSS 区较远，称其为远端 DHSs。 </p><p>中文文章： 染色质 DNaseⅠ超敏感位点的定位及其转录调控功能的研究进展</p><h1 id="2016-9-28"><a href="#2016-9-28" class="headerlink" title="2016.9.28"></a>2016.9.28</h1><h2 id="1-DNase-I足迹法"><a href="#1-DNase-I足迹法" class="headerlink" title="1. DNase I足迹法"></a>1. DNase I足迹法</h2><p><a href="http://blog.sina.com.cn/s/blog_550f64320100hf0t.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_550f64320100hf0t.html</a></p><p>paper: 染色质DNaseⅠ超敏感位点的定位及其转录调控<br>功能的研究进展</p><h1 id="2016-9-29"><a href="#2016-9-29" class="headerlink" title="2016.9.29"></a>2016.9.29</h1><ul><li>miRNA 主要是通过 5′端被称为种子序列(Seed Sequence)的 7 nt 序列与位于靶 mRNA 3′UTR 的miRNA 调控元件(miRNA Regulatory Element, MRE)相互作用, 识别靶mRNA[11] . </li></ul><p>paper: MicroRNA 作用机制研究的新进展</p><ul><li><strong>==转染(transfection)==</strong> 指真核细胞由于外源DNA掺入而获得新的遗传标志的过程。DNA转染技术的发展对现代分子生物学产生了巨大的影响。</li></ul><h1 id="2016-9-30"><a href="#2016-9-30" class="headerlink" title="2016.9.30"></a>2016.9.30</h1><ul><li><p><strong>CpG岛甲基化表型</strong> (CpG island methylator phenotype,CIMP)涉及到多个基因启动子同时甲基化,具有肿瘤特异性,与多种肿瘤的发生或预后相关,但有关肝癌CPG岛甲基化表型的研究罕见报道。</p></li><li><p>DNA甲基化是表观遗传修饰的主要机制，其不改变DNA序列，但影响基因转录调控，是导致抑癌基因失活的重要原因[2]。CpG岛甲基化表型(CIMP)的概念于1999年首次被提出，研究发现某些结直肠癌CpG岛位点启动子被广泛甲基化，造成某些抑癌基因和其他一些肿瘤相关基因的失活[3]。这些CIMP被发现有不同临床表现和分子特征，可以用于研究和评估CIMP相关肿瘤[4]。肺癌起源于一系列遗传和表观遗传的变化，也是CIMP相关肿瘤之一[5]。目前肺癌CIMP的相关报道较少，究竟哪些甲基化基因可以作为肺癌CIMP分型的基因标记尚不清楚。</p></li><li><p>CpG位点（英语：CpG sites，或称为CG位点）是指DNA的某个区域，其上的碱基序列以胞嘧啶接着鸟嘌呤出现。==“CpG”是“—C—磷酸—G—”的缩写== ，指磷酸二酯键连接了胞嘧啶和鸟嘌呤，其中C位于5’端而G位于3’端。<br>在CpG位点中的胞嘧啶可以被甲基化为5-甲基胞嘧啶。在哺乳动物中，基因内CpG位点的甲基化会改变此基因的表达，对这一表达调控的研究是表观遗传学的重要组成部分。涉及添加甲基基团的酶称为DNA甲基转移酶。</p></li><li><p>【CpG岛甲基化表型】在正常组织里，70%～90%散在的CpG是被甲基修饰的，而CpG岛则是非甲基化的。正常情况下，人类基因组“垃圾”序列的CpG二核苷酸相对稀少，并且总是处于甲基化状态，与之相反，人类基因组中大小为100-1000bp左右，富含CpG二核苷酸的CpG岛则总是处于未甲基化状态。当CpG岛出现甲基化表型，涉及到多个基因启动子同时甲基化，具有肿瘤特异性，与多种肿瘤的发生或预后相关。</p></li><li>【CpG岛(CpG island)】：CpG双核苷酸在人类基因组中的分布很不均一，而在基因组的某些区段，CpG保持或高于正常概率，这些区段被称作CpG岛，在哺乳动物基因组中的1~2kb的DNA片段，它富含非甲基化的CpG双倍体。CpG岛主要位于基因的启动子（promotor）和第一外显子区域，约有60%以上基因的启动子含有CpG岛.</li><li>比较基因组杂交（ <strong>==aCGH==</strong> ：==array-based Comparative Genomic <em>Hybridization</em>==）是通过在一张芯片上用标记不同荧光素的样品（病例样品和对照样品）进行共杂交可检测样本基因组相对于对照基因组的DNA拷贝数变化（CNV），常用于肿瘤或遗传性疾病全基因组CNV检测，直观地表现出肿瘤及遗传性疾病基因组DNA在整个染色体组的缺失或扩增。对肿瘤而言缺失片段可能包含抑癌基因，而扩增片段则可能存在致癌基因。[1] </li></ul><h1 id="2017-3-21"><a href="#2017-3-21" class="headerlink" title="2017.3.21"></a>2017.3.21</h1><h3 id="在锐博网页上有关于各种高通量测序的技术介绍，有空好好看看，做点笔记，就能对这些测序技术有个大概全面的了解。http-www-ribobio-com-sitecn-service10-411-html"><a href="#在锐博网页上有关于各种高通量测序的技术介绍，有空好好看看，做点笔记，就能对这些测序技术有个大概全面的了解。http-www-ribobio-com-sitecn-service10-411-html" class="headerlink" title="在锐博网页上有关于各种高通量测序的技术介绍，有空好好看看，做点笔记，就能对这些测序技术有个大概全面的了解。http://www.ribobio.com/sitecn/service10_411.html"></a>在锐博网页上有关于各种高通量测序的技术介绍，有空好好看看，做点笔记，就能对这些测序技术有个大概全面的了解。<a href="http://www.ribobio.com/sitecn/service10_411.html" target="_blank" rel="noopener">http://www.ribobio.com/sitecn/service10_411.html</a></h3>]]></content>
      
      
    </entry>
    
    <entry>
      <title>CNV学习</title>
      <link href="/hexo/2018/11/01/2018-11-01_CNV/"/>
      <url>/hexo/2018/11/01/2018-11-01_CNV/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-Germline和Somatic-的区别"><a href="#1-Germline和Somatic-的区别" class="headerlink" title="1. Germline和Somatic 的区别"></a>1. Germline<code>和</code>Somatic 的区别</h2><p>对于DNA测序而言，主要识别SNP和CNV 两大类型的变异，每种变异类型又有<code>Germline</code>和<code>Somatic</code>的区别。</p><p><code>Germline</code>指的是在胚胎发育早起出现的变异，这种变异会在所有细胞中广泛存在，是可以遗传给后代的变异；<code>Somatic</code>指的是体细胞变异，身体特定区域或者组织中出现的变异。通常不会遗传给后代。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作者：庐州月光</span><br><span class="line">链接：https:<span class="regexp">//</span>www.jianshu.com<span class="regexp">/p/</span><span class="number">825</span>e7d618838</span><br></pre></td></tr></table></figure><h2 id="2-TCGA-SNP-数据"><a href="#2-TCGA-SNP-数据" class="headerlink" title="2.  TCGA SNP 数据"></a>2.  TCGA SNP 数据</h2><h4 id="1、-明白什么是CNV"><a href="#1、-明白什么是CNV" class="headerlink" title="1、 明白什么是CNV"></a>1、 明白什么是CNV</h4><p>CNV是相对参考基因组而言的概念。对正常人来说，基因组应该是二倍体的，所以凡是测到非2倍体的地方都是CNV。但是CNV本身就是人群遗传物质多样性的体现，所以对癌症样本来说，是需要过滤掉正常人体内的germline的CNV，得到somatic的CNV。</p><p>CNV（copy-number variant）是指拷贝数目变异，也称拷贝数目多态性（copy-number polymorphism，CNP），是一个大小介于1kb至3MB的DNA片段的变异，在人类及动植物基因组中广泛分布，其覆盖的核苷酸总数大大超过单核苷酸多态性（SNP）的总数，极大地丰富了基因组遗传变异的多样性。按照CNV是否致病可分为<strong>致病性CNV</strong>、<strong>非致病性CNV</strong>和<strong>不明临床意义CNV</strong>。</p><h4 id="2、TCGA的CNV测量及计算"><a href="#2、TCGA的CNV测量及计算" class="headerlink" title="2、TCGA的CNV测量及计算"></a>2、TCGA的CNV测量及计算</h4><p> TCGA里面主要是通过Affymetrix SNP6.0 array这款芯片来测拷贝数变异。值得注意的是，并不是只有TCGA利用了SNP6.这个芯片数据，著名的CCLE计划也对一千多细胞系处理了SNP6.0芯片，数据也是可以下载的。</p><p>对SNP6.0的拷贝数芯片来说，通常是用PICNIC等软件处理原始数据，就可以得到的segment记录文件，每个样本一个结果，下面是示例结果：</p><blockquote><p>Chromosome Start End Num_Probes Segment_Mean<br>1 6173515108012 26 -0.0397<br>11 627918 167260317-0.92<br>11 6875871615349781760.0077<br>11 6153536161539255-2.7441<br>11 6154201161550104-0.8711<br>11 616566172768498346300.0048<br>17 27689167281114846-1.7394<br>17 281190495674710149010.0026<br>19 5676511956765182-1.6636</p></blockquote><p>表明了某条染色体的某个区域内，SNP6.0芯片设计了多少个探针，芯片结果的拷贝数值是多少(这个区域的拷贝数用Segment_Mean)。</p><p><code>通常二倍体的Segment_Mean值为0，可以用-0.2和0.2来作为该区域是否缺失或者扩增。</code></p><p>具体数据处理流程见NIH的TCGA官网：</p><p><a href="https://docs.gdc.cancer.gov/Data/Bioinformatics_Pipelines/CNV_Pipeline/" target="_blank" rel="noopener">https://docs.gdc.cancer.gov/Data/Bioinformatics_Pipelines/CNV_Pipeline/</a> </p><p>参考文献：<a href="http://mcr.aacrjournals.org/content/12/4/485.long" target="_blank" rel="noopener">http://mcr.aacrjournals.org/content/12/4/485.long</a> </p><p>3、 TCGA的CNV数据下载</p><p>众所周知，TCGA的数据的开放程度分成了4个等级，一般人都是下载level 3 的数据，对CNV数据也是如此。</p><p>我比较喜欢去broad institute下载TCGA的数据，所有的文件都以目录的形式存放着：</p><p><a href="https://gdac.broadinstitute.org/runs/stddata__latest/" target="_blank" rel="noopener">https://gdac.broadinstitute.org/runs/stddata__latest/</a></p><p>如果要下载level3的数据，就用<code>stddata__latest</code> 这个url即可，打开可以看到里面列出了所有的癌症种类，假如我们感兴趣的是BRCA，就直接点击进入，用下面的url即可。</p><p><a href="https://gdac.broadinstitute.org/runs/analyses__latest/data/BRCA/20160128/" target="_blank" rel="noopener">https://gdac.broadinstitute.org/runs/analyses__latest/data/BRCA/20160128/</a> </p><p>打开url可以看到非常多的文件，这里我们感兴趣的是snp6芯片的拷贝数结果，而且一般是基于hg19版本的。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c -r -np -nH -k -L --cut-dirs <span class="number">6</span> -p  -A <span class="string">"*snp_6*hg19*Level_3*"</span>  http:<span class="regexp">//g</span>dac.broadinstitute.org<span class="regexp">/runs/</span>stddata__2016_01_28<span class="regexp">/data/</span>BRCA<span class="regexp">/20160128/</span></span><br></pre></td></tr></table></figure><p>如果要下载其它癌症种类，只需要改变url里面的BRCA即可。</p><p>如果要下载其它类型的数据，只需要改变-A 后面的匹配规则即可，其实就是打开上面url看到的几十个文件的文件名的规律。</p><p>“<em>snp_6</em>hg19<em>Level_3</em>“ </p><p>几分钟就下载完数据啦，然后你就会看到下面两个截然不同的：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Merge_s<span class="symbol">np__genome_wide_snp_6</span>__broad_mit_edu__Level_<span class="number">3</span>__segme<span class="symbol">nted_scna_hg19</span>__seg </span><br><span class="line">Merge_s<span class="symbol">np__genome_wide_snp_6</span>__broad_mit_edu__Level_<span class="number">3</span>__segme<span class="symbol">nted_scna_minus_germline_cnv_hg19</span>__seg</span><br></pre></td></tr></table></figure><p>其中minus了germline的CNV的就是我们想要的癌症相关的somatic CNV咯!</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>陈巍学基因</title>
      <link href="/hexo/2018/08/31/2018-08-30_chenwei_gene/"/>
      <url>/hexo/2018/08/31/2018-08-30_chenwei_gene/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="1、视频"><a href="#1、视频" class="headerlink" title="1、视频"></a>1、视频</h3><p>61、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793188&amp;idx=1&amp;sn=aba1f698dc30ba597e06126bb93a3859&amp;chksm=8b5126e2bc26aff48443bd8cbe951cc43813f135fc5c97d9b70bc4534bcf5f47a7a43e8f2cb2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频61：亲子鉴定】</a></p><p>60、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793170&amp;idx=1&amp;sn=9d9b2184d29daf0ae55d3f111235f014&amp;chksm=8b5126d4bc26afc2e813f9c08a51fb2d9629231999109649c4372340661469576c227bc30783&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频60：10X genomics 分析基因组结构变异】</a></p><p>59、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793146&amp;idx=1&amp;sn=321622aa3f8c660a0aaa79241b33ee4f&amp;chksm=8b5126bcbc26afaaba6c16737b38f1ba953c4c3ad797159af9df9c5205be595a822cd8992fd6&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频59：Nanopore测序】</a></p><p>58、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793121&amp;idx=1&amp;sn=eec8ac139a8bb4914b9ee1494dc4e255&amp;chksm=8b5126a7bc26afb10641b64f7caaa142aa69ba9a7a64abd7e6fd474bb1388138ef19de886f3c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频58：基因与疾病的关系】</a></p><p>57、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793110&amp;idx=1&amp;sn=063ac4f550ff181c37162657ff3e708d&amp;chksm=8b512690bc26af86cfeb45e247d6a2a0bbe49ed116d855bc0b013443fe268ee2fffdd76b7388&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频57：基因是什么？】</a></p><p>56、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793102&amp;idx=1&amp;sn=7f0b9362c6c774c268f647b8920bdd3c&amp;chksm=8b512688bc26af9e31f98f4476f380c6c0edeeb30fe2ee4c16a7beceb142533800c9d36718a3&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频56:10X genomics 分析单细胞表达】</a></p><p>55、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793100&amp;idx=1&amp;sn=691a95fdc2de1a31f1ae5e20d69d1a0f&amp;chksm=8b51268abc26af9ca871ef2b4450c64b00da5f353e057eb8f64700ab0b31b5c6f4453f7f1217&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频55：明码云计算服务】</a></p><p>54、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793073&amp;idx=1&amp;sn=174506d02189b8101eea34e66338f203&amp;chksm=8b512777bc26ae618f9b3a50b2800d0ce4e45d73972d96b48ab4f35b68c8209c22712f64b203&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频54：TruSeq RNA Access建库】</a></p><p>53、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793068&amp;idx=2&amp;sn=0b5ae440daf0fdaeab3f4049747df4bb&amp;chksm=8b51276abc26ae7ca29558c89ca978ce57b3654f4be687e664eebd1a610e84681523cbc31c24&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频53：POLG基因相关疾病】</a></p><p>52、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793068&amp;idx=3&amp;sn=1cdb4ebfe0f9574c38f823d8529ef1c6&amp;chksm=8b51276abc26ae7c72d4fcac522b0433d3342fb2e94f02efecff72e465e1743c263deedcdb53&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频52：Citrin蛋白缺乏症】</a></p><p>51、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793068&amp;idx=4&amp;sn=5c3207b626d18cbbc766fedd6e38f0e0&amp;chksm=8b51276abc26ae7cbe393f69368667736c28d4ae0a38a80befd34e355766ec2ffce916155564&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频51：G6PD缺乏症】</a></p><p>50、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793068&amp;idx=5&amp;sn=fe4b4f87dad33ee723d04faffec31698&amp;chksm=8b51276abc26ae7c643e1e4205743f38ef54f9aa3fcf578568dec737c5da18624d3b383bf46c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频50：地中海贫血】</a></p><p>49、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793039&amp;idx=1&amp;sn=8c874874ba1ba44ae029a4c2f83fe1e1&amp;chksm=8b512749bc26ae5fe57fa3d47473ad00a23999bd4c9315b1e29ad83ae9037b3d95761c2b1bec&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频49：用MLPA方法测基因拷贝数变异】</a></p><p>47、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793068&amp;idx=6&amp;sn=d0575d4c6c71e50488909037b576d4b7&amp;chksm=8b51276abc26ae7cdda2cab8c9bad9fe8d12340000c4ba781a70993d133e794b21b87ee67569&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频47：苯丙酮尿症和相关基因】</a></p><p>46、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792894&amp;idx=1&amp;sn=1bed3acc998555102af3a640b4d9072b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频46：帕金森病相关基因】</a></p><p>45、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792881&amp;idx=1&amp;sn=84e0f0927f9b1fd8c0d57c78968a57f1&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频45：老年痴呆症基因】</a></p><p>44、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792864&amp;idx=1&amp;sn=b854f389bda6c24f97ffd2f069fa6b4e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频44：彩色视觉】</a></p><p>43、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792850&amp;idx=1&amp;sn=2f7f8e7315d7dfd1f2f251c329bfe84a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频43：耳聋基因】</a></p><p>42、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792833&amp;idx=1&amp;sn=9af2a94212fb0ac21079158c6344e010&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频42：大脑学习】</a></p><p>41、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792813&amp;idx=1&amp;sn=e6ab159181166498e6aad95c7bf379d0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频41：PI3K/AKT信号通路与肿瘤】</a></p><p>40、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792792&amp;idx=1&amp;sn=8d356d84c87106f7172d3115fa97ebef&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频40：HER基因与肿瘤】</a></p><p>39、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792775&amp;idx=1&amp;sn=6ae1ab5f7a07efa848ae45878c93ad07&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频39：ALK基因与肿瘤】</a></p><p>38、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792755&amp;idx=1&amp;sn=001a7e3ef6f24e6848b45d54e64fd444&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频38：BRAF基因与黑色素瘤】</a></p><p>37、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792752&amp;idx=1&amp;sn=2ad768d6baa72571a4136f5f02725f80&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频37：P53基因与肿瘤】</a></p><p>36、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=413309094&amp;idx=1&amp;sn=b8676acdc0909da254269f113478f6cd&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频36：KRAS与肿瘤靶向治疗】</a></p><p>35、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=410998741&amp;idx=1&amp;sn=1702a1b86ada225ce7fd69b7a6d0512c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频35：EGFR基因靶向治疗】</a></p><p>34、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=409065428&amp;idx=1&amp;sn=839921443fbe0c4b72a05d5cfc412108&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频34：判断基因变异的致病性】</a></p><p>33、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=406530381&amp;idx=1&amp;sn=06180c8296432f7fa1f7bc6181f5bca1&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频33：用血小板RNA-seq测肿瘤】</a></p><p>32、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=405680935&amp;idx=1&amp;sn=fe066a266faf36022a4ee560975db7ea&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频32：用CRISPR寻找新肿瘤药】</a></p><p>31、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=403232401&amp;idx=1&amp;sn=dc13d817f3ac058ff82ebda14c43d23a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频31：Tagrisso的液体活检伴随诊断】</a></p><p>30、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=400582262&amp;idx=1&amp;sn=262fc146f5eee44858ac354832cc5e63&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频30：CellSearch检测CTC】</a></p><p>29、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=400453967&amp;idx=1&amp;sn=80101205c1b4460f2cf306e5bed3ddcf&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频29：Agilent生物芯片原理】</a></p><p>28、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=400340756&amp;idx=1&amp;sn=4b343ad49da2bbb7e8862f26d6f78dcf&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频28：Affymetrix芯片原理】</a></p><p>27、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=400175015&amp;idx=1&amp;sn=38bd06afd92839df5791a3c6aacb0126&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频27：Illumina的SNP芯片原理】</a></p><p>26、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=400086087&amp;idx=1&amp;sn=74a1b156ea1e8e684860b42a5e04a2be&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频26：循环肿瘤DNA测序】</a></p><p>25、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=208596527&amp;idx=1&amp;sn=2ec10acdcb16e30c52b5bb47634ade71&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频25：第一代DNA测序】</a></p><p>24、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=208485945&amp;idx=1&amp;sn=73629e285b04c3395f7e8cd8942104fa&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频24：GCBI 生物云平台】</a></p><p>23、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207704162&amp;idx=1&amp;sn=3fa1fa27740af3a35645c1137e538b24&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频23：SureSelect 定制靶向测序】</a></p><p>21、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792813&amp;idx=2&amp;sn=7ac46f72ffebd8738145c70b92b8e6b2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频21：美貌的遗传本质】</a></p><p>20、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207341995&amp;idx=1&amp;sn=4b132be0bff59c9f6044c948c22cb9f7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频20：肺癌融合基因检测】</a></p><p>19、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207286598&amp;idx=1&amp;sn=b2066e0006ec23d74dcb632a3d11d03d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频19：NanoString】</a></p><p>18、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207183817&amp;idx=1&amp;sn=88396e87a1ab8ddd59ec7a0170d70c9a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频18：抽血测EGFR突变】</a></p><p>17、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207132489&amp;idx=1&amp;sn=87ffaa2230ba120a2b4ecdd483cd9de3&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频17：数字PCR】</a></p><p>16、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=206472592&amp;idx=1&amp;sn=bc1edca99caf46de7a6e185b36faf22a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频16：BRCA基因检测】</a></p><p>15、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=205789418&amp;idx=1&amp;sn=d176a604a62786278985f745a68d1978&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频15：RiboZero和方向性RNA文库】</a></p><p>14、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=204834915&amp;idx=1&amp;sn=d40c4743a801d3b9736bb9fe8ad88a07&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频14：Moleculo长测序】</a></p><p>13、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=203554626&amp;idx=1&amp;sn=1ddc48a19af2fa654e7c5489e584f985&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频13：Ion Torrent测序】</a></p><p>12、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207450984&amp;idx=3&amp;sn=720c0b508a74eda4d826ecc7f288da1e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频12：甲基化测序】</a></p><p>11、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207450984&amp;idx=2&amp;sn=219917d88df80359a46a28e7dfe31d23&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频11：单细胞mRNA测序】</a></p><p>10、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207450984&amp;idx=1&amp;sn=ec450545ab4a6560fb391e86aae9d39b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频10：单细胞DNA测序】</a></p><p>09、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=202003992&amp;idx=1&amp;sn=c9ab4c1c5b227d30d03f96030b3c2f0c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频9：small RNA 测序】</a></p><p>08、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=201773592&amp;idx=1&amp;sn=db254db9dd30fcf65ed6db8d01d88998&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频8：外显子测序】</a></p><p>07、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=201607818&amp;idx=1&amp;sn=66adce1c9e697199caa453c11d15ab6c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频7：RNA-seq方法和应用】</a></p><p>06、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=201363069&amp;idx=1&amp;sn=85cbf89af79413949fdcc4a34785fe1f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频6：人全基因组测序】</a></p><p>05、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=201145198&amp;idx=1&amp;sn=04a9779db57a5370690f8beb871ff1ca&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频5：无创产前检测】</a></p><p>04、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=201044472&amp;idx=1&amp;sn=d0b35c4fda8b543fe138a95470344aee&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频4：基因投错票，导致肿瘤】</a></p><p>03、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=201002655&amp;idx=1&amp;sn=90bdb0d2fd2b0a88066bcb6c12707a24&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频3：PacBio单分子超长测序】</a></p><p>02、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200982060&amp;idx=1&amp;sn=ec9f0e337bf24a2c55ebf39a6eefa989&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频2：HiSeq测序仪工作原理】</a></p><p>01、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200958250&amp;idx=1&amp;sn=611886679796601699fcc59ceddae436&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频1：Illumina测序化学原理】</a></p><p>Nanopore、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793126&amp;idx=1&amp;sn=796a1eead937750dcd4db4c9f36974b2&amp;chksm=8b5126a0bc26afb6661c26600847ac07bbcac361608062c97cd860b7951250f2be8638597d76&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【Nanopore测序原理】</a></p><p>CSA、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=208517161&amp;idx=1&amp;sn=e4851571d65412dd3bc17aca05e503c0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频：NextCODE公司的CSA遗传病分析软件】</a></p><p>CRISPR、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=404426374&amp;idx=1&amp;sn=223b8ce51050f47c246172ccb4c8ceaa&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频：CRISPR/CAS 9 活细胞基因编辑】</a></p><p>AKT、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792795&amp;idx=1&amp;sn=20339182e0e1242cdfc0d77e42c7ee52&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频：PI3K/AKT信号通路】</a></p><p>PD-1、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792800&amp;idx=1&amp;sn=94c68de248664d54f76a8c213d7a98a6&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频：PD-1/PD-L1抗体治疗肿瘤】</a></p><p>AI、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792826&amp;idx=1&amp;sn=542d42eb9722f96558533c29c03d7c86&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【神经网络与深度学习】</a></p><p>EAR、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792837&amp;idx=2&amp;sn=9968cfa4bfc5fcc01afafc9e877b2c0e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【人耳听觉工作原理】</a></p><p>HEART、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792837&amp;idx=1&amp;sn=661d1eb1fb5545f19784bbadfc7463ae&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【心血管疾病】</a></p><p>A00、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792898&amp;idx=1&amp;sn=2688bc0eb5b28ca8f30b266382cc3282&amp;chksm=8b5127c4bc26aed25fcc09a8726bafbb8ab3f8b1aa36ca34987c3ee6ceb5297859ccfa51370d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【人工智能识别图像工作原理】</a></p><p>A01、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792919&amp;idx=3&amp;sn=1689065dabcbc4fa4356abd800b7fca3&amp;chksm=8b5127d1bc26aec7ff5438207a7029281e3a66eefd9aebe53ede984bc4ba0761369806b6f023&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【如何下载并读取一个基因组】</a></p><p>A02、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792919&amp;idx=2&amp;sn=bb7de2ab76bf11868610c36709870057&amp;chksm=8b5127d1bc26aec72f7a8e041cd07827624d4c2724e801ff3e06c123ce30c96df5f97a823e7e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【操作测序read】</a></p><p>A03、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792919&amp;idx=1&amp;sn=76c58d805cd39df1b97313e508c804a0&amp;chksm=8b5127d1bc26aec7ab7ae30b869d658e18ec2e6a7a16d47e5c365fa367406bb236a81231293f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【按碱基位置分析GC含量】</a></p><p>A04、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792929&amp;idx=1&amp;sn=6ec017d99faf6d186d1fd81bf7df2a07&amp;chksm=8b5127e7bc26aef1e6901db52a02dcbb2875fc6b8af4f573ba69ec4387fbd4b28a561542b0e7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【简单序列比对】</a></p><p>A05、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792933&amp;idx=2&amp;sn=3075a6376445023cc572b034efa28715&amp;chksm=8b5127e3bc26aef550b2cf515047ea9d05cdd2120750b8b9ca3acd4d5c88f768297a834594e5&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【简单序列比较法的效率】</a></p><p>A06、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792933&amp;idx=1&amp;sn=ba5bc87ee61418e4c50cee53d0e0de37&amp;chksm=8b5127e3bc26aef5d8abe9ba07f5e0f8a3f11595a198bb1c151fc9c6e095f2781cf174bc1c8c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【基本Boyer-Moore算法】</a></p><p>A07、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792935&amp;idx=1&amp;sn=62c734bcfe88e856c7833fe06c859da6&amp;chksm=8b5127e1bc26aef722e8f3478fd7c0835b3ec0d86f718833210347674c4dbb5f63a773c27f84&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【应用Boyer-Moore二规则】</a></p><p>A08、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792937&amp;idx=1&amp;sn=f9fcfeb204cf9c9d2c7ab263b97c5601&amp;chksm=8b5127efbc26aef94f902e0f3d10dc1fcb7f06886af79a62c3242e339c0a543c478d8ac4ebac&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【为什么要预处理参考基因组】</a></p><p>A09、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792940&amp;idx=1&amp;sn=5441f241bdb57a295eb8945cfec24513&amp;chksm=8b5127eabc26aefcc2ae34f5fd7e15f7ee1318ffdbb87c9cbd435b91548d1cc39a86b1e584ec&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【把参考基因组做成索引】</a></p><p>A10、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792944&amp;idx=2&amp;sn=cd1a0e8be7732e547ef5faa8d3ca0e4b&amp;chksm=8b5127f6bc26aee0de8a3b78e145f443c770408478f6c9a6518682bd2d18bdf6f0c261b171c9&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【索引的排序结构】</a></p><p>A11、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792944&amp;idx=1&amp;sn=b78ae71ee6ae727b5b4ad00270d510b7&amp;chksm=8b5127f6bc26aee0b5e9f83034e2628112c728e97b2f419db1c193c0b2dd2001e0ac91f84718&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现 Boyer-Moore 算法】</a></p><p>A12、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792946&amp;idx=1&amp;sn=e383690d249b1b159c72a9135b10c271&amp;chksm=8b5127f4bc26aee2d4c54fb6ec3c3f4846383a15321984e5ce4d84d751d262c1d93b6cae2974&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现k-mer索引算法】</a></p><p>A13、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792948&amp;idx=1&amp;sn=667c8b9949592fd2a3a62d91dd3876f3&amp;chksm=8b5127f2bc26aee4bf271f351c5f7c004077c79b5ec5a9d652b5768a473e9cbfc9316f59442d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【近似匹配、汉明距离、编辑距离】</a></p><p>A14、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792953&amp;idx=2&amp;sn=af31c2619dd5207c037335c95ec1c1c0&amp;chksm=8b5127ffbc26aee9c83af0a8a25887441a17b20b094f9aa7467ab1dcbed39e28350f26a0aa92&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【把索引做成哈希表】</a></p><p>A15、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792953&amp;idx=1&amp;sn=84007b3703c434919eb076b25830757e&amp;chksm=8b5127ffbc26aee9771ff65ddcd8691827dc737ad1977d353662d42fce78b9414dfea4f32c98&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【用鸽子洞原理找近似匹配】</a></p><p>A16、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792955&amp;idx=1&amp;sn=16666f02f4a5408eac37e848810aeac2&amp;chksm=8b5127fdbc26aeeb9ca9d073d011031dee9f7575dad31ab8ecb9afd9fd30435228514002359b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【近似匹配的编辑距离】</a></p><p>A17、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792960&amp;idx=2&amp;sn=7fc18e1a12a0cd7ab8a829364b157b5f&amp;chksm=8b512706bc26ae108f9e39da6bde234bc1721e32e8832b2a4f7db977493557d1cf55934d7cae&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现鸽子洞规则】</a></p><p>A18、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792960&amp;idx=1&amp;sn=74f79204395466506e4a94dda43d8443&amp;chksm=8b512706bc26ae1086a6f1d2589b274b00299e346e7dae940865cfc62628fb0eb8c5a68348c3&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【比对真实的测序序列】</a></p><p>A19、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792962&amp;idx=1&amp;sn=5ae6804a216f9af8ae86a1198602ef9e&amp;chksm=8b512704bc26ae1203393f8076803b8e5ba5210a712354fad444f852a0d5c99b25c108122002&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【转移—重复元素】</a></p><p>A20、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792964&amp;idx=1&amp;sn=9f2d67e8565a6a801e31e8e234981b6c&amp;chksm=8b512702bc26ae1452a131ce50b15edb0f13d50165ba926ae3eccc765b255657eb693757ff9f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【递归法计算编辑距离】</a></p><p>A21、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792966&amp;idx=1&amp;sn=9ee9743911362d026c57f73747d0fd86&amp;chksm=8b512700bc26ae166d10407f26d05e8eecc4964b5c7279382659883b68841ae6640834aab57a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【用动态规划来算编辑距离】</a></p><p>A22、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792968&amp;idx=1&amp;sn=c32dbf9319a8d9becd9ff31b2614a35a&amp;chksm=8b51270ebc26ae18656bdf088146cc7a8dada0b2b79887d9d1cbe5607416ddc47e68ff84ceda&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现动态规划算编辑距离】</a></p><p>A23、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792971&amp;idx=2&amp;sn=ddf538a2e5fa2b98c05da424e78e0cee&amp;chksm=8b51270dbc26ae1b6830822286ba2098d3e188a0132d97901a01839b0d32e7b749045cf4c119&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【全局比对和局部比对】</a></p><p>A24、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792974&amp;idx=1&amp;sn=cbc100ee7e2432aca35f1bb99775d54d&amp;chksm=8b512708bc26ae1ecce33e75052b36275c0ba15084241bfebbea03d6365ce67a8f3da61cce44&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现全局比对】</a></p><p>A25、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792976&amp;idx=1&amp;sn=621eb3cbae82ccc7e1351e10d6f3fd9d&amp;chksm=8b512716bc26ae0065e4e5c396b9f316688c0d670c62b7b3b888bdc1953095bb8389a11c9fd4&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【在实践中应用基因序列比对算法】</a></p><p>A26、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792978&amp;idx=1&amp;sn=d1d89dc77268d6aac7e71e03c191dc58&amp;chksm=8b512714bc26ae02c0d69c3a9cff2811922c32bcbc250f73af2df131782ee7381c8a63afeda5&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【De Novo基因组组装序言】</a></p><p>A27、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792980&amp;idx=1&amp;sn=ce62fb308edf0d6e6f7e7707a4ad4cab&amp;chksm=8b512712bc26ae0417dbed2dce8acffda6bd845923498e571a6d7a75a66225c96a9881c657ac&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【组装基因组的第一、和第二定律】</a></p><p>A28、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792982&amp;idx=1&amp;sn=21020a7aef6d99965ccfbdc2fbd84e70&amp;chksm=8b512710bc26ae06b0e59785226f956f8e5cd2d0c6b36b33a6f647aaa71ba455631763bfcc8c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【计算两条序列交叠的代码】</a></p><p>A29、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792984&amp;idx=1&amp;sn=3884812cdbf93935ad38e3e5e0408cab&amp;chksm=8b51271ebc26ae082e03f91c4c4cd3e16cb23cdc9ea28c93101abe49bdb1c021bf953682b05e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【找多个序列的重叠区】</a></p><p>A30、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792986&amp;idx=1&amp;sn=e4727a5f346890b330f45591e2e85455&amp;chksm=8b51271cbc26ae0a8e8db3998de7e7aff373b967f44b27f8efb217e1227f13650230403693f2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【交叠的有向图】</a></p><p>A31、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792988&amp;idx=1&amp;sn=ada2550ae3e903e3a7a3918f3de0ffdc&amp;chksm=8b51271abc26ae0c884daf614169654274f4e15e9202d6a63c3a55922c93440a8b9955e91dfc&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【最短共同字符串】</a></p><p>A32、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792996&amp;idx=3&amp;sn=5a10a8f0bef00b9d29ca6e92b45a3ea8&amp;chksm=8b512722bc26ae34e55bacdaf1bc165aab236c977bb1abc54e47a5aa6bb2f314304c5a2827fc&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现最短共同字符串】</a></p><p>A33、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792996&amp;idx=2&amp;sn=d15262470bc523f909b187284162b934&amp;chksm=8b512722bc26ae34088f55814d1f77ea9e42a5c039ee1877e2b44b3d7a221e9f1c85f8cbb276&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【贪心最短共同超级字符串算法】</a></p><p>A34、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792996&amp;idx=1&amp;sn=02745c42df860e7df3a0bb82dc0a3764&amp;chksm=8b512722bc26ae347c9951a792d026d5df19a7cfa6fd247df91b2b34a5c3214978498155d495&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现贪心最短共同超级字符串算法】</a></p><p>A35、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792998&amp;idx=1&amp;sn=8ff59c9ca4553729f4a0a012eb611432&amp;chksm=8b512720bc26ae36c4712338ad4d9b995f69c03e425a970fd16eda01136b897f309e3379428f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【重复序列让组装基因组变得困难】</a></p><p>A36、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793000&amp;idx=1&amp;sn=aadaf364368a90c686938d0b1b8c31e1&amp;chksm=8b51272ebc26ae382005be11a7557c80194d3a043a212e141291d7d28210f59b592105cb22d0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【De Bruijn图和欧拉行走】</a></p><p>A37、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793002&amp;idx=1&amp;sn=70335d2cf243048eb233632a427cb58f&amp;chksm=8b51272cbc26ae3a72f777162699f4ff474cd5f734313a17624e9d99f81ea6bca849c5d92796&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【欧拉路径也可能出错】</a></p><p>A38、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793006&amp;idx=2&amp;sn=8f3c4d440fc8b2bad58b20f7d7245c65&amp;chksm=8b512728bc26ae3e67436b7b2b5b9d25740f4e4a8bfce5927db0f641829eea10a6607927226f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实现De Bruijn图的代码】</a></p><p>A39、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793006&amp;idx=1&amp;sn=3a7fa45cd3b8602f89a8a0950b125b3a&amp;chksm=8b512728bc26ae3edf01dbc6f6163c62716d05f8a89ff60f1aa9f0674659c62930f5bb01fcf2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【在实践中组装基因组】</a></p><p>A40、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793009&amp;idx=1&amp;sn=67c63aaa78126903c6544d9b3647efb1&amp;chksm=8b512737bc26ae21fca5a95317a1e02dd07288b4b58149e5a3f2b6d46861411ca18e947e3405&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【未来组装基因组将依赖于更长的测序读长】</a></p><p>A41、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793011&amp;idx=1&amp;sn=7aa2586ffcf8a1cdd37419bda2b23e1a&amp;chksm=8b512735bc26ae2346adcf1ad47d5090625432b720fa93dc7eafd770984cd7caf3e0b3c95329&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【K-mer Index的变种】</a></p><p>A42、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793013&amp;idx=1&amp;sn=15999e42184856ca058ec650c60ed6f2&amp;chksm=8b512733bc26ae25fcda5a8763c3614fc2a671c86718b1fc334cdb714ca33ac04fba90da4ed0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【基因组研究中用到的索引】</a></p><p>A43、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793019&amp;idx=1&amp;sn=7632f9a36816466452ed419a644e44c3&amp;chksm=8b51273dbc26ae2b261e7f72cad825c1efe00732a2f4bf9f15d4cc38f3b81aa925cb2dcc8d57&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【Burrows-Wheeler 转换】</a></p><p>A44、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793019&amp;idx=1&amp;sn=7632f9a36816466452ed419a644e44c3&amp;chksm=8b51273dbc26ae2b261e7f72cad825c1efe00732a2f4bf9f15d4cc38f3b81aa925cb2dcc8d57&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【FM 索引】</a></p><p>A45、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793031&amp;idx=1&amp;sn=36fb31001b5c161b157273653f7baccc&amp;chksm=8b512741bc26ae57d4cc9fce62703e2dd7bf56519e8bd1f0eaeef247a2416c51a9f03bf1cd53&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【用后缀做索引】</a></p><p>B01、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793031&amp;idx=7&amp;sn=15e038f7a8475df2c96e5416950eb497&amp;chksm=8b512741bc26ae57fcc3f430f5912017edeb2f40b6b6a92404adcfa5f46b69c16af57e550a63&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【测序序列比对和查找突变（一）】</a></p><p>B02、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793028&amp;idx=1&amp;sn=cb628fb6c1070aeac1f453fb4cd2b66e&amp;chksm=8b512742bc26ae54aa1e6fe21172e722f76e89805f67363c55f7537d7c8566de57da9a05746b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【基本Linux命令】</a></p><p>B03、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793033&amp;idx=1&amp;sn=ea80d3820861ea80ba1420b8cf6cf2c6&amp;chksm=8b51274fbc26ae59808d5d04462488b88fac6290b80ccba987c15ca0e583686d5be244d739cc&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【测序序列比对和查找突变（二）】</a></p><p>C01、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793076&amp;idx=1&amp;sn=51fade434593e5c8c02ffa77316a129c&amp;chksm=8b512772bc26ae6429ce0145f9d5309aa3ed0aa2fbd3a7ae4f976ca1778002c27d9219029a03&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【Sentieon—比GATK更好的找突变软件】</a></p><p>C02、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793078&amp;idx=1&amp;sn=6d80c2f6050382748b4147bab69b44c1&amp;chksm=8b512770bc26ae66374c7b8d0f3dccfca3344d251cd54dd9bdc3c64660189b8a22b932ff085a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【把自制的软件放到DNAnexus云上】</a></p><p>C03、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793080&amp;idx=1&amp;sn=5ee02966d266fe55e1663bdd82853dc1&amp;chksm=8b51277ebc26ae68b0f0a41fb5e414baf6795d444fee89d9365e259b24886d0c630fa894dd24&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【在DNAnexus上建流程、跑分析】</a></p><p>C04、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793082&amp;idx=1&amp;sn=ae42bcbdd10716384f03cf3219d1450c&amp;chksm=8b51277cbc26ae6abc68260a33babb43ef83f975dd004e366f9ee01e329aa31c969f6b458f6a&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【在DNAnexus上进行协作、和分享】</a></p><p>C05、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793084&amp;idx=1&amp;sn=472cac45d817128b4ec398500b81f54d&amp;chksm=8b51277abc26ae6c079ef173769c7a2ce06e2613b6b0613547cc3683abdc5ba87729c2a6b576&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【如何向DNAnexus上传数据并存储】</a></p><p>C06、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793089&amp;idx=1&amp;sn=4464cb6850c1a2e189119dcc6f9a2be1&amp;chksm=8b512687bc26af91da0ba80f39a225cfbe5e22b95f5378856873cfd139cdd780a48febbc8de2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【对DNAnexus中的组织账户的简介】</a></p><p>C07、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793091&amp;idx=1&amp;sn=41a247ef1c2587b566f03dfe04300712&amp;chksm=8b512685bc26af937acb7107f061262cbd240f3eba741c60e4ccb2776ba2d7f0ec1c81482e58&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【如何在DNAnexus上管理组织项目】</a></p><p>C08、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793097&amp;idx=3&amp;sn=b9748a6d625d428b60320c93ab950cc5&amp;chksm=8b51268fbc26af99847f60e332f98ee9847e431ebc7489a8de2f2df478481a6cfa35e6d89cf7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【如何在DNAnexus上管理成员】</a></p><p>C09、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793097&amp;idx=2&amp;sn=8fe15a9221f17eb8e607176926f6cb38&amp;chksm=8b51268fbc26af99cccef37c6946641833b0217f739371434e61a54441410b9f7c94dbe4677b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【如何在DNAnexus上删除成员】</a></p><p>C10、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793097&amp;idx=1&amp;sn=a309dec9a388a009f080f9603b5cdf9e&amp;chksm=8b51268fbc26af9916005a421994839c55167122482f90d52c9a8a7778d777fa9751d5722b0d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【如何在DNAnexus上设立新成员】</a></p><p>D01、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793152&amp;idx=1&amp;sn=fe7bf6926878fb74169449cf74102d27&amp;chksm=8b5126c6bc26afd0ed1abb6b8ec2cd3e158489a401c97fe025a64801b6f0a8032ed84e5fe65f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【2015 GATK讲座 高通量测序的文件格式简介】</a></p><p>D02、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793155&amp;idx=1&amp;sn=23e6f1756aa539eb97f19c513414646f&amp;chksm=8b5126c5bc26afd3f5c10897d5e9326ba81f26cc1a940e5a2e5f9f557db8f7e5543a28c9d246&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【2015 GATK讲座 插入缺失变异的重新比对】</a></p><p>D03、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793158&amp;idx=1&amp;sn=26af4c92f4265e0051b7ed24fbdcd341&amp;chksm=8b5126c0bc26afd655e7d2113d3f9976c56e024b8b44a5bb0882b3bb63926164dc063c0afda2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【2015 GATK讲座 碱基质量的重新校正】</a></p><p>D04、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793161&amp;idx=1&amp;sn=72349fab26258805fdfc08ca144a8291&amp;chksm=8b5126cfbc26afd9fd1c3c21d4786b15826853c39aa2a57ca180166c028e94aba4ce6adf356f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【2015 GATK讲座 基因变异的注释和评价】</a></p><p>48、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660792927&amp;idx=1&amp;sn=37c817ed4d12e2f417cf6c1448ee20dc&amp;chksm=8b5127d9bc26aecfb211c6dbf984c29c8c28c5af8b3e10a7d6d9fae54f060d86210737b2268d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频48：制作视频入门】</a></p><p>E01、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=2660793176&amp;idx=1&amp;sn=aa2f0e52e70d44156df3ac6e30a28d7b&amp;chksm=8b5126debc26afc879eb59a2ed3170a2a6e1bcbafd0ff2ed8754e36c62661efc818b368cad8b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【视频：Bionano基因组分子图谱技术】</a></p><h3 id="2、测序原理、方法："><a href="#2、测序原理、方法：" class="headerlink" title="2、测序原理、方法："></a>2、测序原理、方法：</h3><p>原理、<a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=10013392&amp;itemidx=1&amp;sign=72294486b2fda8dbef4ac19038eab81b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《第一、二、三代测序原理视频》</a></p><p>问答、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=10014308&amp;idx=1&amp;sn=10140912591ba343744f1d8033af54b5&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《高通量测序常见问题及回答》</a></p><p>比较、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=10013943&amp;idx=1&amp;sn=c8cf4d03ed1d6865a83c896d8f4d444f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《所有测序仪的价格、费用、性能比较》</a></p><p>建库、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200076957&amp;idx=1&amp;sn=c910196406d20e400db61b082e19a4ae&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《汇总高通量测序的特殊应用、和相应的建库方案》</a></p><p>超长、<a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=10013355&amp;itemidx=1&amp;sign=05529771bef0779dc2bd8d35f84cd265&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《10Kb 长测序 —Moleculo专利原理》</a></p><p>万一、<a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=10013298&amp;itemidx=1&amp;sign=a3c83483f81ca88f299eae02d0a14936&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《检出1/10,000突变比例的测序方法》</a></p><p>千元、 <a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=10013888&amp;idx=2&amp;sn=f97a728b2513d3e9c3c62969e80b4c37&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《HiSeq X 10, 千元基因组测序》</a></p><p>文库、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200076957&amp;idx=1&amp;sn=c910196406d20e400db61b082e19a4ae&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《Illumina的全套建库方法图解资料》</a></p><p>太平洋、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200419261&amp;idx=1&amp;sn=849e7640d146889872a5a49dedc17c40&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《PacBio单分子超长测序》</a></p><p>筛药、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200571428&amp;idx=1&amp;sn=9ea7624b7c8611311beaf8540a055a59&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《用带DNA分子标签的组合化合物库来筛新药》</a></p><p>Xten、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200583018&amp;idx=1&amp;sn=8f95e495be4061331bb20b46875c6395&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《X10测序常见问题及回答》</a></p><p>RPA、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200338613&amp;idx=1&amp;sn=57361dff3b0d2673331a2c6e60911e9e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《RPA技术让HiSeq X 10打败泊松分布》</a></p><p>V4、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200861814&amp;idx=1&amp;sn=8d7da21c1320b5e2af95c9372c56eac7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《HiSeq V4 PE125 测序有些什么新应用？》</a></p><p>化学、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200946088&amp;idx=1&amp;sn=4e3b263547354f8320338db3b7095022&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《Illumina测序化学方法》</a></p><h3 id="3、商业服务"><a href="#3、商业服务" class="headerlink" title="3、商业服务"></a>3、商业服务</h3><p>产业、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207242794&amp;idx=1&amp;sn=2d1c4a222abf0b98546a5fcef5ceadbf&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《基因产业发展之路》</a></p><p>清单、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207442326&amp;idx=1&amp;sn=b7ff70b11c7584c83be60d8f7d12c9eb&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《中国高通量测序、生物信息服务公司清单》</a></p><p>品牌、<a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=10013447&amp;itemidx=1&amp;sign=a8ba62dcba9e7f7c0233452993e4e44c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《高通量测序试剂品牌》</a></p><p>上下、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207442326&amp;idx=5&amp;sn=bd4d2a82aca382b9cbe564ce76676803&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《高通量测序的上下游服务商》</a></p><p>数据、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200033701&amp;idx=1&amp;sn=c8df0c4c79d67e92b435b96a7260e071&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《ICGC提供一万个肿瘤基因组数据》</a></p><p>CRO、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=207442326&amp;idx=7&amp;sn=c2e10dd678ab1449c85607637f15a9c1&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《中国CRO企业名录》</a></p><p>一万、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200437293&amp;idx=1&amp;sn=bad6411fea2194b97a0e7c63b491dbea&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《人全基因组测序降到一万元会带来什么改变》</a></p><h3 id="4、诊断、检测："><a href="#4、诊断、检测：" class="headerlink" title="4、诊断、检测："></a>4、诊断、检测：</h3><p>FDA、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=10014260&amp;idx=1&amp;sn=3aca056a8baa499aad8bf5de615ef102&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《FDA批准的高通量基因分析诊断方案》</a></p><p>拯救、<a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=200128111&amp;itemidx=1&amp;sign=2decb14309c4eea07c820ed7987ddb18&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《二代测序拯救一个年轻的生命》</a></p><p>HLA、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200116209&amp;idx=1&amp;sn=4a2ea2cabaa6e1e1604e9e26a0054a00&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《FDA许可Biofortuna的冻干HLA分型试剂》</a></p><p>ROC、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200617995&amp;idx=1&amp;sn=6c0c68f470d7f4aafc3fcbfa4438cb9f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《ROC分析，评价临床检验方法的客观标准》</a></p><p>检测、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200758907&amp;idx=1&amp;sn=dbdb84401ce55251dce00d1eeaafff95&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《最强悍的感染检测手段—高通量测序—正飞驰而来》</a></p><p>代谢一、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200901263&amp;idx=1&amp;sn=4d2b22369fd2a4a9526e37d2b329d320&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《个体化用药中与代谢相关的基因（一）》</a></p><p>代谢二、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200904500&amp;idx=1&amp;sn=8e3f87cfee35bbd8289bba0768bca065&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《个体化用药中与代谢相关的基因（二）》</a></p><h3 id="5、测序之外的分子生物学方法"><a href="#5、测序之外的分子生物学方法" class="headerlink" title="5、测序之外的分子生物学方法"></a>5、测序之外的分子生物学方法</h3><p>荧光、 <a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=10013599&amp;itemidx=1&amp;sign=d16ab0ac3591da8c4adf6e18746efeb2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《视频：三种有趣的荧光定量PCR方法》</a></p><p>数字、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=10013696&amp;idx=1&amp;sn=fe6bd2b186395f24627cd94c89f8293c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《NanoString—全新的高通量数字表达谱》</a></p><p>定量、 <a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=10013722&amp;idx=1&amp;sn=0f4c7bc8331dc4c5b3c8972bc6576d05&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《4个品牌的数字定量PCR原理》</a></p><p>SNP、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200207081&amp;idx=1&amp;sn=6b3e1dfe6a6f97b85c54ca22c1109c7f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《SNP检测方法汇总》</a></p><p>化学、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200946088&amp;idx=1&amp;sn=4e3b263547354f8320338db3b7095022&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《Illumina测序中的化学方法》</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200520169&amp;idx=2&amp;sn=4869b29f1139dceaa4ef67dbfcb6f682&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《LNA锁核酸技术》</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200520169&amp;idx=3&amp;sn=311316ffc387de35bb14a9ab5715ffeb&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《PNA肽键核苷技术》</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200520169&amp;idx=4&amp;sn=40d4d7be55a37c70935f7b07fc2adf49&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《BigDye测序的化学》</a></p><p>多重、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200496200&amp;idx=1&amp;sn=2c7c19efd134a069b96d573e9f0df107&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《高通量测序中的多重PCR方法》</a></p><p>CNV、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200300365&amp;idx=1&amp;sn=b7b036d13f7edda0f469d85e03eabbea&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《检测CNV的方法汇总》</a></p><p>甲基、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200313357&amp;idx=1&amp;sn=cdab595f752f536c19b5db86c69346c8&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《DNA甲基化分析方法汇总》</a></p><h3 id="6、肿瘤及相关知识"><a href="#6、肿瘤及相关知识" class="headerlink" title="6、肿瘤及相关知识"></a>6、肿瘤及相关知识</h3><p>标记、 <a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=10013343&amp;itemidx=1&amp;sign=9882894f7e1fd7dbab370618aab6e7a8&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《高通量测序发现肿瘤核酸生物标记物的新方法》</a></p><p>靶向、 <a href="http://mp.weixin.qq.com/mp/appmsg/show?__biz=MzA4NzE0MTYwOQ==&amp;appmsgid=10000003&amp;itemidx=1&amp;sign=c779bde1a5832d3976c9c12f8972de91&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《13种肿瘤抗体靶向药物》</a></p><p>五十、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200286194&amp;idx=1&amp;sn=0732729ef80d18c4558857fce2937920&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《50个核心肿瘤基因》</a></p><p>裸鼠、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200234555&amp;idx=1&amp;sn=83e50c10c9017eff2bcc6540c80d9e73&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《用裸鼠选择肿瘤药物——癌症靶向治疗新方案》</a></p><h3 id="7、遗传疾病"><a href="#7、遗传疾病" class="headerlink" title="7、遗传疾病"></a>7、遗传疾病</h3><p>基因、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200092333&amp;idx=1&amp;sn=e8209750cb1b046dae456f297de67d90&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《高通量测序分析单基因遗传病标准方法》</a></p><p>多囊、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200843894&amp;idx=1&amp;sn=51b3f567336758be911b2c26d42edecc&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《多囊肾疾病的相关基因》</a></p><p>马凡、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200875768&amp;idx=1&amp;sn=d28e202e83156d7ef2b1d1422d84a438&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《马凡氏综合征的相关致病基因：FBN1》</a></p><p>甲低、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200805600&amp;idx=1&amp;sn=490e8c650f013ed36101988b9efd3a63&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《先天性甲状腺功能低下的相关基因》</a></p><p>ALS、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200820408&amp;idx=1&amp;sn=6e70991ace037c66cee84d2d7b4f0b59&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《渐冻症（ALS）的主要致病基因：SOD1》</a></p><p>老年、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200781754&amp;idx=1&amp;sn=2ffa7f3af63a5e4fda482d288ab2f5ea&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《阿茨海默病的相关基因》</a></p><p>异常、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200886880&amp;idx=1&amp;sn=669cfbc12fc04cca99891f37d6e27aa9&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《差了一个条性染色体的女人、和男人》</a></p><p>蚕豆、<a href="http://mp.weixin.qq.com/s?__biz=MzA4NzE0MTYwOQ==&amp;mid=200940855&amp;idx=1&amp;sn=8809e634bd64fc84f140dd6ad373ea0d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">《蚕豆病的致病基因：G-6-PD》</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>奇异值分解SVD——python</title>
      <link href="/hexo/2018/08/29/2018-08-29_SVD_python/"/>
      <url>/hexo/2018/08/29/2018-08-29_SVD_python/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://blog.csdn.net/u012421852/article/details/80439403" target="_blank" rel="noopener">原文</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">@author: 蔚蓝的天空Tom</span></span><br><span class="line"><span class="string">Talk is cheap, show me the code</span></span><br><span class="line"><span class="string">Aim:svd分解降维应用示例的代码实现</span></span><br><span class="line"><span class="string">CSDN URL:https://mp.csdn.net/postedit/80450590</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> linalg <span class="keyword">as</span> LA</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSVD</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    实现SVD分解降维应用示例的数学求解过程的Python代码</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.data = data       <span class="comment">#用户数据</span></span><br><span class="line">        self.S = []  <span class="comment">#用户数据矩阵的奇异值序列 singular values</span></span><br><span class="line">        self.U = []  <span class="comment">#svd后的单位正交向量</span></span><br><span class="line">        self.VT = []  <span class="comment">#svd后的单位正交向量</span></span><br><span class="line">        self.k = <span class="number">0</span>   <span class="comment">#满足self.p的最小k值(k表示奇异值的个数)</span></span><br><span class="line">        self.SD = [] <span class="comment">#对角矩阵，对角线上元素是奇异值 singular values diagonal matrix</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#svd奇异值分解</span></span><br><span class="line">        self._svd()</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_svd</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        用户数据矩阵的svd奇异值分解</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        u,s,v = np.linalg.svd(self.data)</span><br><span class="line">        (self.U, self.S, self.VT) = (u, s, v)</span><br><span class="line">        <span class="keyword">return</span> self.U, self.S, self.VT</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_calc_k</span><span class="params">(self, percentge)</span>:</span></span><br><span class="line">        <span class="string">'''确定k值：前k个奇异值的平方和占比 &gt;=percentage, 求满足此条件的最小k值</span></span><br><span class="line"><span class="string">        :param percentage, 奇异值平方和的占比的阈值</span></span><br><span class="line"><span class="string">        :return 满足阈值percentage的最小k值</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.k = <span class="number">0</span></span><br><span class="line">        <span class="comment">#用户数据矩阵的奇异值序列的平方和</span></span><br><span class="line">        total = sum(np.square(self.S))</span><br><span class="line">        svss = <span class="number">0</span> <span class="comment">#奇异值平方和 singular values square sum</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(np.shape(self.S)[<span class="number">0</span>]):</span><br><span class="line">            svss += np.square(self.S[i])</span><br><span class="line">            <span class="keyword">if</span> (svss/total) &gt;= percentge:</span><br><span class="line">                self.k = i+<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> self.k</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_buildSD</span><span class="params">(self, k)</span>:</span></span><br><span class="line">        <span class="string">'''构建由奇异值组成的对角矩阵</span></span><br><span class="line"><span class="string">        :param k,根据奇异值开放和的占比阈值计算出来的k值</span></span><br><span class="line"><span class="string">        :return 由k个前奇异值组成的对角矩阵</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="comment">#方法1：用数组乘方法</span></span><br><span class="line">        self.SD = np.eye(self.k) * self.S[:self.k]</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#方法2：用自定义方法</span></span><br><span class="line">        e = np.eye(self.k)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.k):</span><br><span class="line">            e[i,i] = self.S[i]</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> self.SD</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">DimReduce</span><span class="params">(self, percentage)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        SVD降维</span></span><br><span class="line"><span class="string">        :param percentage, 奇异值开方和的占比阈值</span></span><br><span class="line"><span class="string">        :return 降维后的用户数据矩阵</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="comment">#计算k值</span></span><br><span class="line">        self._calc_k(percentage)</span><br><span class="line">        print(<span class="string">'\n按照奇异值开方和占比阈值percentage=%d, 求得降维的k=%d'</span>%(percentage, self.k))</span><br><span class="line">        <span class="comment">#构建由奇异值组成的对角矩阵singular values diagonal</span></span><br><span class="line">        self._buildSD(self.k)</span><br><span class="line">        k,U,SD,VT = self.k,self.U, self.SD, self.VT</span><br><span class="line">        <span class="comment">#按照svd分解公式对用户数据矩阵进行降维，得到降维压缩后的数据矩阵</span></span><br><span class="line">        print(<span class="string">'\n降维前的U,S,VT依次为:'</span>)</span><br><span class="line">        print(np.shape(U),      <span class="string">'U:\n'</span>, U)</span><br><span class="line">        print(np.shape(self.S), <span class="string">'S:\n'</span>, self.S)</span><br><span class="line">        print(np.shape(VT),     <span class="string">'VT:\n'</span>, VT)</span><br><span class="line">        print(<span class="string">'\n降维后的U,SD,VT依次为:'</span>)</span><br><span class="line">        print(np.shape(U[:len(U),k]), <span class="string">'U=U[:%d,:%d]:\n'</span>%(len(U),k), U[:len(U), :k])</span><br><span class="line">        print(np.shape(SD), <span class="string">'SD=SD[:%d, :%d]:\n'</span>%(k,k), SD[:k, :k])</span><br><span class="line">        print(np.shape(VT[:k, :len(VT)]), <span class="string">'VT=VT[:%d, :%d]:\n'</span>%(k, len(VT)), VT[:k, :len(VT)])</span><br><span class="line"> </span><br><span class="line">        a = U[:len(U), :k]</span><br><span class="line">        b = np.dot(SD, VT[:k, :len(VT)])</span><br><span class="line">        newData = np.dot(a,b)</span><br><span class="line">        <span class="keyword">return</span> newData</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CSVD_manual</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">##训练数据集，用户对商品的评分矩阵，行为多个用户对单个商品的评分，列为用户对每个商品的评分</span></span><br><span class="line">    data = np.array([[<span class="number">5</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">5</span>],</span><br><span class="line">                     [<span class="number">5</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                     [<span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line">                     [<span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>],</span><br><span class="line">                     [<span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">                     [<span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>]])</span><br><span class="line">    percentage = <span class="number">0.9</span></span><br><span class="line">    svdor = CSVD(data)</span><br><span class="line">    ret = svdor.DimReduce(percentage)</span><br><span class="line">    print(<span class="string">'===================================================='</span>)</span><br><span class="line">    print(<span class="string">'原始用户数据矩阵:\n'</span>, data)</span><br><span class="line">    print(<span class="string">'降维后的数据矩阵:\n'</span>, ret)</span><br><span class="line">    print(<span class="string">'===================================================='</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    CSVD_manual()</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>无监督特征选择方法</title>
      <link href="/hexo/2018/08/28/2018-08-28_unsupervised_featureselection/"/>
      <url>/hexo/2018/08/28/2018-08-28_unsupervised_featureselection/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="1-Laplacian-Score"><a href="#1-Laplacian-Score" class="headerlink" title="1. Laplacian Score"></a>1. Laplacian Score</h3><p>Laplacian Score (LSCORE) is an unsupervised/supervised linear feature extraction method. For each feature/variable, it computes Laplacian score based on an observation that data from the same class are often close to each other. Its power of locality preserving property is used, and the <strong>algorithm selects variables with largest scores.</strong></p><p> <a href="https://www.rdocumentation.org/packages/Rdimtools/versions/0.3.2" target="_blank" rel="noopener">Rdimtools </a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Rdimtools：do.lscore(X, ndim = <span class="number">2</span>, type = c(<span class="string">"proportion"</span>, <span class="number">0.1</span>), preprocess = c(<span class="string">"null"</span>,</span><br><span class="line"><span class="string">"center"</span>, <span class="string">"scale"</span>, <span class="string">"cscale"</span>, <span class="string">"whiten"</span>, <span class="string">"decorrelate"</span>), t = <span class="number">10</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="2-Package-‘IDmining’"><a href="#2-Package-‘IDmining’" class="headerlink" title="2.Package ‘IDmining’"></a>2.Package ‘IDmining’</h3><p> Intrinsic Dimension for Data Mining</p><p><a href="https://cran.r-project.org/web/packages/IDmining/IDmining.pdf" target="_blank" rel="noopener">https://cran.r-project.org/web/packages/IDmining/IDmining.pdf</a></p><h3 id="3-Unsupervised-Learning-in-R"><a href="#3-Unsupervised-Learning-in-R" class="headerlink" title="3.Unsupervised Learning in R"></a>3.Unsupervised Learning in R</h3><p><a href="https://rpubs.com/williamsurles/310847" target="_blank" rel="noopener">https://rpubs.com/williamsurles/310847</a></p><h3 id="4-python包scikit-feature"><a href="#4-python包scikit-feature" class="headerlink" title="4. python包scikit-feature"></a>4. python包scikit-feature</h3><p><a href="http://featureselection.asu.edu/index.php" target="_blank" rel="noopener">http://featureselection.asu.edu/index.php</a></p><h3 id="5-Unsupervised-dimensionality-reduction-in-sklearn"><a href="#5-Unsupervised-dimensionality-reduction-in-sklearn" class="headerlink" title="5.Unsupervised dimensionality reduction in sklearn"></a>5.Unsupervised dimensionality reduction in sklearn</h3><p><a href="http://scikit-learn.org/stable/modules/unsupervised_reduction.html" target="_blank" rel="noopener">http://scikit-learn.org/stable/modules/unsupervised_reduction.html</a></p><h3 id="6-7-Machine-Learning-techniques-for-Dimensionality-Reduction"><a href="#6-7-Machine-Learning-techniques-for-Dimensionality-Reduction" class="headerlink" title="6. 7 Machine Learning techniques for Dimensionality Reduction"></a>6. <a href="http://dataunion.org/20803.html" target="_blank" rel="noopener">7 Machine Learning techniques for Dimensionality Reduction</a></h3>]]></content>
      
      
    </entry>
    
    <entry>
      <title>特征选择方法</title>
      <link href="/hexo/2018/08/28/2018-08-28_feature_selection/"/>
      <url>/hexo/2018/08/28/2018-08-28_feature_selection/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="有监督特征选择方法"><a href="#有监督特征选择方法" class="headerlink" title="有监督特征选择方法"></a>有监督特征选择方法</h1><h3 id="1-卡方检验-Chi-square"><a href="#1-卡方检验-Chi-square" class="headerlink" title="1. 卡方检验 Chi-square"></a>1. 卡方检验 Chi-square</h3><p>卡方检验是一种用途很广的计数资料的假设检验方法。它属于非参数检验的范畴，主要是比较两个及两个以上样本率( 构成比）以及分类变量的关联性分析。其根本思想就是在于比较理论频数和实际频数的吻合程度或拟合优度问题。</p><p><img src="http://images.cnitblog.com/blog/502930/201310/14202346-b5742cacb64c4f4d8d07ad638179e471.jpg" alt="img"><span class="image-caption-center">img</span></p><p>其中，A为实际值，T为理论值。</p><p>x2用于衡量实际值与理论值的差异程度（也就是卡方检验的核心思想），包含了以下两个信息：</p><p>1.实际值与理论值偏差的绝对大小（由于平方的存在，差异是被放大的）  2. 差异程度与理论值的相对大小</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## python </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectKBest</span><br><span class="line"><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> chi2</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入IRIS数据集</span></span><br><span class="line">iris = load_iris()</span><br><span class="line">iris.data<span class="comment">#查看数据</span></span><br><span class="line">model1 = SelectKBest(chi2, k=<span class="number">2</span>)<span class="comment">#选择k个最佳特征</span></span><br><span class="line">model1.fit_transform(iris.data, iris.target)<span class="comment">#iris.data是特征数据，iris.target是标签数据，该函数可以选择出k个特征 </span></span><br><span class="line">model1.scores_  <span class="comment">#得分</span></span><br><span class="line">model1.pvalues_  <span class="comment">#p-values</span></span><br></pre></td></tr></table></figure><h3 id="2-T-test"><a href="#2-T-test" class="headerlink" title="2. T-test"></a>2. T-test</h3>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R语言机器学习包</title>
      <link href="/hexo/2018/08/27/2018-08-27_machinelearing_rpackages/"/>
      <url>/hexo/2018/08/27/2018-08-27_machinelearing_rpackages/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul><li>mlr包</li><li>CARET</li><li>DMwR</li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Entropy、 交叉熵、相对熵、巴氏距离（Bhattacharyya distance）</title>
      <link href="/hexo/2018/08/26/2018-08-26_Entropy/"/>
      <url>/hexo/2018/08/26/2018-08-26_Entropy/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><p><a href="https://blog.csdn.net/u013829973/article/details/80936272" target="_blank" rel="noopener">原文1</a> <a href="https://www.jianshu.com/p/43318a3dc715?from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">原文2</a> <a href="http://blog.sina.com.cn/s/blog_85f1ffb70101e6p1.html" target="_blank" rel="noopener">原文3</a></p><h3 id="1-信息量-自信息"><a href="#1-信息量-自信息" class="headerlink" title="1. 信息量(自信息)"></a>1. 信息量(自信息)</h3><p>定义：假设X是一个离散型随机变量，其取值集合为χ，概率分布函数为p(x)=P(X=x),x∈χ,我们定义事件X=x0的自信息为： </p><script type="math/tex; mode=display">I(x0)=−log(p(x0))</script><p>一个事件发生的概率越大，则它所携带的信息量就越小，而当p(x0)=1时，熵将等于0，也就是说该事件的发生包含的信息量小。 </p><p>举个例子，小明平时不爱学习，考试经常不及格，而小王是个勤奋学习的好学生，经常得满分，所以我们可以做如下假设：<br>事件A：小明考试及格，对应的概率P(xA)=0.1，信息量为I(xA)=−log(0.1)=3.3219.<br>事件B：小王考试及格，对应的概率P(xB)=0.999，信息量为I(xB)=−log(0.999)=0.0014</p><p>可以看出，结果非常符合直观：小明及格的可能性很低(十次考试只有一次及格)，因此如果某次考试及格了（大家都会说：XXX竟然及格了！），必然会引入较大的信息量，对应的I值也较高。而对于小王而言，考试及格是大概率事件，在事件B发生前，大家普遍认为事件B的发生几乎是确定的，因此当某次考试小王及格这个事件发生时并不会引入太多的信息量，相应的I值也非常的低。</p><h3 id="2-信息熵（Entropy）"><a href="#2-信息熵（Entropy）" class="headerlink" title="2. 信息熵（Entropy）"></a>2. 信息熵（Entropy）</h3><p>定义：对于一个随机变量XX而言，它的所有可能取值的信息量的期望\(（E[I(x)] \)就称为熵。<br>当XX是离散的： </p><script type="math/tex; mode=display">H(X)=E[I(x)]=−∑_{x∈X}p(x)logp(x)</script><p>当X是连续的随机变量：熵定义为： </p><script type="math/tex; mode=display">H(X)=−∫_{x∈X}p(x)logp(x)dx</script><p><strong>自信息只能处理单个的输出。而熵是对整个概率分布中不确定性总量进行量化</strong>。</p><p>约定：p=0时，定义0log0=0。通常对数以2为底或者e为底，这是熵的单位称作比特（bit）或者纳特（nat）<br>当随机变量只取两个值的时候，即X分布为：P(X=1)=p，P(X=0)=1−p，0&lt;=p&lt;=1。</p><p><img src="http://images0.cnblogs.com/blog2015/605905/201506/161933409209524.png" alt="img"><span class="image-caption-center">img</span></p><blockquote><p>例子<br>假设小明的考试结果是一个0-1分布X只有两个取值{0：不及格，1：及格}，在某次考试结果公布前，小明的考试结果有多大的不确定度呢？你肯定会说：十有八九不及格！因为根据先验知识，小明及格的概率仅有0.1,90%的可能都是不及格的。怎么来度量这个不确定度？求期望！不错，我们对所有可能结果带来的额外信息量求取均值（期望），其结果不就能够衡量出小明考试成绩的不确定度了吗。<br>即：<br>HA(x)=−[p(xA)log(p(xA))+(1−p(xA))log(1−p(xA))]=0.4690<br>对应小王的熵：<br>HB(x)=−[p(xB)log(p(xB))+(1−p(xB))log(1−p(xB))]=0.0114<br>虽然小明考试结果的不确定性较低，毕竟十次有9次都不及格，但是也比不上小王（1000次考试只有一次才可能不及格，结果相当的确定）<br>我们再假设一个成绩相对普通的学生小东，他及格的概率是P(xC)=0.5,即及格与否的概率是一样的，对应的熵：<br>HC(x)=−[p(xC)log(p(xC))+(1−p(xC))log(1−p(xC))]=1<br>其熵为1，他的不确定性比前边两位同学要高很多，在成绩公布之前，很难准确猜测出他的考试结果。<br>可以看出，<strong>熵其实是信息量的期望值，它是一个随机变量的不确定性的度量。熵越大，随机变量的不确定性越大</strong>。</p></blockquote><h3 id="3-条件熵"><a href="#3-条件熵" class="headerlink" title="3. 条件熵"></a>3. 条件熵</h3><p>X给定条件下Y的条件分布的熵对X的数学期望，在机器学习中为选定某个特征后的熵，公式如下：</p><p>　　　　　　　　　　　　　　　　<img src="http://images0.cnblogs.com/blog2015/605905/201506/162006264669404.png" alt="img"><span class="image-caption-center">img</span></p><p>一个特征对应着多个类别Y，因此在此的多个分类即为X的取值x。</p><p>或者</p><script type="math/tex; mode=display">Info_A(D) = \sum\limits_{j=1}^v\frac{|D_j|}{|D|}Info(D_j)Info_A(D) = \sum\limits_{j=1}^v\frac{|D_j|}{|D|}Info(D_j)</script><h3 id="4-信息增益"><a href="#4-信息增益" class="headerlink" title="4. 信息增益"></a><strong>4. 信息增益</strong></h3><p>信息增益在决策树算法中是用来选择特征的指标，信息增益越大，则这个特征的选择性越好，在概率中定义为：待分类的集合的熵和选定某个特征的条件熵之差（这里只的是经验熵或经验条件熵，由于真正的熵并不知道，是根据样本计算出来的），公式如下：</p><p>　　　　　　　　　　　　　　　　<img src="http://images0.cnblogs.com/blog2015/605905/201506/162013009355725.png" alt="img"><span class="image-caption-center">img</span></p><script type="math/tex; mode=display">Gain(A) = Info(D)-Info_A(D)</script><h3 id="5-信息增益比"><a href="#5-信息增益比" class="headerlink" title="5. 信息增益比"></a><strong>5. 信息增益比</strong></h3><p>信息增益的一个大问题就是偏向选择特征值比较多的属性从而导致overfitting，那么我们能想到的解决办法自然就是对分支过多的情况进行惩罚(penalty)了。于是我们有了信息增益比。</p><h3 id="6-Gini系数"><a href="#6-Gini系数" class="headerlink" title="6. Gini系数"></a><strong>6. Gini系数</strong></h3><p>Gini系数是一种与信息熵类似的做特征选择的方式，可以用来数据的不纯度。在CART(Classification and Regression Tree)算法中利用基尼指数构造二叉决策树（选择基尼系数最小的特征及其对应的特征值）。<br>Gini系数的计算方式如下： </p><p>其中，D表示数据集全体样本，表示每种类别出现的概率。取个极端情况，如果数据集中所有的样本都为同一类，那么有，，显然此时数据的不纯度最低。</p><hr><h3 id="Mutual-Information-互信息-MI-，Normalized-Mutual-Information-标准互信息-NMI"><a href="#Mutual-Information-互信息-MI-，Normalized-Mutual-Information-标准互信息-NMI" class="headerlink" title="Mutual Information(互信息)(MI)，Normalized Mutual Information (标准互信息)(NMI)"></a>Mutual Information(互信息)(MI)，Normalized Mutual Information (标准互信息)(NMI)</h3><p><strong>互信息（Mutual Information）</strong>是用来衡量两个数据分布的吻合程度，是指两个事件集合之间的相关性。</p><p><code>特征选择：</code>用互信息的方法，在某个类别C中的出现概率高，而在其它类别中的出现概率低的词条T，将获得较高的词条和类别互信息，也就可能被选取为类别C的特征。互信息是term的存在与否能给类别c的正确判断带来的信息量。词条和类别的互信息体现了词条和类别的相关程度，互信息越大，词条和类别的相关程度也越大。得到词条和类别之间的相关程度后，选取一定比例的，排名靠前的词条作为最能代表此种类别的特征。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria9.png" alt=""></p><h3 id="例子：假设对于17个样本点-v1-v2-…-v17-进行聚类"><a href="#例子：假设对于17个样本点-v1-v2-…-v17-进行聚类" class="headerlink" title="例子：假设对于17个样本点(v1,v2,…,v17)进行聚类"></a>例子：假设对于17个样本点(v1,v2,…,v17)进行聚类</h3><p><img src="http://images.cnblogs.com/cnblogs_com/ziqiao/stanford%E8%81%9A%E7%B1%BB%E4%BE%8B%E5%AD%90.jpg" alt="img"><span class="image-caption-center">img</span> </p><p>比如标准结果是图中的叉叉点点圈圈，我的聚类结果是图中标注的三个圈。</p><blockquote><p>或者我的结果: A = [1 1 1 1 1 1   2 2 2 2 2 2    3 3 3 3 3];</p><p>标准的结果   : B = [1 2 1 1 1 1   1 2 2 2 2 3    1 1 3 3 3];</p></blockquote><p><code>问题：</code>衡量我的结果和标准结果有多大的区别，若我的结果和他的差不多，结果应该为1，若我做出来的结果很差，结果应趋近于0。</p><script type="math/tex; mode=display">MI(X,Y)=\sum_{i=1}^{|X|}\sum_{j=1}^{|Y|}P(i,j)log(\frac{P(i,j)}{P(i)P^{'}(j)})</script><p>首先计算上式分子中联合概率分布 \( P(i,j)=\frac{|X_i\cap Y_j|}{N} \)</p><p>X=unique(A)=[1 2 3]，Y=unique(B)=[1 2 3];</p><p>分子p(x,y)为x和y的联合分布概率，</p><p>p(1,1)=5/17, p(1,2)=1/17, p(1,3)=0;</p><p>p(2,1)=1/17, p(2,2)=4/17, p(2,3)=1/17;</p><p>p(3,1)=2/17, p(3,2)=0, p(3,3)=3/17;</p><p>分母p(x)为x的概率函数，p(y)为y的概率函数，x和y分别来自于A和B中的分布，所以即使x=y时，p(x)和p(y)也可能是不一样的。</p><p>对p(x)： p(1)=6/17 p(2)=6/17 p(3)=5/17</p><p>对p(y)： p(1)=8/17 p(2)=5/17 P(3)=4/17 </p><p>这样就可以算出MI值了。</p><p><strong>标准化互信息</strong></p><p>标准化互聚类信息都是用熵做分母将MI值调整到0与1之间。</p><script type="math/tex; mode=display">NMI(X,Y)=\frac{2MI(X,Y)}{H(X)+H(Y)}</script><p>H(X)和H(Y)分别为X和Y的熵，下面的公式中log的底b=2。</p><p><img src="http://images.cnblogs.com/cnblogs_com/ziqiao/shang.png" alt="img"><span class="image-caption-center">img</span> </p><p>例如H(X) =  -p(1)<em>log2(p(1)) - -p(2)</em>log2(p(2)) -p(3)*log2(p(3))。</p><h2 id="相对熵—KL（Kullback-Leibler-divergence）散度"><a href="#相对熵—KL（Kullback-Leibler-divergence）散度" class="headerlink" title="相对熵—KL（Kullback-Leibler divergence）散度"></a>相对熵—KL（Kullback-Leibler divergence）散度</h2><p><strong>描述两个概率分布P和Q差异的一种方法,在信息论中，D(P||Q)表示当用概率分布Q来拟合真实分布P时，产生的信息损耗，其中P表示真实分布，Q表示P的拟合分布。相对熵可以衡量两个随机分布之间的距离，当两个随机分布相同时，它们的相对熵为零，当两个随机分布的差别增大时，它们的相对熵也会增大。所以相对熵（KL散度）可以用于比较文本的相似度，先统计出词的频率，然后计算相对熵。</strong></p><p>KL距离，是对同一个随机变量X的两个单独的概率分布的度量。记为\(D_{KL}(p||q)\)。 它度量当真实分布为p时，假设分布q的无效性。</p><script type="math/tex; mode=display">D_{KL}(p||q)=Ep[logp(x)q(x)]=∑_{x∈χ}p(x)logp(x)q(x)  \\=∑_{x∈χ}[p(x)logp(x)−p(x)logq(x)] \\=∑_{x∈χ}p(x)logp(x)−∑_{x∈χ}p(x)logq(x)\\ =−H(p)−∑_{x∈χ}p(x)logq(x) \\=−H(p)+Ep[−logq(x)]\\=Hp(q)−H(p)\\</script><p>并且为了保证连续性，做如下约定：<br>0log0/0=0，0log0/q=0，plogp/0=∞<br>显然，当p=q时,两者之间的相对熵DKL(p||q)=0<br>上式最后的Hp(q)表示在p分布下，使用q进行编码需要的bit数，而H(p)表示对真实分布p所需要的最小编码bit数。基于此，相对熵的意义就很明确了：DKL(p||q)表示在真实分布为p的前提下，使用q分布进行编码相对于使用真实分布p进行编码（即最优编码）所多出来的bit数。</p><p><strong>重要性质 ：</strong></p><p>  <strong>1.它是非负的。</strong></p><p>  <strong>2.不是对称的:对于某些P和Q，DKL(p||q)DKL(p||q)不等于DKL(q||p)DKL(q||p),这样意味着选择DKL(p||q)DKL(p||q)还是DKL(q||p)DKL(q||p)影响很大</strong></p><p>例子</p><p>假如一个字符发射器，随机发出0和1两种字符，真实发出概率分布为A，但实际不知道A的具体分布。通过观察，得到概率分布B与C，各个分布的具体情况如下：</p><p><img src="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D160/sign=7c3a2d55bb7eca8016053de1a1239712/95eef01f3a292df52ed52763b7315c6034a873b6.jpg" alt="img"><span class="image-caption-center">img</span></p><p><img src="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D156/sign=c23f2c659cdda144de0968b784b6d009/8d5494eef01f3a29e31d5db89225bc315d607ceb.jpg" alt="img"><span class="image-caption-center">img</span></p><p><img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D158/sign=6956084631f33a879a6d041ffe5d1018/2e2eb9389b504fc2690d3b73eedde71190ef6d72.jpg" alt="img"><span class="image-caption-center">img</span></p><p>可以计算出得到如下：</p><p><img src="https://gss3.bdstatic.com/7Po3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D366/sign=2c3e1328d6c451daf2f60aed80fc52a5/b64543a98226cffc29fc34c4b2014a90f703eaf6.jpg" alt="img"><span class="image-caption-center">img</span></p><p><img src="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D378/sign=b52422c4da58ccbf1fbcb33d21d9bcd4/fd039245d688d43f816e1a84761ed21b0ff43b84.jpg" alt="img"><span class="image-caption-center">img</span></p><p>也可以看出，按照概率分布B进行编码，要比按照C进行编码，平均每个符号增加的比特数目少。从分布上也可以看出，实际上B比C更接近实际分布（因为其与A分布的相对熵更小）.</p><h2 id="交叉熵-Cross-Entropy"><a href="#交叉熵-Cross-Entropy" class="headerlink" title="交叉熵(Cross-Entropy)"></a>交叉熵(Cross-Entropy)</h2><p>交叉熵容易跟相对熵搞混，二者联系紧密，但又有所区别。假设有两个分布p，q则它们在给定样本集上的交叉熵定义如下：</p><script type="math/tex; mode=display">CEH(p,q)=Ep[−logq]=−∑x∈χp(x)logq(x)=H(p)+DKL(p||q)</script><p>可以看出，交叉熵与上一节定义的相对熵仅相差了H(p),当p已知时，可以把H(p)看做一个常数，此时交叉熵与KL距离在行为上是等价的，都反映了分布p、q的相似程度。最小化交叉熵等于最小化KL距离。它们都将在p=q时取得最小值H(p)（p=q时KL距离为0），因此有的工程文献中将最小化KL距离的方法称为Principle of Minimum Cross-Entropy (MCE)或Minxent方法。</p><h4 id="由交叉熵到logistic-regression"><a href="#由交叉熵到logistic-regression" class="headerlink" title="由交叉熵到logistic regression"></a>由交叉熵到logistic regression</h4><p><strong>特别的，在logistic regression中</strong><br>p:真实样本分布，服从参数为p的0-1分布，即X∼B(1,p)<br>q:待估计的模型，服从参数为q的0-1分布，即X∼B(1,q)<br>两者的交叉熵为：</p><script type="math/tex; mode=display">CEH(p,q)   \\=−∑x∈χp(x)logq(x)  \\=−[Pp(x=1)logPq(x=1)+Pp(x=0)logPq(x=0)] \\=−[plogq+(1−p)log(1−q)] \\\=−[yloghθ(x)+(1−y)log(1−hθ(x))]\\</script><p>对所有训练样本取均值得： </p><script type="math/tex; mode=display">−(1/m)∑^m_{i=1}[y(i)loghθ(x(i))+(1−y(i))log(1−hθ(x(i)))]</script><p>这个结果<strong>与通过极大似然估计方法求出来的结果是一致的；最小化交叉熵损失函数等价于求极大似然估计；从二者的公式来看，只是差了一个负号而已。</strong></p><p><strong>那么LR的损失函数为什么不用平方损失呢？因为平方损失函数不是凸函数，使用梯度下降法无法求得局部最小（全局最小），而交叉熵损失函数是凸函数，使用梯度下降法可以找到全局最优解。</strong></p><h2 id="Bhattacharyya-distance巴氏距离"><a href="#Bhattacharyya-distance巴氏距离" class="headerlink" title="Bhattacharyya distance巴氏距离"></a>Bhattacharyya distance巴氏距离</h2><ul><li>在统计理论中，<strong>Bhattacharyya距离用来度量两个离散或连续概率分布的相似性</strong>。</li><li>它与Bhattacharyya系数（Bhattacharyya coefficient）高度相关，后者是用来度量两个统计样本的重叠度的。所有这些命名都是为了纪念A. Bhattacharyya，一个在1930年工作于印度统计局的统计学家</li><li><strong>该系数可以用来度量两个样本集的相似性。它通常在分类问题中被用来判断类别的可分性。</strong></li></ul><p>定义</p><p>对于定义在同一个定义域X上的两个离散概率分布p和q来说，它们之间的Bhattacharyya距离可定义如下：</p><p> <img src="http://upload.wikimedia.org/math/b/a/d/badf93af7fd3dce1978276df77bf3264.png" alt="D_B(p,q) = -\ln \left( BC(p,q) \right)"><span class="image-caption-center">D_B(p,q) = -\ln \left( BC(p,q) \right)</span></p><p>这里</p><p> <img src="http://upload.wikimedia.org/math/b/3/0/b30f018b6017164a220084802c4417cc.png" alt="BC(p,q) = \sum_{x\in X} \sqrt{p(x) q(x)}"><span class="image-caption-center">BC(p,q) = \sum_{x\in X} \sqrt{p(x) q(x)}</span></p><p>被称为Bhattacharyya系数。</p><p>对于连续概率分布，Bhattacharyya系数可以定义如下：</p><p> <img src="http://upload.wikimedia.org/math/7/1/6/716ecb5f3bcb9b3256e713b9149cdc70.png" alt="BC(p,q) = \int \sqrt{p(x) q(x)}\, dx"><span class="image-caption-center">BC(p,q) = \int \sqrt{p(x) q(x)}\, dx</span></p><p>在以上两种情况下，0&lt;=BC&lt;=1并且0&lt;=DB&lt;=∞。DB并不遵循三角不等式，但是<a href="http://blog.sina.com.cn/s/blog_85f1ffb70101e65d.html" target="_blank" rel="noopener">Hellinger距离</a>满足三角不等式。</p><p>对于一个多维高斯分布来说pi=N(mi,Pi)，</p><p> <img src="http://upload.wikimedia.org/math/5/3/4/5343dbab9715adc082917563efac53d3.png" alt="D_B={1\over 8}(m_1-m_2)^T P^{-1}(m_1-m_2)+{1\over 2}\ln \,\left({\det P \over \sqrt{\det P_1 \, \det P_2} }\right)"><span class="image-caption-center">D_B={1\over 8}(m_1-m_2)^T P^{-1}(m_1-m_2)+{1\over 2}\ln \,\left({\det P \over \sqrt{\det P_1 \, \det P_2} }\right)</span></p><p>这里mi和Pi分别代表该分布的均值和方差，并且</p><p> <img src="http://upload.wikimedia.org/math/4/6/d/46dd37a40d8bcd7cd90824e9308e210d.png" alt="P={P_1+P_2 \over 2}"><span class="image-caption-center">P={P_1+P_2 \over 2}</span></p><p>注意到，在这种情况下Bhattacharyya距离的第一项类似于Mahalanobis距离（马氏距离）。</p><h4 id="Bhattacharyya系数"><a href="#Bhattacharyya系数" class="headerlink" title="Bhattacharyya系数"></a>Bhattacharyya系数</h4><p>Bhattacharyya系数用来度量两个统计样本的重叠度。该系数可以用来度量两个样本集的可分性。</p><p>计算Bhattacharyya系数包含了一个基本的关于两个样本集重合度的积分运算。两个样本集中的定义域被分成了事前定义的几份，这种划分可以体现在下面的定义中：</p><p> <img src="http://upload.wikimedia.org/math/0/7/8/07864c05ee66eeaa6eec0c528f94ab03.png" alt="\mathrm{Bhattacharyya} = \sum_{i=1}^{n}\sqrt{(\mathbf{\Sigma a}_i\cdot\mathbf{\Sigma b}_i)}"><span class="image-caption-center">\mathrm{Bhattacharyya} = \sum_{i=1}^{n}\sqrt{(\mathbf{\Sigma a}_i\cdot\mathbf{\Sigma b}_i)}</span></p><p>其中a，b代表样本，n代表划分的数目，∑ai和∑bi分别代表两个样本集中在第i个划分中的样本之和。</p><p>对于两个样本集来说，如果相同划分中的样本数越多，样本和越大，则该式的值越大。划分数的选择取决于每一个样本集中的样本数：太少的划分将因为过高估计了重叠区域而减小精度，而太多的划分将会因为在本该有重叠的区域没有恰好重叠而减小精度（最精细的划分将会使每一个相同的区间中都没有重叠）。</p><p>如果在每一个划分区间内的乘积都为零，则Bhattacharyya系数也为零。这就意味着如果A和B两个样本集都与样本集C完全可分，则BC（A，C）=B（B，C）=0，即Bhattacharyya系数对于A和B无法区分。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>聚类算法评价指标</title>
      <link href="/hexo/2018/06/04/2018-06-04_cluster_criteria/"/>
      <url>/hexo/2018/06/04/2018-06-04_cluster_criteria/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://blog.csdn.net/sinat_33363493/article/details/52496011" target="_blank" rel="noopener">原文</a><br><a href="https://www.jianshu.com/p/b5996bf06bd6" target="_blank" rel="noopener">原文1</a></p><h1 id="无监督聚类"><a href="#无监督聚类" class="headerlink" title="无监督聚类"></a>无监督聚类</h1><h3 id="1-Compactness-紧密性-CP"><a href="#1-Compactness-紧密性-CP" class="headerlink" title="1. Compactness(紧密性)(CP)"></a>1. Compactness(紧密性)(CP)</h3><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria1.png" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria2.png" alt=""></p><p>CP计算 每一个类各点到聚类中心的平均距离，CP越低意味着类内聚类距离越近</p><pre><code> 缺点：没有考虑类间效果</code></pre><h3 id="2-Separation-间隔性-SP"><a href="#2-Separation-间隔性-SP" class="headerlink" title="2. Separation(间隔性)(SP)"></a>2. Separation(间隔性)(SP)</h3><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria3.png" alt=""></p><p>SP计算 各聚类中心两两之间平均距离，SP越高意味类间聚类距离越远</p><pre><code> 缺点：没有考虑类内效果</code></pre><h3 id="3-Davies-Bouldin-Index-戴维森堡丁指数-分类适确性指标-DB-DBI"><a href="#3-Davies-Bouldin-Index-戴维森堡丁指数-分类适确性指标-DB-DBI" class="headerlink" title="3. Davies-Bouldin Index(戴维森堡丁指数)(分类适确性指标)(DB)(DBI)"></a>3. Davies-Bouldin Index(戴维森堡丁指数)(分类适确性指标)(DB)(DBI)</h3><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria4.png" alt=""></p><p> DB计算 任意两类别的类内距离平均距离(CP)之和除以两聚类中心距离 求最大值， DB越小意味着类内距离越小 同时类间距离越大 </p><pre><code>  缺点：因使用欧式距离 所以对于环状分布  聚类评测很差</code></pre><h3 id="4-Dunn-Validity-Index-邓恩指数-DVI"><a href="#4-Dunn-Validity-Index-邓恩指数-DVI" class="headerlink" title="4. Dunn Validity Index (邓恩指数)(DVI)"></a>4. Dunn Validity Index (邓恩指数)(DVI)</h3><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria5.png" alt=""></p><p>DVI计算 任意两个簇元素的最短距离(类间)除以任意簇中的最大距离(类内)，DVI越大意味着类间距离越大 同时类内距离越小</p><pre><code>缺点：对离散点的聚类测评很高、对环状分布测评效果差</code></pre><h3 id="5-C-index-for-COX-model"><a href="#5-C-index-for-COX-model" class="headerlink" title="5. C-index for COX model"></a>5. C-index for COX model</h3><h3 id="6-Silhouette-width"><a href="#6-Silhouette-width" class="headerlink" title="6. Silhouette width"></a>6. Silhouette width</h3><p>轮廓系数（Silhouette coefficient）适用于实际类别信息未知的情况。对于单个样本，设a是与它同类别中其他样本的平均距离，b是与它距离最近不同类别中样本的平均距离。对于一个样本集合，它的轮廓系数是所有样本轮廓系数的平均值。轮廓系数取值范围是[−1,1]，同类别样本越距离相近且不同类别样本距离越远，分数越高。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria15.png" alt=""></p><h3 id="7-survival-analysis"><a href="#7-survival-analysis" class="headerlink" title="7. survival analysis"></a>7. survival analysis</h3><h1 id="有监督聚类"><a href="#有监督聚类" class="headerlink" title="有监督聚类"></a>有监督聚类</h1><h3 id="1、Cluster-Accuracy-准确性-CA"><a href="#1、Cluster-Accuracy-准确性-CA" class="headerlink" title="1、Cluster Accuracy (准确性)(CA)"></a>1、Cluster Accuracy (准确性)(CA)</h3><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria6.png" alt=""></p><p>CA计算 聚类正确的百分比</p><p>CA越大证明聚类效果越好</p><p><strong>召回率（Recall）</strong>指的是所有正样本有多少被模型判为正样本</p><p>纯度purity  计算正确聚类的文档数占总文档数的比例）</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria13.jpg" alt=""></p><p>其中Ω = {ω1,ω2, . . . ,ωK}是聚类的集合ωK表示第k个聚类的集合。C = {c1, c2, . . . , cJ}是文档集合，cJ表示第J个文档。N表示文档总数。</p><h3 id="2-ROC曲线-（二分类）"><a href="#2-ROC曲线-（二分类）" class="headerlink" title="2. ROC曲线 （二分类）"></a>2. ROC曲线 （二分类）</h3><p>真正类率(true positive rate ,TPR)，刻画的是分类器所识别出的 正实例占所有正实例的比例（正样本预测结果数 / 正样本实际数）。负正类率(false positive rate, FPR)，计算的是分类器错认为正类的负实例占所有负实例的比例（被预测为正的负样本结果数 /负样本实际数）。</p><blockquote><p>( TPR=0,FPR=0 ) 把每个实例都预测为负类的模型<br>( TPR=1,FPR=1 ) 把每个实例都预测为正类的模型<br>( TPR=1,FPR=0 ) 理想模型  </p></blockquote><h4 id="3-F值"><a href="#3-F值" class="headerlink" title="3. F值"></a>3. F值</h4><p>RI方法有个特点就是把准确率和召回率看得同等重要，事实上有时候我们可能需要某一特性更多一点，这时候就适合F值方法.</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria14.jpg" alt=""></p><h3 id="4-Rand-index-兰德指数-RI-、Adjusted-Rand-index-调整兰德指数-ARI"><a href="#4-Rand-index-兰德指数-RI-、Adjusted-Rand-index-调整兰德指数-ARI" class="headerlink" title="4. Rand index(兰德指数)(RI) 、Adjusted Rand index(调整兰德指数)(ARI)"></a>4. Rand index(兰德指数)(RI) 、Adjusted Rand index(调整兰德指数)(ARI)</h3><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria7.png" alt=""></p><p>其中C表示实际类别信息，K表示聚类结果，a表示在C与K中都是同类别的元素对数，b表示在C与K中都是不同类别的元素对数。分母表示数据集中可以组成的对数。</p><p>RI取值范围为[0,1]，值越大意味着聚类结果与真实情况越吻合。RI越大表示聚类效果准确性越高 同时每个类内的纯度越高</p><p>为了实现“在聚类结果随机产生的情况下，指标应该接近零”，<strong>调整兰德系数（Adjusted rand index）</strong>被提出，它具有更高的区分度：</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria8.png" alt=""></p><p>ARI取值范围为[−1,1]，值越大意味着聚类结果与真实情况越吻合。从广义的角度来讲，ARI衡量的是两个数据分布的吻合程度。</p><h4 id="5、Normalized-Mutual-Information-标准互信息-NMI-、Mutual-Information-互信息-MI"><a href="#5、Normalized-Mutual-Information-标准互信息-NMI-、Mutual-Information-互信息-MI" class="headerlink" title="5、Normalized Mutual Information (标准互信息)(NMI)、Mutual Information(互信息)(MI)"></a>5、Normalized Mutual Information (标准互信息)(NMI)、Mutual Information(互信息)(MI)</h4><p>互信息（Mutual Information）是用来衡量两个数据分布的吻合程度。也是一有用的信息度量，它是指两个事件集合之间的相关性。<br>用互信息的方法，在某个类别C中的出现概率高，而在其它类别中的出现概率低的词条T，将获得较高的词条和类别互信息，也就可能被选取为类别C的特征。</p><p>互信息是term的存在与否能给类别c的正确判断带来的信息量。词条和类别的互信息体现了词条和类别的相关程度，互信息越大，词条和类别的相关程度也越大。得到词条和类别之间的相关程度后，选取一定比例的，排名靠前的词条作为最能代表此种类别的特征。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria9.png" alt=""></p><p>标准化互聚类信息都是用熵做分母将MI值调整到0与1之间，一个比较多见的实现是下面所示：</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria10.png" alt=""></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria11.png" alt=""></p><h1 id="例子讲解"><a href="#例子讲解" class="headerlink" title="例子讲解"></a>例子讲解</h1><p>如图认为x代表一类文档，o代表一类文档，方框代表一类文档，<br><img src="https://taoshengxu.github.io/DocumentGit/img/cluter_criteria12.jpg" alt=""></p><blockquote><p>假设一个集合中有N篇文章<br>一个集合中有N(N-1)/2个集合对<br>TP：同一类的文章被分到同一个簇<br>TN：不同类的文章被分到不同簇<br>FP：不同类的文章被分到同一个簇<br>FN：同一类的文章被分到不同簇    </p><p>purity = ( 5+ 4 + 3) / 17 = 0.71</p><p>RI = （TP+TN）/（TP+FP+FN+TN）#Rand Index度量的正确的百分比<br>TP＋FP ＝ C(2,6) + C(2,6) + C(2,5) = 15 + 15 + 10 = 40    其中C(n,m)是指在m中任选n个的组合数。<br>TP = C(2,5) + C(2,4) + C(2,3) + C(2,2) = 20<br>FP = 40 - 20 = 20<br>相似的方法可以计算出TN = 72 FN = 24<br>所以RI ＝ ( 20 + 72) / ( 20 + 20 + 72 +24) = 0.68     </p><p>准确率Precision=TP/(TP+FP)</p><p>召回率Recall=TP/(TP+FN)</p><p>F1=2×Recall×Precision/(Recall+Precision)</p></blockquote>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Gap Statistic 间隔统计量</title>
      <link href="/hexo/2018/06/04/2018-06-04_gap_statistic/"/>
      <url>/hexo/2018/06/04/2018-06-04_gap_statistic/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://blog.csdn.net/baidu_17640849/article/details/70769555" target="_blank" rel="noopener">原文</a></p><p><a href="https://web.stanford.edu/~hastie/Papers/gap.pdf" target="_blank" rel="noopener">Gap statistic</a>由Tibshirani等人提出，用以解决聚类问题确定所判定类的数目。</p><h3 id="聚类的紧支测度-（measure-of-the-compactness）"><a href="#聚类的紧支测度-（measure-of-the-compactness）" class="headerlink" title="聚类的紧支测度 （measure of the compactness）"></a>聚类的紧支测度 （measure of the compactness）</h3><p>最简单的方法是使用类内样本点之间的欧式距离来表示，记为Dk，DK越小聚类的紧支性越好。    </p><script type="math/tex; mode=display">D_k = \sum_{x_i \in C_k}\sum_{x_j\in C_k}||x_i - x_j ||^2 = 2n_k\sum_{x_i\in C_k}||x_i - \mu_k||^2</script><p>标准化后： </p><script type="math/tex; mode=display">W_k = \sum_{k=1}^{K}\frac{1}{2n_k}D_k</script><p>Wk 是elbow method的基础。</p><p><a href="https://datasciencelab.wordpress.com/2013/12/27/finding-the-k-in-k-means-clustering/" target="_blank" rel="noopener">Reference</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R-appveyor设置</title>
      <link href="/hexo/2018/05/18/2018-05-18_r-appveyor/"/>
      <url>/hexo/2018/05/18/2018-05-18_r-appveyor/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://github.com/krlmlr/r-appveyor" target="_blank" rel="noopener">https://github.com/krlmlr/r-appveyor</a></p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><ol><li>Sign up to <a href="http://appveyor.com" target="_blank" rel="noopener">AppVeyor</a>.</li><li><a href="https://ci.appveyor.com/projects/new" target="_blank" rel="noopener">Enable testing</a> for your project.</li><li>Run <code>devtools::use_appveyor()</code> in your project.</li><li>(Optional) Adapt <code>appveyor.yml</code> to your needs according to the <a href="http://www.appveyor.com/docs/appveyor-yml" target="_blank" rel="noopener">documentation</a>.</li><li>(Optional) Add a badge as described by the output of <code>devtools::use_appveyor()</code>.</li><li>Be sure to supply a <code>.gitattributes</code> file that takes care of fixing CRLF conversion settings that are relevant on Windows.  <a href="/.gitattributes">The one in this repo</a> can be used for starters.</li><li>Push to your repo to start building.</li><li>Enjoy!</li></ol><p>!!! note<br>    The cell type informat</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R包安装路径设置及从Bioconductor安装包,BiocCheck</title>
      <link href="/hexo/2018/05/15/2018-05-15_R_environment/"/>
      <url>/hexo/2018/05/15/2018-05-15_R_environment/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="设置临时安装路径"><a href="#设置临时安装路径" class="headerlink" title="设置临时安装路径"></a>设置临时安装路径</h1><blockquote><p>.libPaths()<br>.libPaths(.libPaths()[2])</p></blockquote><h1 id="设置永久安装路径"><a href="#设置永久安装路径" class="headerlink" title="设置永久安装路径"></a>设置永久安装路径</h1><p>windows设置环境变量</p><ul><li>新建系统环境变量R_LIBS ,值为自定义R包安装目录。</li><li>重启R,在R中运行.libPaths()即可查看设置是否生效。</li></ul><blockquote><p>R_LIBS=D:/R_Library</p></blockquote><p>Linux 设置</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  R_LIBS=<span class="string">"/usr/lib/R/Library"</span> R -q -e <span class="string">'print(.libPaths())'</span></span><br></pre></td></tr></table></figure><h1 id="R-编译不通过"><a href="#R-编译不通过" class="headerlink" title="R 编译不通过"></a>R 编译不通过</h1><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Sys</span><span class="selector-class">.setenv</span>(<span class="string">"PKG_CXXFLAGS"</span>=<span class="string">"-std=c++11"</span>)</span><br></pre></td></tr></table></figure><h1 id="BiocCheck"><a href="#BiocCheck" class="headerlink" title="BiocCheck"></a>BiocCheck</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dir=<span class="string">"D:/xxx_0.99.7.tar.gz"</span></span><br><span class="line"><span class="function"><span class="title">BiocCheck</span><span class="params">(dir)</span></span></span><br></pre></td></tr></table></figure><p><em>By default that the directory gets cleaned up as long as there aren’t any errors. If you want it to stick around (to check warnings, for instance) you can enable that under Tools &gt; Global Options &gt; Packages   “Cleanup output after successful R CMD check” option.</em></p><h1 id="R从bioconductor安装包"><a href="#R从bioconductor安装包" class="headerlink" title="R从bioconductor安装包"></a>R从bioconductor安装包</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">source</span><span class="params">(<span class="string">"http://bioconductor.org/biocLite.R"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">options</span><span class="params">(BioC_mirror=<span class="string">"http://mirrors.ustc.edu.cn/bioc/"</span>)</span></span></span><br><span class="line">我的做法是把上述两句放到 ~/<span class="selector-class">.Rprofile</span> 的，但是有时候网速慢导致 source 这一步很慢，结果就是启动 R 需要几秒钟或者报错。</span><br><span class="line">最后我直接自定义函数：</span><br><span class="line">source<span class="selector-class">.bio</span> &lt;- function()&#123;</span><br><span class="line">source(<span class="string">"http://bioconductor.org/biocLite.R"</span>)</span><br><span class="line">options(BioC_mirror=<span class="string">"http://mirrors.ustc.edu.cn/bioc/"</span>)</span><br><span class="line">&#125;</span><br><span class="line">然后仍然放到 ~/<span class="selector-class">.Rprofile</span> ，然后需要装 Bioconductor 的包的时候先运行一下 source.bio() 就好了。</span><br><span class="line">最后，如果你用 Windows 系统的话，上述文件换成 C:\Program Files\R\R-<span class="number">3.4</span>.<span class="number">2</span>\etc\Rprofile<span class="selector-class">.site</span> 这个文件。</span><br><span class="line"></span><br><span class="line">链接：https:<span class="comment">//www.zhihu.com/question/63601255/answer/360879580</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">local(&#123;</span><br><span class="line">  options( repos  = <span class="string">"https://mirrors.ustc.edu.cn/CRAN/"</span> )</span><br><span class="line">  options( BioC_mirror = <span class="string">"https://mirrors.ustc.edu.cn/bioc/"</span> )</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">bioPackages &lt;- </span><br><span class="line">  c( </span><br><span class="line">    <span class="string">"dplyr"</span>, <span class="string">"stringi"</span>, <span class="string">"purrr"</span>, <span class="comment">## ERROR</span></span><br><span class="line">    <span class="string">"R.utils"</span>, <span class="string">"data.table"</span>, <span class="comment">## unzip and read table</span></span><br><span class="line">    <span class="string">"GEOquery"</span>, <span class="comment">## download</span></span><br><span class="line">    <span class="string">"FactoMineR"</span>, <span class="string">"factoextra"</span>, <span class="string">"ggfortify"</span>, <span class="comment">## PCA</span></span><br><span class="line">    <span class="string">"pheatmap"</span>, <span class="comment">## heatmap</span></span><br><span class="line">    <span class="string">"ggplot2"</span>, <span class="comment">## Volcano plot</span></span><br><span class="line">    <span class="string">"limma"</span>, <span class="string">"DESeq2"</span>, <span class="string">"edgeR"</span>, <span class="comment">## DEG</span></span><br><span class="line">    <span class="string">"clusterProfiler"</span>, <span class="string">"org.Hs.eg.db"</span>, <span class="comment">## annotation</span></span><br><span class="line">    <span class="string">"pathview"</span> <span class="comment">## kegg</span></span><br><span class="line">  )</span><br><span class="line"><span class="comment"># Step3 Install the packages ----------------------------------------------</span></span><br><span class="line">lapply( bioPackages, </span><br><span class="line">        <span class="keyword">function</span>(bioPackage) &#123;</span><br><span class="line">          <span class="keyword">if</span> ( !<span class="keyword">require</span>( bioPackage, character.only = <span class="literal">T</span> ) ) &#123;</span><br><span class="line">            CRANpackages &lt;- available.packages()</span><br><span class="line">            </span><br><span class="line">            <span class="comment">## install packages by CRAN</span></span><br><span class="line">            <span class="keyword">if</span> ( bioPackage %<span class="keyword">in</span>% rownames( CRANpackages ) ) &#123;</span><br><span class="line">              install.packages( bioPackage )</span><br><span class="line">              </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              <span class="comment">## install packages by bioconductor</span></span><br><span class="line">              <span class="comment">## R version &gt;= 3.5 ===&gt; BiocManager</span></span><br><span class="line">              <span class="keyword">if</span> ( as.character( sessionInfo()$R.version$minor ) &gt;= <span class="number">3.5</span> ) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!requireNamespace(<span class="string">"BiocManager"</span>, quietly = <span class="literal">TRUE</span>))</span><br><span class="line">                  install.packages(<span class="string">"BiocManager"</span>)</span><br><span class="line">                BiocManager::install(bioPackage, update = <span class="literal">TRUE</span>, ask = <span class="literal">FALSE</span>)</span><br><span class="line">              &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">## R version &lt; 3.5 ===&gt; BiocInstaller</span></span><br><span class="line">                <span class="keyword">if</span> (!requireNamespace(<span class="string">"BiocInstaller"</span>, quietly = <span class="literal">TRUE</span>))</span><br><span class="line">                  <span class="keyword">source</span>( <span class="string">"https://bioconductor.org/biocLite.R"</span> )</span><br><span class="line">                BiocInstaller::biocLite( bioPackage, ask = <span class="literal">FALSE</span>)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R语言数据库操作</title>
      <link href="/hexo/2018/04/11/2018-04-11_Rdatabase/"/>
      <url>/hexo/2018/04/11/2018-04-11_Rdatabase/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="RSQLite"><a href="#RSQLite" class="headerlink" title="RSQLite"></a>RSQLite</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">table_name=<span class="string">"howdo"</span></span><br><span class="line">colNames=c(<span class="string">"weather"</span>,<span class="string">"food"</span>,<span class="string">"size"</span>,<span class="string">"direction"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 1.创建sqlite数据库</span></span><br><span class="line">con&lt;-dbConnect(SQLite(), <span class="string">"test.db"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 2.判断一个表是否存在</span></span><br><span class="line"><span class="keyword">if</span>(!dbExistsTable(con,table_name))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">### 3.写入一个表</span></span><br><span class="line">  table_info=as.data.frame(matrix(character(<span class="number">0</span>),ncol=<span class="number">4</span>),stringsAsFactors = <span class="literal">FALSE</span>)</span><br><span class="line">  colnames(table_info)= colNames</span><br><span class="line">  dbWriteTable(con, table_name, table_info)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">### 4.读表</span></span><br><span class="line">DF=dbReadTable(con, table_name)</span><br><span class="line"><span class="comment">### 5.写表</span></span><br><span class="line">DF=as.data.frame(t(c(<span class="number">1</span>:<span class="number">4</span>)))</span><br><span class="line">colnames(DF)=colNames</span><br><span class="line">dbWriteTable(con,table_name,DF,append = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">DF1=matrix(sample(<span class="number">1</span>:<span class="number">100</span>,<span class="number">12</span>),ncol=<span class="number">4</span>)</span><br><span class="line">colnames(DF1)=colNames</span><br><span class="line">dbWriteTable(con,table_name,DF1,append = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">DF2=dbReadTable(con, table_name)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 6.查询语句</span></span><br><span class="line">query1=paste(<span class="string">"select * from"</span>,shQuote(table_name), <span class="string">"where weather="</span>,shQuote(<span class="number">57</span>),</span><br><span class="line">                     <span class="string">" and food="</span>,shQuote(<span class="number">26</span>))</span><br><span class="line">tmp=dbGetQuery(con,query1)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 7.写入指定单元格</span></span><br><span class="line">query2=paste(<span class="string">"UPDATE"</span>,shQuote(table_name), <span class="string">"SET size="</span>,shQuote(<span class="number">88888</span>), <span class="string">"where weather="</span>,</span><br><span class="line">            shQuote(<span class="number">57</span>),<span class="string">"and food="</span>,shQuote(<span class="number">26</span>))</span><br><span class="line">dbSendQuery(con,query2)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 8.删除records</span></span><br><span class="line">query3=paste(<span class="string">"DELETE FROM"</span>,shQuote(table_name), <span class="string">"where weather="</span>,</span><br><span class="line">            shQuote(<span class="number">57</span>),<span class="string">"and food="</span>,shQuote(<span class="number">26</span>))</span><br><span class="line">dbSendQuery(con,query3)</span><br><span class="line"></span><br><span class="line"><span class="comment">###10.最后断开连接</span></span><br><span class="line">dbDisconnect(con) <span class="comment"># 断开连接</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Python资料汇总</title>
      <link href="/hexo/2017/12/21/2017-12-21_python_all/"/>
      <url>/hexo/2017/12/21/2017-12-21_python_all/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://juejin.im/post/5a3100d76fb9a04500030d06" target="_blank" rel="noopener">原文</a></p><h1 id="Python资料推荐-经典练手项目"><a href="#Python资料推荐-经典练手项目" class="headerlink" title="Python资料推荐 +经典练手项目"></a>Python资料推荐 +经典练手项目</h1><p>今天给大家带来一批宝贝，大家可以在深夜里独自把玩，也可以在广场上一边遛狗一边和盆友们品鉴。</p><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><h4 id="1、入门阶段-The-Python-TutorialPython官方文档，永远是最佳选择"><a href="#1、入门阶段-The-Python-TutorialPython官方文档，永远是最佳选择" class="headerlink" title="1、入门阶段 The Python TutorialPython官方文档，永远是最佳选择"></a>1、入门阶段 <a href="https://link.juejin.im/?target=https%3A%2F%2Fdocs.python.org%2F3.6%2Ftutorial%2Findex.html" target="_blank" rel="noopener">The Python Tutorial</a>Python官方文档，永远是最佳选择</h4><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fdevelopers.google.com%2Fedu%2Fpython%2Fintroduction%3Fhl%3Dzh-CN%26csw%3D1" target="_blank" rel="noopener">Google’s Python Class</a> Google的文档，质量相当高</p><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.runoob.com%2Fpython3%2Fpython3-tutorial.html" target="_blank" rel="noopener">Python3 教程 | 菜鸟教程</a> 如果英文不好，可以参考国内教程</p><p><a href="https://link.juejin.im/?target=https%3A%2F%2Flearnpythonthehardway.org%2Fbook%2F" target="_blank" rel="noopener">Learn Python the Hard Way</a> 最简单的学习 Python 的方法， HTML 在线版是完全免费的</p><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fstudy.163.com%2Fcourse%2Fintroduction%2F378003.htm" target="_blank" rel="noopener">零基础入门学习Python </a>网易云课堂，老师诙谐幽默，上手快</p><h4 id="2、拔高阶段-最好自己动手写一些项目，一定要使用GitHub-Python-精选项目课程-实验楼提供在线编程及在线实训学习平台"><a href="#2、拔高阶段-最好自己动手写一些项目，一定要使用GitHub-Python-精选项目课程-实验楼提供在线编程及在线实训学习平台" class="headerlink" title="2、拔高阶段 最好自己动手写一些项目，一定要使用GitHub Python_精选项目课程 实验楼提供在线编程及在线实训学习平台"></a>2、拔高阶段 最好自己动手写一些项目，一定要使用GitHub <a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.shiyanlou.com%2Fcourses%2F%3Fcategory%3D%25E5%2590%258E%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591%26course_type%3Dall%26tag%3DPython%26fee%3Dall" target="_blank" rel="noopener">Python_精选项目课程</a> 实验楼提供在线编程及在线实训学习平台</h4><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.ziqiangxuetang.com%2Fdjango%2Fdjango-cms-develop.html" target="_blank" rel="noopener">Django 开发内容管理系统</a> 全面的中文教程</p><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.dataquest.io%2F" target="_blank" rel="noopener">Dataquest</a> 提供了一系列和数据分析相关的Python教程</p><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fcuiqingcai.com%2F1052.html" target="_blank" rel="noopener">Python爬虫学习系列教程 | 静觅</a> 静觅的爬虫课程，名气非常大</p><h4 id="3、方向进阶-来到这个时候，最好确立学习的方向。"><a href="#3、方向进阶-来到这个时候，最好确立学习的方向。" class="headerlink" title="3、方向进阶 来到这个时候，最好确立学习的方向。"></a>3、方向进阶 <strong>来到这个时候，最好确立学习的方向。</strong></h4><ul><li>web开发（Django、Flask、Tornado） <a href="https://link.juejin.im/?target=http%3A%2F%2Fpython-web-guide.readthedocs.io%2Fzh%2Flatest%2Findex.html" target="_blank" rel="noopener">python web 入坑指南</a></li><li><strong>数据科学（<a href="https://docs.scipy.org/doc/numpy-1.13.0/genindex.html" target="_blank" rel="noopener">Numpy</a>、Pandas、Matplotlib）</strong> <a href="https://link.juejin.im/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F23229114" target="_blank" rel="noopener">数据科学家的完整学习路径（Python版)</a></li><li><strong>机器学习（scikit-learn）</strong><a href="https://link.juejin.im/?target=http%3A%2F%2Fscikit-learn.org%2Fstable%2F" target="_blank" rel="noopener">英文文档</a>     <a href="http://sklearn.apachecn.org/cn/0.19.0/" target="_blank" rel="noopener">中文文档</a></li><li>深度学习（TensorFlow）<a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.tensorflow.org%2F" target="_blank" rel="noopener">www.tensorflow.org/</a></li><li>网络爬虫（Scrapy）<a href="https://link.juejin.im/?target=https%3A%2F%2Fdocs.scrapy.org%2Fen%2Flatest%2F" target="_blank" rel="noopener">Scrapy 1.4 documentation</a></li></ul><h4 id="4、实战演练-有哪些适合新手练手的Python项目-非常全面的项目，强烈推荐"><a href="#4、实战演练-有哪些适合新手练手的Python项目-非常全面的项目，强烈推荐" class="headerlink" title="4、实战演练 有哪些适合新手练手的Python项目 非常全面的项目，强烈推荐"></a>4、实战演练 <a href="https://link.juejin.im/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F22164270" target="_blank" rel="noopener">有哪些适合新手练手的Python项目</a> 非常全面的项目，强烈推荐</h4><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.liaoxuefeng.com%2Fwiki%2F0014316089557264a6b348958f449949df42a6d3a2e542c000%2F001432170876125c96f6cc10717484baea0c6da9bee2be4000" target="_blank" rel="noopener">实战</a> 廖雪峰老师的教程，非常经典，可以当做Python的百科全书来参考</p><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.oschina.net%2Fproject%2Flang%2F25%2Fpython%3Fcompany%3D0%26sort%3Dtime%26lang%3D25%26recommend%3Dfalse" target="_blank" rel="noopener">Python开源软件 </a>开源中国社区的项目合集</p><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fkaran%2FProjects" target="_blank" rel="noopener">karan/Projects</a> Python项目合集</p><p><a href="https://link.juejin.im/?target=https%3A%2F%2F123.w3cschool.cn%2Fpython_projects" target="_blank" rel="noopener">Python项目_W3Cschool极客导航</a>  不仅有web开发，还有爬虫相关</p><h4 id="5、-博客列表"><a href="#5、-博客列表" class="headerlink" title="5、 博客列表"></a>5、 博客列表</h4><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.liaoxuefeng.com%2F" target="_blank" rel="noopener">廖雪峰的官方网站</a> 研究互联网产品和技术，提供原创中文精品教程</p><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.cnblogs.com%2Ffnng%2F" target="_blank" rel="noopener">虫师 </a> 关于Python自动化方面的一位大牛</p><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fwww.lining0806.com%2Fhomepage%2F" target="_blank" rel="noopener">宁哥的小站</a> Python网络爬虫和机器学习</p><p><a href="https://link.juejin.im/?target=http%3A%2F%2Fcuiqingcai.com%2F" target="_blank" rel="noopener">静觅</a> 崔庆才的个人网站，在爬虫方面造诣很深</p><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fdoughellmann.com%2Fblog%2F" target="_blank" rel="noopener">Python, OpenStack</a> 博客里面包含了很多python library的知识</p><p><a href="https://link.juejin.im/?target=https%3A%2F%2Fwww.zhihu.com%2F" target="_blank" rel="noopener">知乎 - 与世界分享你的知识、经验和见解</a>  隐藏着各种Python大神</p><h2 id="经典入门及第三方库"><a href="#经典入门及第三方库" class="headerlink" title="经典入门及第三方库"></a>经典入门及第三方库</h2><ul><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fvinta%2Fawesome-python" target="_blank" rel="noopener">vinta/awesome-python</a> 精心设计的Python学习框架，书籍和软件</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fnvbn%2Fthefuck" target="_blank" rel="noopener">nvbn/thefuck</a> 华丽的应用程序更正您以前的控制台命令</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fpallets%2Fflask" target="_blank" rel="noopener">pallets/flask</a>、<a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fdjango%2Fdjango" target="_blank" rel="noopener">django/django</a> Python的web框架</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Frequests%2Frequests" target="_blank" rel="noopener">requests/requests</a> 强大的库，相信你一定学过</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fipython%2Fipython" target="_blank" rel="noopener">ipython/ipython</a> 生产性交互式计算系统</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fpython%2Fcpython" target="_blank" rel="noopener">python/cpython</a> Python编程语言官方文档</li></ul><h2 id="好玩的项目"><a href="#好玩的项目" class="headerlink" title="好玩的项目"></a><strong>好玩的项目</strong></h2><ul><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fwarner%2Fmagic-wormhole" target="_blank" rel="noopener">warner/magic-wormhole</a> 把文件从一台电脑安全地复制到另一台</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fpyvideo%2Fpyvideo" target="_blank" rel="noopener">pyvideo/pyvideo</a> 和Python相关的视频</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2F7sDream%2Fzhihu-oauth" target="_blank" rel="noopener">7sDream/zhihu-oauth</a> 知乎官方未开放的 OAuth2 接口</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Ferrbotio%2Ferrbot" target="_blank" rel="noopener">errbotio/errbot</a> 最简单和最流行的聊天机器人</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Ffogleman%2FMinecraft" target="_blank" rel="noopener">fogleman/Minecraft</a> 用Python写的我的世界</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fmopidy%2Fmopidy" target="_blank" rel="noopener">mopidy/mopidy</a> 一个可扩展的音乐服务器</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FEloston%2Fungoogled-chromium" target="_blank" rel="noopener">Eloston/ungoogled-chromium</a> 可以修改Google Chromium组件</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Flivid%2Fv2ex" target="_blank" rel="noopener">livid/v2ex</a> 在Google App Engine上运行的社区</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Foverviewer%2FMinecraft-Overviewer" target="_blank" rel="noopener">overviewer/Minecraft-Overviewer</a> 展示高分辨率地图</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fcharlierguo%2Fgmail" target="_blank" rel="noopener">charlierguo/gmail</a> Google Mail的Pythonic界面</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fegirault%2Fgoogleplay-api" target="_blank" rel="noopener">egirault/googleplay-api</a> Google Play非官方的Python API</li></ul><h2 id="网络爬虫"><a href="#网络爬虫" class="headerlink" title="网络爬虫"></a><strong>网络爬虫</strong></h2><ul><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FLiuXingMing%2FSinaSpider" target="_blank" rel="noopener">LiuXingMing/SinaSpider</a> 新浪微博爬虫（Scrapy、Redis）</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fbinux%2Fpyspider" target="_blank" rel="noopener">binux/pyspider</a> Python中强大的网络爬虫系统</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fbowenpay%2Fwechat-spider" target="_blank" rel="noopener">bowenpay/wechat-spider</a> 微信公众号爬虫</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fjhao104%2Fproxy_pool" target="_blank" rel="noopener">jhao104/proxy_pool</a> Python爬虫代理IP池(proxy pool)</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fsmicallef%2Fspiderfoot" target="_blank" rel="noopener">smicallef/spiderfoot</a> SpiderFoot，开源脚印和情报收集工具。</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Flining0806%2FPythonSpiderNotes" target="_blank" rel="noopener">lining0806/PythonSpiderNotes</a> Python入门网络爬虫之精华版</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FGermey%2FZhihu" target="_blank" rel="noopener">Germey/Zhihu</a> 崔庆才博主写的知乎爬虫</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fgnemoug%2Fdistribute_crawler" target="_blank" rel="noopener">gnemoug/distribute_crawler</a> 分布式网络爬虫</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FChyroc%2FWechatSogou" target="_blank" rel="noopener">Chyroc/</a>基于搜狗微信搜索的微信公众号爬虫接口</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FResolveWang%2Fweibospider" target="_blank" rel="noopener">ResolveWang/weibospider</a> 分布式微博爬虫(PC端抓取)</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fairingursb%2Fbilibili-user" target="_blank" rel="noopener">airingursb/bilibili-user</a>  Bilibili用户爬虫</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fyanzhou%2FCnkiSpider" target="_blank" rel="noopener">yanzhou/CnkiSpider</a> 中国知网爬虫</li></ul><h2 id="数据相关"><a href="#数据相关" class="headerlink" title="数据相关"></a><strong>数据相关</strong></h2><ul><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fdonnemartin%2Fdata-science-ipython-notebooks" target="_blank" rel="noopener">donnemartin/data-science-ipython-notebooks</a> 综合型的数据科学教程</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fsqlmapproject%2Fsqlmap" target="_blank" rel="noopener">sqlmapproject/sqlmap</a> 自动SQL注入和数据库接管工具</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fmitmproxy%2Fmitmproxy" target="_blank" rel="noopener">mitmproxy/mitmproxy</a> 针对渗透测试员和软件开发人员的交互式TLS功能拦截HTTP代理</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Frushter%2Fdata-science-blogs" target="_blank" rel="noopener">rushter/data-science-blogs</a> 很多数据科学的博客</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fujjwalkarn%2FDataSciencePython" target="_blank" rel="noopener">ujjwalkarn/DataSciencePython</a> 通用数据分析和机器学习任务</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fjustmarkham%2FDAT3" target="_blank" rel="noopener">justmarkham/DAT3</a> 华盛顿的大数据课程</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fbillryan%2Falgorithm-exercise" target="_blank" rel="noopener">billryan/algorithm-exercise</a> leetcode/lintcode题解</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fbitly%2Fdata_hacks" target="_blank" rel="noopener">bitly/data_hacks</a> 使用命令行进行数据分析</li></ul><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a><strong>机器学习</strong></h2><ul><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FMorvanZhou%2Ftutorials" target="_blank" rel="noopener">MorvanZhou/tutorials</a> 机器学习相关教程</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fahangchen%2FGDLnotes" target="_blank" rel="noopener">ahangchen/GDLnotes</a> 谷歌深度学习笔记</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Ftensorflow%2Fmodels" target="_blank" rel="noopener">tensorflow/models</a> 使用TensorFlow构建模型</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fastorfi%2FTensorFlow-World" target="_blank" rel="noopener">astorfi/TensorFlow-World</a> TensorFlow的简单和现成的教程</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Ffchollet%2Fkeras" target="_blank" rel="noopener">fchollet/keras</a> Python深度学习库，运行在TensorFlow，Theano或CNTK</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fjosephmisiti%2Fawesome-machine-learning" target="_blank" rel="noopener">josephmisiti/awesome-machine-learning</a> 精心设计的机器学习框架，书籍和软件</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fsongrotek%2FDeep-Learning-Papers-Reading-Roadmap" target="_blank" rel="noopener">songrotek/Deep-Learning-Papers-Reading-Roadmap</a> 深度学习论文阅读路线图</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FMLWave%2FKaggle-Ensemble-Guide" target="_blank" rel="noopener">MLWave/Kaggle-Ensemble-Guide</a>  Kaggle组合指南的代码</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Feriklindernoren%2FML-From-Scratch" target="_blank" rel="noopener">eriklindernoren/ML-From-Scratch</a> 机器学习模型和算法</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fhumphd%2Fhave-fun-with-machine-learning" target="_blank" rel="noopener">humphd/have-fun-with-machine-learning</a> 机器学习与神经网络图像分类的初学者指南</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Farielf%2Fweight-loss" target="_blank" rel="noopener">arielf/weight-loss</a> 机器学习符合酮症：如何有效减肥</li><li><a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fluispedro%2FBuildingMachineLearningSystemsWithPython" target="_blank" rel="noopener">luispedro/BuildingMachineLearning</a> 本书用Python构建机器学习系统的源代码</li></ul><hr><h1 id="Comprehensive-learning-path-–-Data-Science-in-Python"><a href="#Comprehensive-learning-path-–-Data-Science-in-Python" class="headerlink" title="Comprehensive learning path – Data Science in Python"></a><a href="https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/" target="_blank" rel="noopener">Comprehensive learning path – Data Science in Python</a></h1><h3 id="Journey-from-a-Python-noob-to-a-Kaggler-on-Python"><a href="#Journey-from-a-Python-noob-to-a-Kaggler-on-Python" class="headerlink" title="Journey from a Python noob to a Kaggler on Python"></a><strong>Journey from a Python noob to a Kaggler on Python</strong></h3><p>So, you want to become a data scientist or may be you are already one and want to expand your tool repository. You have landed at the right place. The aim of this page is to provide a comprehensive learning path to people new to python for data analysis. This path provides a comprehensive overview of steps you need to learn to use Python for data analysis. If you already have some background, or don’t need all the components, feel free to adapt your own paths and let us know how you made changes in the path.</p><p>You can also check the mini version of this learning path –&gt; <a href="https://www.analyticsvidhya.com/blog/2015/05/infographic-quick-guide-learn-python-data-science/" target="_blank" rel="noopener">Infographic: Quick Guide to learn Data Science in Python</a></p><h3 id="Step-0-Warming-up"><a href="#Step-0-Warming-up" class="headerlink" title="Step 0: Warming up"></a><strong>Step 0: Warming up</strong></h3><p>Before starting your journey, the first question to answer is:</p><p>Why use Python?</p><p>or</p><p>How would Python be useful?</p><p>Watch the first 30 minutes of this <a href="https://www.youtube.com/watch?v=CoxjADZHUQA" target="_blank" rel="noopener">talk from Jeremy</a>, Founder of DataRobot at PyCon 2014, Ukraine to get an idea of how useful Python could be.</p><h3 id="Step-1-Setting-up-your-machine"><a href="#Step-1-Setting-up-your-machine" class="headerlink" title="Step 1: Setting up your machine"></a><strong>Step 1: Setting up your machine</strong></h3><p>Now that you have made up your mind, it is time to set up your machine. The easiest way to proceed is to just <a href="https://store.continuum.io/cshop/anaconda/" target="_blank" rel="noopener">download Anaconda</a> from Continuum.io . It comes packaged with most of the things you will need ever. The major downside of taking this route is that you will need to wait for Continuum to update their packages, even when there might be an update available to the underlying libraries. If you are a starter, that should hardly matter.</p><p>If you face any challenges in installing, you can find more <a href="http://www.datarobot.com/blog/getting-up-and-running-with-python/" target="_blank" rel="noopener">detailed instructions for various OS</a> here</p><h3 id="Step-2-Learn-the-basics-of-Python-language"><a href="#Step-2-Learn-the-basics-of-Python-language" class="headerlink" title="Step 2: Learn the basics of Python language"></a><strong>Step 2: Learn the basics of Python language</strong></h3><p>You should start by understanding the basics of the language, libraries and data structure. The free <a href="https://www.datacamp.com/courses/intro-to-python-for-data-science" target="_blank" rel="noopener">interactive Python tutorial by DataCamp</a> is one of the best places to start your journey. This 4 hour coding course focuses on how to get started with Python for data science and by the end you should be comfortable with the basic concepts of the language.</p><p><strong>Specifically learn:</strong> Lists, Tuples, Dictionaries, List comprehensions, Dictionary comprehensions </p><p><strong>Assignment:</strong> Take the <a href="https://www.datacamp.com/courses/intro-to-python-for-data-science" target="_blank" rel="noopener">interactive Python tutorial by DataCamp</a></p><p><strong>Alternate resources:</strong> If interactive coding is not your style of learning, you can also look at The <a href="https://developers.google.com/edu/python/" target="_blank" rel="noopener">Google Class for Python</a>. It is a 2 day class series and also covers some of the parts discussed later.</p><h3 id="Step-3-Learn-Regular-Expressions-in-Python"><a href="#Step-3-Learn-Regular-Expressions-in-Python" class="headerlink" title="Step 3: Learn Regular Expressions in Python"></a><strong>Step 3: Learn Regular Expressions in Python</strong></h3><p>You will need to use them a lot for data cleansing, especially if you are working on text data. The best way to<a href="https://developers.google.com/edu/python/regular-expressions" target="_blank" rel="noopener"> learn Regular expressions</a> is to go through the Google class and keep this <a href="https://www.debuggex.com/cheatsheet/regex/python" target="_blank" rel="noopener">cheat sheet</a> handy.</p><p><strong>Assignment:</strong> Do the <a href="https://developers.google.com/edu/python/exercises/baby-names" target="_blank" rel="noopener">baby names exercise</a></p><p>If you still need more practice, follow this <a href="https://www.analyticsvidhya.com/blog/2014/11/text-data-cleaning-steps-python/" target="_blank" rel="noopener">tutorial for text cleaning</a>. It will challenge you on various steps involved in data wrangling.</p><h3 id="Step-4-Learn-Scientific-libraries-in-Python-–-NumPy-SciPy-Matplotlib-and-Pandas"><a href="#Step-4-Learn-Scientific-libraries-in-Python-–-NumPy-SciPy-Matplotlib-and-Pandas" class="headerlink" title="Step 4: Learn Scientific libraries in Python – NumPy, SciPy, Matplotlib and Pandas"></a><strong>Step 4: Learn Scientific libraries in Python – NumPy, SciPy, Matplotlib and Pandas</strong></h3><p>This is where fun begins! Here is a brief introduction to various libraries. Let’s start practicing some common operations.</p><ul><li>Practice the <a href="http://wiki.scipy.org/Tentative_NumPy_Tutorial" target="_blank" rel="noopener">NumPy tutorial</a> thoroughly, especially NumPy arrays. This will form a good foundation for things to come.</li><li>Next, look at the <a href="http://docs.scipy.org/doc/scipy/reference/tutorial/" target="_blank" rel="noopener">SciPy tutorials</a>. Go through the introduction and the basics and do the remaining ones basis your needs.</li><li>If you guessed Matplotlib tutorials next, you are wrong! They are too comprehensive for our need here. Instead look at this <a href="http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-4-Matplotlib.ipynb" target="_blank" rel="noopener">ipython notebook</a> till Line 68 (i.e. till animations)</li><li>Finally, let us look at Pandas. Pandas provide DataFrame functionality (like R) for Python. This is also where you should spend good time practicing. Pandas would become the most effective tool for all mid-size data analysis. Start with a short introduction, <a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" target="_blank" rel="noopener">10 minutes to pandas</a>. Then move on to a more detailed <a href="http://www.gregreda.com/2013/10/26/intro-to-pandas-data-structures/" target="_blank" rel="noopener">tutorial on pandas</a>.</li><li>Check out DataCamp’s course on <a href="https://www.datacamp.com/courses/pandas-foundations" target="_blank" rel="noopener">Pandas Foundations</a></li></ul><p>You can also look at <a href="https://www.analyticsvidhya.com/blog/2014/08/baby-steps-python-performing-exploratory-analysis-python/" target="_blank" rel="noopener">Exploratory Data Analysis with Pandas</a> and <a href="https://www.analyticsvidhya.com/blog/2014/09/data-munging-python-using-pandas-baby-steps-python/" target="_blank" rel="noopener">Data munging with Pandas</a></p><p><strong>Additional Resources:</strong></p><ul><li>If you need a book on Pandas and NumPy, “<a href="http://www.amazon.com/Python-Data-Analysis-Wrangling-IPython/dp/1449319793" target="_blank" rel="noopener">Python for Data Analysis</a> by Wes McKinney”</li><li>There are a lot of tutorials as part of Pandas documentation. You can have a look at them <a href="http://pandas.pydata.org/pandas-docs/stable/tutorials.html" target="_blank" rel="noopener">here</a></li></ul><p><strong>Assignment:</strong> Solve this <a href="http://nbviewer.ipython.org/github/cs109/2014/blob/master/homework/HW1.ipynb" target="_blank" rel="noopener">assignment from CS109 course</a> from Harvard.</p><h3 id="Step-5-Effective-Data-Visualization"><a href="#Step-5-Effective-Data-Visualization" class="headerlink" title="Step 5: Effective Data Visualization"></a><strong>Step 5: Effective Data Visualization</strong></h3><p>Go through this <a href="http://cm.dce.harvard.edu/2015/01/14328/L03/screen_H264LargeTalkingHead-16x9.shtml" target="_blank" rel="noopener">lecture form CS109</a>. You can ignore the initial 2 minutes, but what follows after that is awesome! Follow this lecture up with <a href="http://nbviewer.ipython.org/github/cs109/2014/blob/master/homework/HW2.ipynb" target="_blank" rel="noopener">this assignment</a></p><p>Check out <a href="https://www.datacamp.com/courses/interactive-data-visualization-with-bokeh" target="_blank" rel="noopener">Bokeh Data Visualization</a> Tutorial from DataCamp</p><h3 id="Step-6-Learn-Scikit-learn-and-Machine-Learning"><a href="#Step-6-Learn-Scikit-learn-and-Machine-Learning" class="headerlink" title="Step 6: Learn Scikit-learn and Machine Learning"></a><strong>Step 6: Learn Scikit-learn and Machine Learning</strong></h3><p>Now, we come to the meat of this entire process. Scikit-learn is the most useful library on python for machine learning. Here is a <a href="https://www.analyticsvidhya.com/blog/2015/01/scikit-learn-python-machine-learning-tool/" target="_blank" rel="noopener">brief overview of the library</a>. Go through lecture 10 to lecture 18 from <a href="http://cs109.github.io/2014/pages/schedule.html" target="_blank" rel="noopener">CS109 course from Harvard</a>. You will go through an overview of machine learning, Supervised learning algorithms like regressions, decision trees, ensemble modeling and non-supervised learning algorithms like clustering. Follow individual lectures with the <a href="http://cs109.github.io/2014/pages/homework.html" target="_blank" rel="noopener">assignments</a> from those lectures.</p><p><strong>Additional Resources:</strong></p><ul><li>If there is one book, you must read, it is <a href="http://www.amazon.com/Programming-Collective-Intelligence-Building-Applications/dp/0596529325" target="_blank" rel="noopener">Programming Collective Intelligence</a> – a classic, but still one of the best books on the subject.</li><li>Additionally, you can also follow one of the best courses on <a href="https://www.edx.org/course/learning-data-caltechx-cs1156x" target="_blank" rel="noopener">Machine Learning course from Yaser Abu-Mostafa</a>. If you need more lucid explanation for the techniques, you can opt for the <a href="https://www.coursera.org/course/ml" target="_blank" rel="noopener">Machine learning course from Andrew Ng</a>and follow the exercises on Python.</li><li>Tutorials on Scikit learn</li></ul><p><strong>Assignment:</strong> Try out this <a href="http://www.kaggle.com/c/data-science-london-scikit-learn" target="_blank" rel="noopener">challenge</a> on Kaggle</p><h3 id="Step-7-Practice-practice-and-Practice"><a href="#Step-7-Practice-practice-and-Practice" class="headerlink" title="Step 7: Practice, practice and Practice"></a><strong>Step 7: Practice, practice and Practice</strong></h3><p>Congratulations, you made it!</p><p>You now have all what you need in technical skills. It is a matter of practice and what better place to practice than compete with fellow Data Scientists on Kaggle. Go, dive into one of the live competitions currently running on <a href="http://www.kaggle.com/" target="_blank" rel="noopener">Kaggle</a> and give all what you have learnt a try!</p><h3 id="Step-8-Deep-Learning"><a href="#Step-8-Deep-Learning" class="headerlink" title="Step 8: Deep Learning"></a><strong>Step 8: Deep Learning</strong></h3><p>Now that you have learnt most of machine learning techniques, it is time to give Deep Learning a shot. There is a good chance that you already know what is Deep Learning, but if you still need a brief intro, <a href="https://www.analyticsvidhya.com/blog/2014/06/deep-learning-attention/" target="_blank" rel="noopener">here</a> it is.</p><p>I am myself new to deep learning, so please take these suggestions with a pinch of salt. The most comprehensive resource is <a href="http://deeplearning.net/" target="_blank" rel="noopener">deeplearning.net</a>. You will find everything here – lectures, datasets, challenges, tutorials. You can also try the <a href="https://www.coursera.org/course/neuralnets" target="_blank" rel="noopener">course from Geoff Hinton</a> a try in a bid to understand the basics of Neural Networks.</p><p><strong>Get Started with Python:</strong> <a href="https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/" target="_blank" rel="noopener">A Complete Tutorial To Learn Data Science with Python From Scratch</a></p><p><strong>P.S. In case you need to use Big Data libraries, give Pydoop and PyMongo a try. They are not included here as Big Data learning path is an entire topic in itself.</strong></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>python—sklearn学习</title>
      <link href="/hexo/2017/12/21/2017-12-21_python_sklearn/"/>
      <url>/hexo/2017/12/21/2017-12-21_python_sklearn/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>学习记录</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>python基本知识</title>
      <link href="/hexo/2017/12/21/2017-12-21_python_study/"/>
      <url>/hexo/2017/12/21/2017-12-21_python_study/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://www.runoob.com/python/python-tutorial.html" target="_blank" rel="noopener">入门教程</a>   <a href="http://study.163.com/course/courseMain.htm?courseId=378003" target="_blank" rel="noopener">视频教程</a></p><h2 id="python-IDE环境配置"><a href="#python-IDE环境配置" class="headerlink" title="python IDE环境配置"></a>python IDE环境配置</h2><p><code>环境配置</code> <strong>pycharm+ anaconda</strong></p><p>anaconda安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Install Anaconda: I installed <span class="keyword">in</span> the root location of E directly</span><br><span class="line"> choose both <span class="string">"Add anaconda to my PATH"</span> <span class="keyword">and</span> <span class="string">"Register Anaconda as my default...）</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 或者在win10下添加环境变量</span></span><br><span class="line"><span class="string">F:\Anaconda3</span></span><br><span class="line"><span class="string">F:\Anaconda3\Scripts</span></span><br><span class="line"><span class="string">F:\Anaconda3\Library\bin</span></span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装anaconda之后 在 windows cmd 命令行创建python解释器</span></span><br><span class="line">conda create -n py_27 <span class="attribute">python</span>=2.7 <span class="keyword">or</span>  conda create -n py_36 <span class="attribute">python</span>=3.6</span><br><span class="line"><span class="comment"># 在cmd命令行激活python解释器</span></span><br><span class="line">activeate py_27</span><br><span class="line"><span class="comment"># 查看该解释器已经安装的包或者安装新的包</span></span><br><span class="line">conda list</span><br></pre></td></tr></table></figure><h2 id="pycharm使用技巧-快捷键"><a href="#pycharm使用技巧-快捷键" class="headerlink" title="pycharm使用技巧(快捷键)"></a>pycharm使用技巧(快捷键)</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Q (View | Quick Documentation) <span class="comment">#快速查看函数说明文档</span></span><br><span class="line">Ctrl+P (View | Parameter Info) <span class="comment">#</span></span><br><span class="line">Ctrl+B (Navigate | Declaration) <span class="comment">#打开函数定义文件</span></span><br><span class="line">can be used <span class="keyword">not</span> only <span class="keyword">in</span> <span class="keyword">the</span> editor <span class="keyword">but</span> <span class="keyword">in</span> <span class="keyword">the</span> code completion popup <span class="built_in">list</span> <span class="keyword">as</span> well.</span><br></pre></td></tr></table></figure><h2 id="Jupyter-Notebooks"><a href="#Jupyter-Notebooks" class="headerlink" title="Jupyter Notebooks"></a>Jupyter Notebooks</h2><blockquote><p>Jupyter Notebooks提供了一个环境，你无需离开这个环境，就可以在其中编写你的代码、运行代码、查看输出、可视化数据并查看结果。因此，这是一款可执行端到端的数据科学工作流程的便捷工具，其中包括数据清理、统计建模、构建和训练机器学习模型、可视化数据等等.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Anaconda之后自动安装Jupyter Notebooks</span></span><br><span class="line"><span class="comment"># windows 命令行输入 就会在你的默认网络浏览器打开（http://localhost:8888/tree）</span></span><br><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><hr><h2 id="python-函数查询"><a href="#python-函数查询" class="headerlink" title="python 函数查询"></a>python 函数查询</h2><p><strong>1. 查看模块下所有函数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dir(module_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line">dir(datasets)</span><br><span class="line"></span><br><span class="line">[<span class="string">'__all__'</span>, <span class="string">'__builtins__'</span>, <span class="string">'__cached__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__file__'</span>, <span class="string">'__loader__'</span>, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__path__'</span>, <span class="string">'__spec__'</span>, <span class="string">'_svmlight_format'</span>, <span class="string">'base'</span>, <span class="string">'california_housing'</span>, <span class="string">'clear_data_home'</span>, <span class="string">'covtype'</span>, <span class="string">'dump_svmlight_file'</span>, <span class="string">'fetch_20newsgroups'</span>, <span class="string">'fetch_20newsgroups_vectorized'</span>, <span class="string">'fetch_california_housing'</span>, ...<span class="string">']</span></span><br></pre></td></tr></table></figure><p><strong>2. 查看模块下特定函数信息</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：</span></span><br><span class="line">help(datasets.load_iris)</span><br><span class="line"><span class="comment">#方法二：</span></span><br><span class="line">print(datasets.load_iris.__doc__)</span><br><span class="line"></span><br><span class="line">Help on function load_iris <span class="keyword">in</span> module sklearn.datasets.base:</span><br><span class="line">load_iris(return_X_y=<span class="keyword">False</span>)</span><br><span class="line">    Load <span class="keyword">and</span> <span class="keyword">return</span> the iris dataset (classification).</span><br><span class="line">    </span><br><span class="line">    The iris dataset <span class="keyword">is</span> a classic <span class="keyword">and</span> very easy multi-<span class="class"><span class="keyword">class</span> <span class="title">classification</span></span></span><br><span class="line"><span class="class">    <span class="title">dataset</span>.</span></span><br><span class="line">    =================   ==============</span><br><span class="line">    Classes                          <span class="number">3</span></span><br><span class="line">    Samples per <span class="class"><span class="keyword">class</span>               50</span></span><br><span class="line"><span class="class">    <span class="title">Samples</span> <span class="title">total</span>                  150</span></span><br><span class="line"><span class="class">    <span class="title">Dimensionality</span>                   4</span></span><br><span class="line">    Features            real, positive</span><br><span class="line">    =================   ==============</span><br></pre></td></tr></table></figure><hr><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="1-认识python"><a href="#1-认识python" class="headerlink" title="1. 认识python"></a>1. 认识python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#实例(Python 2.0+)</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"Hello, World!"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#实例(Python 3.0+)</span></span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line">print(<span class="string">"Hello, World!"</span>);</span><br></pre></td></tr></table></figure><h2 id="2-python-脚本"><a href="#2-python-脚本" class="headerlink" title="2. python 脚本"></a>2. python 脚本</h2><p>所有 Python 文件将以 .py 为扩展名。用 $ python *.py 执行脚本。</p><h2 id="3-python语法"><a href="#3-python语法" class="headerlink" title="3. python语法"></a>3. python语法</h2><p>Python 的代码块不使用大括号 {} 来控制类，函数以及其他逻辑判断。python 最具特色的就是用缩进来写模块。缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">True</span>:</span><br><span class="line">  <span class="keyword">print</span> <span class="string">"True"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="keyword">print</span> <span class="string">"False"</span></span><br></pre></td></tr></table></figure><h3 id="3-0-变量定义"><a href="#3-0-变量定义" class="headerlink" title="3.0 变量定义"></a>3.0 变量定义</h3><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="comment">## 特殊用法</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 1. 矩阵A的转置 A.T</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><strong>__call__</strong></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">变量:</span><br><span class="line"><span class="number">1.</span>  前带<span class="keyword">_</span>的变量:  标明是一个私有变量, 只用于标明, 外部类还是可以访问到这个变量</span><br><span class="line"><span class="number">2.</span>  前带两个<span class="keyword">_</span> ,后带两个<span class="keyword">_</span> 的变量:  标明是内置变量,</span><br><span class="line"><span class="number">3.</span>  大写加下划线的变量:  标明是不会发生改变的全局变量</span><br><span class="line"></span><br><span class="line">函数:</span><br><span class="line"><span class="number">1.</span> 前带<span class="keyword">_</span>的变量: 标明是一个私有函数, 只用于标明,</span><br><span class="line"><span class="number">2.</span>  前带两个<span class="keyword">_</span> ,后带两个<span class="keyword">_</span> 的函数:  标明是特殊函数</span><br></pre></td></tr></table></figure><h3 id="3-1-python-类对象"><a href="#3-1-python-类对象" class="headerlink" title="3.1 python 类对象"></a>3.1 python 类对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__init__() 类对象的初始化函数</span><br></pre></td></tr></table></figure><h3 id="3-2-python函数"><a href="#3-2-python函数" class="headerlink" title="3.2 python函数"></a>3.2 python函数</h3><p>语法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionname</span><span class="params">( parameters )</span>:</span></span><br><span class="line">   <span class="string">"函数_文档字符串"</span></span><br><span class="line">   function_suite</span><br><span class="line">   <span class="keyword">return</span> [expression]</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#示例</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printme</span><span class="params">( str )</span>:</span></span><br><span class="line">   <span class="string">"打印任何传入的字符串"</span></span><br><span class="line">   <span class="keyword">print</span> str;</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">printme(<span class="string">"我要调用用户自定义函数!"</span>);</span><br><span class="line">printme(<span class="string">"再次调用同一函数"</span>);</span><br></pre></td></tr></table></figure><h3 id="3-2-Python-模块"><a href="#3-2-Python-模块" class="headerlink" title="3.2 Python 模块"></a>3.2 Python 模块</h3><p>Python 模块(Module)，是一个 Python 文件，以 .py 结尾，包含了 Python 对象定义和Python语句。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义support.py 模块：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_func</span><span class="params">( par )</span>:</span></span><br><span class="line">   <span class="keyword">print</span> <span class="string">"Hello : "</span>, par</span><br><span class="line">   <span class="keyword">return</span></span><br></pre></td></tr></table></figure><p><strong>模块的引入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> support</span><br><span class="line"><span class="comment"># 现在可以调用模块里包含的函数了</span></span><br><span class="line"><span class="comment"># 调用方法：模块名.函数名</span></span><br><span class="line">support.print_func(<span class="string">"Runoob"</span>)</span><br></pre></td></tr></table></figure><p> <strong>From…import 语句</strong></p><p>Python 的 from 语句让你从模块中导入一个指定的部分到当前命名空间中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fib <span class="keyword">import</span> fibonacci</span><br></pre></td></tr></table></figure><h3 id="3-3-常用语句"><a href="#3-3-常用语句" class="headerlink" title="3.3 常用语句"></a>3.3 常用语句</h3><p> <strong>读文件</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">'/path/to/file'</span>, <span class="string">'r'</span>)</span><br><span class="line">    print(f.read())</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#with语句来自动帮我们调用close()方法</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'/path/to/file'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read())</span><br></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">for</span> <span class="built_in">line</span> in f.readlines():</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">line</span>.strip()) # 把末尾的<span class="string">'\n'</span>删掉</span><br></pre></td></tr></table></figure><p> <strong>写文件</strong></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'/Users/michael/test.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.<span class="built_in">write</span>(<span class="string">'Hello, world!'</span>)</span><br></pre></td></tr></table></figure><h3 id="3-4-常规语法"><a href="#3-4-常规语法" class="headerlink" title="3.4  常规语法"></a>3.4  常规语法</h3><p><strong>import</strong></p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">from</span>...<span class="keyword">import</span></span><br><span class="line">如 from <span class="type">A</span> <span class="keyword">import</span> b,相当于</span><br><span class="line"><span class="keyword">import</span> A</span><br><span class="line"><span class="title">b</span>=<span class="type">A</span>.b</span><br><span class="line">在此过程中有一个隐含的赋值的过程</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> A <span class="keyword">as</span> B,给予A库一个B的别称，帮助记忆</span><br></pre></td></tr></table></figure><p><strong>原始字符串</strong><br><code>在单引号或者双引号 前面加一个字符 r</code></p><p><strong>运算符</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">10</span></span><br><span class="line">a+=<span class="number">1</span>  等价于 a=a+<span class="number">1</span>=<span class="number">11</span></span><br><span class="line"></span><br><span class="line">/  除法</span><br><span class="line"><span class="comment">// 除法取整</span></span><br><span class="line">% 取余</span><br><span class="line">** 幂运算  <span class="number">3</span>**<span class="number">2</span>=<span class="number">9</span></span><br></pre></td></tr></table></figure><p><strong>三元操作符</strong>  small =x if x &lt;y else y 条件真为x, 假为y</p><p><strong>断言</strong>   assert 3&gt;4</p><p><strong>循环</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. <span class="keyword">for</span> </span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">8</span>):  注意冒号</span><br></pre></td></tr></table></figure></p><p><strong>break</strong>跳出当前循环</p><p><strong>continue</strong> 终止本轮循环，开启下一轮循环（如果循环条件为真）</p><p><strong>range()函数</strong></p><p>range([start,]stop[,step=1])</p><p>list(range(5))</p><p><strong>列表</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">menber=[<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>] 单一类型列表</span><br><span class="line">mix=[<span class="number">1</span>,<span class="string">"a"</span>,<span class="number">3.14</span>,[<span class="selector-tag">a</span>,<span class="selector-tag">b</span>,c]] 混合类型列表</span><br><span class="line"></span><br><span class="line">empty=[]    创建空列表</span><br><span class="line">empty.append(<span class="string">"小甲鱼"</span>)  向列表添加单一元素</span><br><span class="line">empty.extend([<span class="selector-tag">a</span>,b])     向列表添加另外一个列表</span><br><span class="line">empty.insert(<span class="number">0</span>,<span class="string">"牡丹"</span>)</span><br><span class="line">empty.remove(<span class="string">"牡丹"</span>)</span><br><span class="line"><span class="selector-tag">del</span> empty 删除</span><br><span class="line"><span class="function"><span class="title">pop</span><span class="params">()</span></span>从列表中删除最后一个元素并弹出</span><br></pre></td></tr></table></figure></p><p><strong>操作符</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">列表比较大小 只比较第一个元素</span><br></pre></td></tr></table></figure></p><h1 id="Python特殊语法：filter、map、reduce、lambda"><a href="#Python特殊语法：filter、map、reduce、lambda" class="headerlink" title="Python特殊语法：filter、map、reduce、lambda"></a>Python特殊语法：filter、map、reduce、lambda</h1><p><strong>1.lambda</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">这是Python支持一种有趣的语法，它允许你快速定义单行的最小函数，类似与C语言中的宏，这些叫做<span class="keyword">lambda</span>的函数，是从LISP借用来的，可以用在任何需要函数的地方： </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = <span class="keyword">lambda</span> x: x * <span class="number">2</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g(<span class="number">3</span>) </span><br><span class="line"><span class="number">6</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="keyword">lambda</span> x: x * <span class="number">2</span>)(<span class="number">3</span>) </span><br><span class="line"><span class="number">6</span></span><br><span class="line">---</span><br><span class="line"><span class="keyword">lambda</span>表达式返回一个函数对象</span><br><span class="line">例子：</span><br><span class="line">func = <span class="keyword">lambda</span> x,y:x+y</span><br><span class="line">func相当于下面这个函数</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line"> </span><br><span class="line">注意def是语句而lambda是表达式,下面这种情况下就只能用lambda而不能用def</span><br><span class="line">[(<span class="keyword">lambda</span> x:x*x)(x) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line">返回值：</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure><p><strong>2. filter(function, sequence)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">对sequence中的item依次执行function(item)，将执行结果为<span class="keyword">True</span>的item组成一个List/String/Tuple（取决于sequence的类型）返回,function的返回值只能是<span class="keyword">True</span>或<span class="keyword">False</span>.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x % <span class="number">2</span> != <span class="number">0</span> <span class="keyword">and</span> x % <span class="number">3</span> != <span class="number">0</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filter(f, range(<span class="number">2</span>, <span class="number">25</span>)) </span><br><span class="line">[<span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x != <span class="string">'a'</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filter(f, <span class="string">"abcdef"</span>) </span><br><span class="line"><span class="string">'bcdef'</span></span><br><span class="line"> </span><br><span class="line">找出<span class="number">1</span>到<span class="number">10</span>之间的奇数</span><br><span class="line">filter(<span class="keyword">lambda</span> x:x%<span class="number">2</span>!=<span class="number">0</span>,range(<span class="number">1</span>,<span class="number">11</span>))</span><br><span class="line">返回值</span><br><span class="line">[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line"> </span><br><span class="line">如果sequence是一个string</span><br><span class="line">filter(<span class="keyword">lambda</span> x:len(x)!=<span class="number">0</span>,<span class="string">'hello'</span>)返回<span class="string">'hello'</span></span><br><span class="line">filter(<span class="keyword">lambda</span> x:len(x)==<span class="number">0</span>,<span class="string">'hello'</span>)返回<span class="string">''</span></span><br></pre></td></tr></table></figure><p><strong>3.map(function, sequence)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">对sequence中的item依次执行function(item)，见执行结果组成一个List返回：</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">cube</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> x*x*x </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>map(cube, range(<span class="number">1</span>, <span class="number">11</span>)) </span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>, <span class="number">125</span>, <span class="number">216</span>, <span class="number">343</span>, <span class="number">512</span>, <span class="number">729</span>, <span class="number">1000</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">cube</span><span class="params">(x)</span> :</span> <span class="keyword">return</span> x + x </span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>map(cube , <span class="string">"abcde"</span>) </span><br><span class="line">[<span class="string">'aa'</span>, <span class="string">'bb'</span>, <span class="string">'cc'</span>, <span class="string">'dd'</span>, <span class="string">'ee'</span>]</span><br><span class="line">另外map也支持多个sequence，这就要求function也支持相应数量的参数输入：</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span> <span class="keyword">return</span> x+y </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>map(add, range(<span class="number">8</span>), range(<span class="number">8</span>)) </span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>]</span><br></pre></td></tr></table></figure><p><strong>4. reduce(function, sequence, starting_value)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function接收的参数个数只能为<span class="number">2</span>,先把sequence中第一个值和第二个值当参数传给function，再把function的返回值和第三个值当参数传给function (对sequence中的item顺序迭代调用function)，然后只返回一个结果，如果有starting_value，还可以作为初始值调用，</span><br><span class="line"></span><br><span class="line">例子：求<span class="number">1</span>到<span class="number">10</span>的累加</span><br><span class="line">reduce(<span class="keyword">lambda</span> x,y:x+y,range(<span class="number">1</span>,<span class="number">11</span>))</span><br><span class="line">返回值是<span class="number">55</span>。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span> <span class="keyword">return</span> x + y </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reduce(add, range(<span class="number">1</span>, <span class="number">11</span>)) </span><br><span class="line"><span class="number">55</span> （注：<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span>+<span class="number">5</span>+<span class="number">6</span>+<span class="number">7</span>+<span class="number">8</span>+<span class="number">9</span>+<span class="number">10</span>）</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reduce(add, range(<span class="number">1</span>, <span class="number">11</span>), <span class="number">20</span>) </span><br><span class="line"><span class="number">75</span> （注：<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span>+<span class="number">5</span>+<span class="number">6</span>+<span class="number">7</span>+<span class="number">8</span>+<span class="number">9</span>+<span class="number">10</span>+<span class="number">20</span>）</span><br></pre></td></tr></table></figure><p><strong>5. 可以把filter map reduce 和lambda结合起来用，函数就可以简单的写成一行。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">例如</span><br><span class="line">kmpathes = filter(<span class="keyword">lambda</span> kmpath: kmpath, map(<span class="keyword">lambda</span> kmpath: string.strip(kmpath),</span><br><span class="line">string.split(L, <span class="string">':'</span>))) </span><br><span class="line"></span><br><span class="line"><span class="comment">#对L中的所有元素以':'做分割，得出一个列表。对这个列表的每一个元素做字符串strip，形成一个列表。对这个列表的每一个元素做直接返回操作(这个地方可以加上过滤条件限制)，最终获得一个字符串被':'分割的列表，列表中的每一个字符串都做了strip，并可以对特殊字符串过滤。</span></span><br></pre></td></tr></table></figure><p><strong>6. zip([iterable, …])</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zip()是Python的一个内建函数，它接受一系列可迭代的对象作为参数，将对象中对应的元素打包成一个个tuple（元组），然后返回由这些tuples组成的list（列表）。若传入参数的长度不等，则返回list的长度和参数中长度最短的对象相同。利用*号操作符，可以将list unzip（解压）.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zipped = zip(a,b)</span><br><span class="line">[(<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">6</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zip(a,c)</span><br><span class="line">[(<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">6</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zip(*zipped)</span><br><span class="line">[(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)]</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>深度学习Tensorflow</title>
      <link href="/hexo/2017/12/20/2017-12-20_deeplearning/"/>
      <url>/hexo/2017/12/20/2017-12-20_deeplearning/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://jizhi.im/blog/post/gpu-p6" target="_blank" rel="noopener">学习教程</a></p><p><a href="http://study.163.com/course/courseMain.htm?courseId=1003223001" target="_blank" rel="noopener">斯坦福李飞飞</a></p><p><a href="http://www.tensorfly.cn/" target="_blank" rel="noopener">TensorFlow中文社区</a></p><p><a href="https://docs.scipy.org/doc/numpy-1.13.0/genindex.html" target="_blank" rel="noopener">numpy API</a></p><p><a href="http://blog.csdn.net/yunpiao123456/article/details/52437794" target="_blank" rel="noopener">卷积神经网络1</a></p><p><a href="http://blog.csdn.net/hjimce/article/details/47323463" target="_blank" rel="noopener">卷积神经网络2</a></p><p><a href="https://github.com/songrotek/Deep-Learning-Papers-Reading-Roadmap" target="_blank" rel="noopener">Roadmap</a></p><p><a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="noopener">AI圣经</a></p><p><a href="https://www.zybuluo.com/hanbingtao/note/433855" target="_blank" rel="noopener">零基础入门深度学习</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>决策树</title>
      <link href="/hexo/2017/11/21/2017-11-13_decision_tree/"/>
      <url>/hexo/2017/11/21/2017-11-13_decision_tree/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="特征选择问题"><a href="#特征选择问题" class="headerlink" title="特征选择问题"></a>特征选择问题</h1><p>选择信息增益和信息增益比大的特征</p><h1 id="信息增益（互信息）"><a href="#信息增益（互信息）" class="headerlink" title="信息增益（互信息）"></a>信息增益（互信息）</h1><p>表示得知特征X的信息而使得类Y的信息的不确定性减少的程度。</p><h4 id="信息熵"><a href="#信息熵" class="headerlink" title="信息熵"></a>信息熵</h4><p>熵越大，随机变量的不确定性就越大。</p><h4 id="条件熵"><a href="#条件熵" class="headerlink" title="条件熵"></a>条件熵</h4><p>随机变量X给定条件下随机变量Y的条件熵 H(Y|X)定义为X给定条件下Y的条件概率分布的熵对X的数学期望。</p><p><strong>信息熵和条件熵中概率由数据估计得到，所对应的熵与条件熵分别称为经验熵和经验条件熵</strong></p><h1 id="信息增益比"><a href="#信息增益比" class="headerlink" title="信息增益比"></a>信息增益比</h1><p>信息增益与训练数据集经验熵的比值</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>基因组版本对应关系</title>
      <link href="/hexo/2017/11/13/2017-11-12_genome_version/"/>
      <url>/hexo/2017/11/13/2017-11-12_genome_version/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://www.bio-info-trainee.com/1469.html" target="_blank" rel="noopener">原文</a></p><p>一些关于基因组名字的含义  </p><ul><li><p>[ ] NC表示人类基因组DNA的RefSeq。</p></li><li><p>[ ] NM表示mRNA的RefSeq。</p></li><li><p>[ ] NP表示蛋白质的RefSeq。</p></li></ul><p>hg19(UCSC)，GRCH37(NCBI)和Ensembl75(ENSEMBL)是三种国际生物信息学数据库资源收集存储单各自发布的基因组信息。</p><p>hg系列，hg18/19/38是目前使用频率最高的基因组。hg38是目前的最新版本。</p><p><strong>基因组各种版本对应关系</strong></p><ul><li>GRCh36 (hg18): ENSEMBL release_52.</li><li>GRCh37 (hg19): ENSEMBL release_59/61/64/68/69/75.</li><li>GRCh38 (hg38): ENSEMBL release_76/77/78/80/81/82.</li></ul><h1 id="UCSC基因组下载"><a href="#UCSC基因组下载" class="headerlink" title="UCSC基因组下载"></a>UCSC基因组下载</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>hgdownload.cse.ucsc.edu<span class="regexp">/goldenPath/mm</span>10<span class="regexp">/bigZips/</span>chromFa.tar.gz</span><br><span class="line">http:<span class="regexp">//</span>hgdownload.cse.ucsc.edu<span class="regexp">/goldenPath/mm</span>9<span class="regexp">/bigZips/</span>chromFa.tar.gz</span><br><span class="line">http:<span class="regexp">//</span>hgdownload.cse.ucsc.edu<span class="regexp">/goldenPath/</span>hg19<span class="regexp">/bigZips/</span>chromFa.tar.gz</span><br><span class="line">http:<span class="regexp">//</span>hgdownload.cse.ucsc.edu<span class="regexp">/goldenPath/</span>hg38<span class="regexp">/bigZips/</span>chromFa.tar.gz</span><br><span class="line"><span class="comment"># 或者用shell脚本指定下载的染色体号</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">22</span>) X Y M;</span><br><span class="line"><span class="keyword">do</span> echo <span class="variable">$i</span>;</span><br><span class="line">  wget http:<span class="regexp">//</span>hgdownload.cse.ucsc.edu<span class="regexp">/goldenPath/</span>hg19<span class="regexp">/chromosomes/</span>chr<span class="variable">$&#123;i&#125;</span>.fa.gz;done</span><br><span class="line">  gunzip *.gz</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">22</span>) X Y M;</span><br><span class="line">  <span class="keyword">do</span> cat chr<span class="variable">$&#123;i&#125;</span>.fa &gt;&gt; hg19.fasta;</span><br><span class="line">done</span><br><span class="line">rm -fr chr*.fasta</span><br></pre></td></tr></table></figure><h1 id="GTF注释文件"><a href="#GTF注释文件" class="headerlink" title="GTF注释文件"></a>GTF注释文件</h1><p><strong>NCBI</strong>：最新版（hg38）</p><p>  ● ftp://ftp.ncbi.nih.gov/genomes/H_sapiens/GFF/</p><p>  其它版本</p><p>  ● ftp://ftp.ncbi.nlm.nih.gov/genomes/Homo_sapiens/ARCHIVE/</p><p><strong>Ensembl</strong></p><p>  ● ftp://ftp.ensembl.org/pub/release-75/gtf/homosapiens/Homosapiens.GRCh37.75.gtf.gz</p><p>变化上面链接中的release就可以拿到所有版本信息</p><p>  ● ftp://ftp.ensembl.org/pub/</p><p><strong>UCSC</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">本身需要一系列参数：</span><br><span class="line">  1. Navigate to http://genome.ucsc.edu/cgi-bin/hgTables</span><br><span class="line">  2. <span class="keyword">Select</span> the <span class="keyword">following</span> options:</span><br><span class="line">  <span class="number">3.</span> clade: Mammal</span><br><span class="line">  <span class="number">4.</span> genome: Human</span><br><span class="line">  <span class="number">5.</span> <span class="keyword">assembly</span>: Feb. <span class="number">2009</span> (GRCh37/hg19)</span><br><span class="line">  <span class="number">6.</span> <span class="keyword">group</span>: Genes <span class="keyword">and</span> Gene Predictions</span><br><span class="line">  <span class="number">7.</span> track: UCSC Genes</span><br><span class="line">  <span class="number">8.</span> <span class="keyword">table</span>: knownGene</span><br><span class="line">  <span class="number">9.</span> region: <span class="keyword">Select</span> <span class="string">"genome"</span> <span class="keyword">for</span> the entire genome.</span><br><span class="line">  <span class="number">10.</span> <span class="keyword">output</span> <span class="keyword">format</span>: GTF - gene transfer <span class="keyword">format</span></span><br><span class="line">  <span class="number">11.</span> <span class="keyword">output</span> <span class="keyword">file</span>: enter a <span class="keyword">file</span> <span class="keyword">name</span> <span class="keyword">to</span> <span class="keyword">save</span> your results <span class="keyword">to</span> a <span class="keyword">file</span>, <span class="keyword">or</span> leave blank <span class="keyword">to</span> display results <span class="keyword">in</span> the browser</span><br><span class="line">  <span class="number">12.</span> Click <span class="string">'get output'</span>.</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>SAM文件与SAMtools</title>
      <link href="/hexo/2017/11/12/2017-11-11_sam_samtools/"/>
      <url>/hexo/2017/11/12/2017-11-11_sam_samtools/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="SAM"><a href="#SAM" class="headerlink" title="SAM"></a>SAM</h1><p>SAM输出的结果中每一行都包括十二项通过Tab分隔<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">FCC0YG3ACXX:</span><span class="number">2</span><span class="string">:1103:1572:139769#GCTTAATG</span> <span class="number">99</span>  <span class="string">chr10</span>   <span class="number">60001</span>   <span class="number">0</span>   <span class="number">90</span><span class="string">M</span> <span class="string">=</span>   <span class="number">60390</span>   <span class="number">479</span> <span class="string">GAATTCCTTGAGGCCTAAATGCATCGGGGTGCTCTGGTTTTGTTGTTGTTATTTCTGAATGACATTTACTTTGGTGCTCTTTATTTTGCG</span>  <span class="string">CCCFFFFFHHHHHJJJJJJJJIJJJJJJJ?HHGIJJJBFHIJIJIDHIHIEHJJIJJIJJJHHGHHHFFFFFFEDCEEECCDDDDEECDD</span>  <span class="attr">XT:A:R</span>  <span class="attr">NM:i:0</span>  <span class="attr">SM:i:0</span>  <span class="attr">AM:i:0</span>  <span class="attr">X0:i:2</span>  <span class="attr">X1:i:0</span>  <span class="attr">XM:i:0</span>  <span class="attr">XO:i:0</span>  <span class="attr">XG:i:0</span>  <span class="attr">MD:Z:90</span> <span class="attr">XA:Z:chr18,+14415,90M,0;</span>    <span class="attr">RG:Z:120618_I245_FCC0YG3ACXX_L2_SZAXPI010030-30</span></span><br></pre></td></tr></table></figure></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">(1)FCC0YG3ACXX:2:1103:1572:139769#GCTTAATG</span></span><br><span class="line"><span class="string">(2)99</span></span><br><span class="line"><span class="string">(3)chr10</span></span><br><span class="line"><span class="string">(4)60001</span></span><br><span class="line"><span class="string">(5)0</span></span><br><span class="line"><span class="string">(6)90M</span></span><br><span class="line"><span class="string">(7)=</span></span><br><span class="line"><span class="string">(8)60390</span></span><br><span class="line"><span class="string">(9)479</span></span><br><span class="line"><span class="string">(10)GAATTCCTTGAGGCCTAAATGCATCGGGGTGCTCTGGTTTTGTTGTTGTTATTTCTGAATGACATTTACTTTGGTGCTCTTTATTTTGCG</span></span><br><span class="line"><span class="string">(11)CCCFFFFFHHHHHJJJJJJJJIJJJJJJJ?HHGIJJJBFHIJIJIDHIHIEHJJIJJIJJJHHGHHHFFFFFFEDCEEECCDDDDEECDD</span></span><br><span class="line"><span class="string">(12)XT:A:R</span>  <span class="attr">NM:i:0</span>  <span class="attr">SM:i:0</span>  <span class="attr">AM:i:0</span>  <span class="attr">X0:i:2</span>  <span class="attr">X1:i:0</span>  <span class="attr">XM:i:0</span>  <span class="attr">XO:i:0</span>  <span class="attr">XG:i:0</span>  <span class="attr">MD:Z:90</span> <span class="attr">XA:Z:chr18,+14415,90M,0;</span>    <span class="attr">RG:Z:120618_I245_FCC0YG3ACXX_L2_SZAXPI010030-30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">(1)read的名字</span></span><br><span class="line"><span class="string">(2)Flag</span> <span class="string">为各个标志的和</span></span><br><span class="line"><span class="string">(3)比对到的染色体号</span></span><br><span class="line"><span class="string">(4)第一个比对上的碱基所在位置</span></span><br><span class="line"><span class="string">(5)质量值</span> </span><br><span class="line"><span class="number">6.</span> <span class="string">CIGAR</span>  <span class="string">如果CIGAR是*，这个才是判断左右端是否匹配失败的标准</span></span><br><span class="line"><span class="number">7.</span> <span class="string">mate比对上的染色体号，如果是“=”，则表示在同一条染色体上，*表示没有比对上</span></span><br><span class="line"><span class="number">8.</span> <span class="string">mate第一个比对上的碱基所在位置</span> </span><br><span class="line"><span class="number">9.</span> <span class="string">该read和mate的距离(估计出的片段的长度，当mate</span> <span class="string">序列位于本序列上游时该值为负值)</span></span><br><span class="line"><span class="number">10.</span> <span class="string">序列</span> </span><br><span class="line"><span class="number">11.</span> <span class="string">序列对应的质量值</span> <span class="string">(ASCII码格式)</span></span><br><span class="line"><span class="number">12.</span> <span class="string">标记</span></span><br></pre></td></tr></table></figure><p>(1)如果PE reads的左右两端均没有比对成功，那么第3,6,7列都是*，4，5，8，9都是0，第2列flag只有77,141这两种情况。</p><ul><li>77代表PE,而且PE的两条reads都是unmanned的，</li><li>141跟77一样，只是它们分别指代unmanned的PE的reads的两端,</li></ul><p>(2) 如果是左右两端reads只有一个比对成功，另一个reads没有比对上.</p><ul><li><p>不管是左端还是右端，第3列都是有染色体的，(第7列是=号[好像不对])，但这并不能说明左端跟右端有着同样的比对结果。而第6列CIGAR是*，这个才是判断左右端是否匹配失败的标准。An unmapped segment without coordinate has a * at this field. However, an unmapped segment may also have an ordinary coordinate such that it can be placed at a desired position after sorting. If RNAME is *, no assumptions can be made about POS and CIGAR. (<a href="https://samtools.github.io/hts-specs/SAMv1.pdf" target="_blank" rel="noopener">https://samtools.github.io/hts-specs/SAMv1.pdf</a>)</p></li><li><p>这也就是我为什么没有发现第7列有染色体，第3列是*号的reads。即使PE reads的右端匹配，左端未匹配，它只会把这个read比对的染色体写在第3列，而不是第7列！所以说要想探究它是左端还是右端未比对成功，得看flag。</p></li></ul><h4 id="Flag-标志"><a href="#Flag-标志" class="headerlink" title="Flag 标志"></a>Flag 标志</h4><p>Flag值解析 <a href="https://broadinstitute.github.io/picard/explain-flags.html" target="_blank" rel="noopener">https://broadinstitute.github.io/picard/explain-flags.html</a></p><ul><li>1  序列是一对序列中的一个</li><li>2  比对结果是一个pair-end比对的末端</li><li>4  没有找到位点</li><li>8  这个序列是pair中的一个但是没有找到位点</li><li>16  在这个比对上的位点，序列与参考序列反向互补</li><li>32  这个序列在pair-end中的mate序列与参考序列反向互补</li><li>64 序列是 mate 1</li><li>128 序列是 mate 2</li><li></li></ul><h4 id="质量值"><a href="#质量值" class="headerlink" title="质量值"></a>质量值</h4><p>因工具而异。质量值越高这个比对越可信，如果质量值为0，可能是该序列在参考基因组有多种定位的可能性。</p><h4 id="CIGAR"><a href="#CIGAR" class="headerlink" title="CIGAR"></a>CIGAR</h4><p>如37M1D2M1I，这段字符的意思是37个匹配，1个参考序列上的删除，2个匹配，1个参考序列上的插入。M代表的是alignment match(可以是错配)</p><h1 id="SAMtools"><a href="#SAMtools" class="headerlink" title="SAMtools"></a>SAMtools</h1><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/samtools常用命令详解.pdf">SAMtools使用手册</a></p><p>SAM（sequence Alignment/mapping)数据格式是目前高通量测序中存放比对数据的标准格式，当然他可以用于存放未比对的数据。</p><p>主要功能有：</p><ul><li><strong>samtools view : BAM-SAM/SAM-BAM 转换和提取部分比对</strong></li><li><strong>samtools sort : 比对排序</strong></li><li><strong>samtools index: 索引排序比对</strong></li><li>samtools merge: 聚合多个排序比对</li><li>samtools faidx: 建立FASTA索引，提取部分序列</li><li>samtools tview: 文本格式查看序列</li><li>samtools pileup: 产生基于位置的结果和 consensus/indel calling</li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Jimmy 直播基因组学习笔记</title>
      <link href="/hexo/2017/11/10/2017-11-10_genomic_live_streaming/"/>
      <url>/hexo/2017/11/10/2017-11-10_genomic_live_streaming/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>教程</strong> <a href="http://www.biotrainee.com/thread-1376-1-1.html" target="_blank" rel="noopener">Jimmy直播我的基因组分析 - 目录</a></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/RNASeq_WES.jpeg" alt=""></p><h1 id="下载hg19基因组"><a href="#下载hg19基因组" class="headerlink" title="下载hg19基因组"></a>下载hg19基因组</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /data/reference</span><br><span class="line">mkdir -<span class="selector-tag">p</span> genome/hg19  &amp;&amp; cd genome/hg19</span><br><span class="line">nohup wget http:<span class="comment">//hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz &amp;</span></span><br><span class="line">tar zvfx chromFa<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">cat *<span class="selector-class">.fa</span> &gt; hg19.fa</span><br><span class="line">rm chr*.fa</span><br></pre></td></tr></table></figure><h1 id="fastq-sam-bam"><a href="#fastq-sam-bam" class="headerlink" title="fastq-sam-bam"></a>fastq-sam-bam</h1><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ls</span> *gz |xargs ~/biosoft/fastqc/FastQC/fastqc -t <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">6</span>) ;<span class="keyword">do</span> (nohup bwa  mem -t <span class="number">5</span> -M /data/<span class="keyword">reference</span>/index/bwa/hg19  KPGP<span class="number">-00001</span>_L$&#123;i&#125;_R1.fq.gz KPGP<span class="number">-00001</span>_L$&#123;i&#125;_R2.fq.gz <span class="number">1</span>&gt;KPGP<span class="number">-00001</span>_L$&#123;i&#125;.sam <span class="number">2</span>&gt;KPGP<span class="number">-00001</span>_L$&#123;i&#125;.bwa.<span class="keyword">align</span>.<span class="keyword">log</span> &amp;);done</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">6</span>) ;<span class="keyword">do</span> (nohup samtools <span class="keyword">sort</span> -@ <span class="number">5</span> -o KPGP<span class="number">-00001</span>_L$&#123;i&#125;.sorted.bam  KPGP<span class="number">-00001</span>_L$&#123;i&#125;.sam &amp;);done</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">6</span>) ;<span class="keyword">do</span> (nohup samtools index KPGP<span class="number">-00001</span>_L$&#123;i&#125;.sorted.bam &amp;);done</span><br><span class="line">samtools merge KPGP<span class="number">-00001.</span>merge.bam *.sorted.bam</span><br><span class="line">samtools <span class="keyword">sort</span> -@ <span class="number">10</span> -O bam -o KPGP<span class="number">-00001.</span>sorted.merge.bam  KPGP<span class="number">-00001.</span>merge.bam</span><br><span class="line">samtools index  KPGP<span class="number">-00001.</span>sorted.merge.bam</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">6</span>) ;<span class="keyword">do</span> ( samtools flagstat KPGP<span class="number">-00001</span>_L$&#123;i&#125;.sorted.bam &gt;KPGP<span class="number">-00001</span>_L$&#123;i&#125;.flagstat.txt );done</span><br></pre></td></tr></table></figure><h1 id="根据gtf格式的基因注释文件得到人所有基因的染色体坐标"><a href="#根据gtf格式的基因注释文件得到人所有基因的染色体坐标" class="headerlink" title="根据gtf格式的基因注释文件得到人所有基因的染色体坐标"></a>根据gtf格式的基因注释文件得到人所有基因的染色体坐标</h1><p><a href="http://www.biotrainee.com/thread-472-1-1.html" target="_blank" rel="noopener">原文</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/reference/gtf/gencode</span><br><span class="line"><span class="built_in">cd</span>  ~/reference/gtf/gencode</span><br><span class="line"><span class="comment">## https://www.gencodegenes.org/releases/current.html</span></span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.2wayconspseudos.gtf.gz</span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.long_noncoding_RNAs.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.polyAs.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.annotation.gtf.gz </span><br><span class="line"></span><br><span class="line"><span class="comment">## https://www.gencodegenes.org/releases/25lift37.html </span></span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.annotation.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.HGNC.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.EntrezGene.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.RefSeq.gz </span><br><span class="line"> </span><br><span class="line">zcat  gencode.v25.long_noncoding_RNAs.gtf.gz |perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;lncRNA.hg38.position</span><br><span class="line">zcat  gencode.v25.2wayconspseudos.gtf.gz     |perl -alne <span class="string">'&#123;next unless $F[2] eq "transcript" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;pseudos.hg38.position</span><br><span class="line">zcat  gencode.v25.annotation.gtf.gz| grep   protein_coding |perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;protein_coding.hg38.position</span><br><span class="line">zcat  gencode.v25.annotation.gtf.gz|perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;allGene.hg38.position</span><br><span class="line"> </span><br><span class="line">zcat  gencode.v25lift37.annotation.gtf.gz | grep   protein_coding |perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;protein_coding.hg19.position</span><br><span class="line">zcat  gencode.v25lift37.annotation.gtf.gz | perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;allGene.hg19.position</span><br></pre></td></tr></table></figure><p>有个很严重的问题，gencode里面的数据有着HAVANA和ENSEMBL的区别，尤其是在hg38里面，需要区别对待！具体见：<a href="http://www.bio-info-trainee.com/1991.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/1991.html</a> 的解释.</p><h1 id="Call-感兴趣的基因-variation"><a href="#Call-感兴趣的基因-variation" class="headerlink" title="Call 感兴趣的基因 variation"></a>Call 感兴趣的基因 variation</h1><p><a href="http://www.bio-info-trainee.com/2013.html" target="_blank" rel="noopener">原文</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grep H3F3A /data/reference/gtf/gencode/protein_coding.hg19.position</span><br><span class="line">samtools mpileup -r chr1:226249552-226259702  -ugf /data/reference/genome/hg19/hg19.fa *sorted.bam | bcftools call -vmO z -o H3F3A.vcf.gz</span><br><span class="line">gunzip H3F3A.vcf.gz</span><br><span class="line"></span><br><span class="line">/data/biosoft/annovar/convert2annovar.pl -format vcf4old H3F3A.vcf &gt;H3F3A.annovar</span><br><span class="line">/data/biosoft/annovar/annotate_variation.pl -buildver hg19 --geneanno --outfile H3F3A.anno H3F3A.annovar /data/biosoft/annovar/humandb/</span><br><span class="line"></span><br><span class="line"><span class="comment">#/data/biosoft/annovar/annotate_variation.pl --downdb refGene /data/biosoft/annovar/humandb</span></span><br><span class="line"></span><br><span class="line">/data/biosoft/annovar/annotate_variation.pl -buildver hg19 --dbtype refGene --geneanno --outfile H3F3A.anno H3F3A.annovar /data/biosoft/annovar/humandb/</span><br></pre></td></tr></table></figure><h1 id="获取感兴趣的基因坐标"><a href="#获取感兴趣的基因坐标" class="headerlink" title="获取感兴趣的基因坐标"></a>获取感兴趣的基因坐标</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">grep H3F3A /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br><span class="line">grep HLA-DQ /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br><span class="line">grep AVPR1 /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br><span class="line">grep IRX3 /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br><span class="line">grep IRX5 /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br><span class="line">grep GLI3 /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br><span class="line">grep PAX1 /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br><span class="line">grep RUNX2 /data/reference/gtf/gencode/protein_coding.hg19.position &gt;&gt; key.list.txt</span><br></pre></td></tr></table></figure><h1 id="批量提取我们感兴趣的基因的变异情况"><a href="#批量提取我们感兴趣的基因的变异情况" class="headerlink" title="批量提取我们感兴趣的基因的变异情况"></a>批量提取我们感兴趣的基因的变异情况</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat key.list.txt |<span class="keyword">while</span> <span class="built_in">read</span> id;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">chr=$(<span class="built_in">echo</span> <span class="variable">$id</span> |cut -d<span class="string">" "</span> -f 1|sed <span class="string">'s/chr//'</span> )</span><br><span class="line">start=$(<span class="built_in">echo</span> <span class="variable">$id</span> |cut -d<span class="string">" "</span> -f 2 )</span><br><span class="line">end=$(<span class="built_in">echo</span> <span class="variable">$id</span> |cut -d<span class="string">" "</span> -f 3 )</span><br><span class="line">gene=$(<span class="built_in">echo</span> <span class="variable">$id</span> |cut -d<span class="string">" "</span> -f 4 )</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$chr</span>:<span class="variable">$start</span>-<span class="variable">$end</span>  <span class="variable">$gene</span></span><br><span class="line">samtools mpileup -r  <span class="variable">$chr</span>:<span class="variable">$start</span>-<span class="variable">$end</span>   -ugf /data/reference/genome/hg19/hg19.fa KPGP-00001.sorted.merge.bam | bcftools call -vmO z -o <span class="variable">$gene</span>.vcf.gz</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>前面我们说到有研究表明STAT4上的rs7574865和HLA-DQ的rs9275319是国人群中乙型肝炎病毒（HBV）相关肝细胞癌（HCC）遗传易感基因，那么我们很容易去dbSNP数据库或者我最近强烈推荐 的<a href="https://www.snpedia.com/index.php/Rs7574865" target="_blank" rel="noopener">Snpedia</a>数据库<a href="http://www.bio-info-trainee.com/2100.html" target="_blank" rel="noopener">吐血推荐snpedia数据库，非常丰富的snp信息记录</a>里面找到它的坐标。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span><span class="number">32666295</span> <span class="symbol">:Rs9275319--HLA-DQ</span></span><br><span class="line"><span class="number">2</span><span class="number">191964633</span> <span class="symbol">:Rs7574865--STAT4</span></span><br></pre></td></tr></table></figure></p><p>然后我检查了我刚才call到的variation文件，<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zcat STAT4.vcf.gz <span class="string">|grep -w 191964633 显示为空。</span></span><br><span class="line">zcat HLA-DQ* <span class="string">|grep 32666295  也是空。</span></span><br></pre></td></tr></table></figure></p><p>哈哈，我完美的错过了这两个易感位点！！！！谢天谢地！！！</p><h1 id="bam文件给按照染色体给分割"><a href="#bam文件给按照染色体给分割" class="headerlink" title="bam文件给按照染色体给分割"></a>bam文件给按照染色体给分割</h1><p>按照染色体（chr1-chr22,chrX,chrY,chrMT）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bamtools split -<span class="keyword">in</span> KPGP-<span class="number">00001</span><span class="selector-class">.sorted</span><span class="selector-class">.merge</span><span class="selector-class">.bam</span> -reference</span><br></pre></td></tr></table></figure><h1 id="提取未比对的测序数据"><a href="#提取未比对的测序数据" class="headerlink" title="提取未比对的测序数据"></a>提取未比对的测序数据</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">samtools view -f4 KPGP-00001.sorted.merge.bam &gt; KPGP-00001.sorted.merge.unmapped.sam <span class="comment">#more fast,  or</span></span><br><span class="line"><span class="comment"># samtools view sample.bam |perl -alne '&#123;print if $F[2] eq "*" or $F[5] eq "*" &#125;' &gt; sample.unmapped.sam</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提前未比对成功的测序数据(可以分成3类，仅reads1，仅reads2，和两端reads都没有比对成功)</span></span><br><span class="line"><span class="comment">#小写的f是提取，大写的F是过滤</span></span><br><span class="line">samtools view -u -f 4 -F 264 alignments.bam  &gt; tmps1.bam <span class="comment">#仅reads1</span></span><br><span class="line">samtools view -u -f 8 -F 260 alignments.bam  &gt; tmps2.bam <span class="comment">#仅reads2</span></span><br><span class="line">samtools view -u -f 12 -F 256 alignments.bam &gt; tmps3.bam <span class="comment">#两端reads都没有比对成功</span></span><br><span class="line">samtools merge -u - tmps[123].bam | samtools sort -n - unmapped</span><br><span class="line">bamToFastq -bam unmapped.bam -fq1 unmapped_reads1.fastq -fq2 unmapped_reads2.fastq</span><br><span class="line"></span><br><span class="line"><span class="comment">#统计一下未比对成功的reads有多少</span></span><br><span class="line">cut -f 3,6 KPGP-00001.sorted.merge.unmapped.sam |sort |uniq -c &gt;KPGP-00001.sorted.merge.unmapped.counts</span><br></pre></td></tr></table></figure><h1 id="提取左右端测序数据比对到不同染色体的PE-reads"><a href="#提取左右端测序数据比对到不同染色体的PE-reads" class="headerlink" title="提取左右端测序数据比对到不同染色体的PE reads"></a>提取左右端测序数据比对到不同染色体的PE reads</h1><p>左右端测序数据比对到不同染色体的情况，比较有意义，可能是融合基因，也可能是基因之间本来就相似性很大。<br>三种具有代表性的肿瘤融合基因BCR-ABL、SLC45A3-ELK4 和PAX3-FOXO1</p><p><strong>融合基因</strong>（英语：Fusion gene）是指两个基因的全部或一部分的序列相互融合为一个新的基因的过程。其有可能是染色体易位、中间缺失或染色体倒置所致的结果.</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">samtools <span class="keyword">view</span> KPGP-00001.sorted.<span class="keyword">merge</span>.bam | perl -alne '&#123;<span class="keyword">print</span> <span class="keyword">if</span> <span class="variable">$F</span>[6] ne <span class="string">"="</span>&#125;'  &gt;unpaired.sam </span><br><span class="line">cut -f 3,7 unpaired.sam |<span class="keyword">sort</span> |uniq -c</span><br></pre></td></tr></table></figure><h1 id="PCR-duplication"><a href="#PCR-duplication" class="headerlink" title="PCR duplication"></a>PCR duplication</h1><p><a href="http://blog.sina.com.cn/s/blog_69e75efd0102wu57.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_69e75efd0102wu57.html</a></p><p>设一个基因组有A、B两个片段，PCR后得到无论多少条reads，比如nA+mB条，在数据分析的时候，都只保留1条A和1条B（unique reads）用于组装，而去掉(n-1)条A和(m-1)条B。共有(n-1)条A和(m-1)条B被当成duplicatedreads看待，尽管它们是正常PCR的正常产物。</p><p>那么为什么要去除这个duplication呢？主要是因为在call snp的时候，如果某个变异位点的变异碱基都是来自于PCR重复，而我们却认为它深度足够判断是真的变异位点，这个结论其实有很大可能是假阳性。</p><h1 id="覆盖度详细探究"><a href="#覆盖度详细探究" class="headerlink" title="覆盖度详细探究"></a>覆盖度详细探究</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">samtools flagstat KPGP-00001.sorted.<span class="keyword">merge</span>.bam</span><br><span class="line"></span><br><span class="line">#全基因组</span><br><span class="line">samtools mpileup KPGP-00001.sorted.<span class="keyword">merge</span>.bam |perl -alne '&#123;<span class="keyword">if</span>(<span class="variable">$F</span>[3]&gt;100)&#123;<span class="variable">$depth</span>&#123;<span class="string">"over100"</span>&#125;++&#125;<span class="keyword">else</span>&#123;<span class="variable">$depth</span>&#123;<span class="variable">$F</span>[3]&#125;++&#125;&#125;END&#123;<span class="keyword">print</span> <span class="string">"$_\t$depth&#123;$_&#125;"</span> <span class="keyword">foreach</span> <span class="keyword">sort</span>&#123;<span class="variable">$a</span> &lt;=&gt; <span class="variable">$b&#125;</span>keys %depth&#125;' </span><br><span class="line"></span><br><span class="line">#每一条染色体</span><br><span class="line"><span class="keyword">ls</span> KPGP-00001.sorted.<span class="keyword">merge</span>.REF*.bam |<span class="keyword">while</span> <span class="keyword">read</span> id </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">echo <span class="variable">$id</span></span><br><span class="line">samtools mpileup <span class="variable">$id</span> |perl -alne '&#123;<span class="keyword">if</span>(<span class="variable">$F</span>[3]&gt;100)&#123;<span class="variable">$depth</span>&#123;<span class="string">"over100"</span>&#125;++&#125;<span class="keyword">else</span>&#123;<span class="variable">$depth</span>&#123;<span class="variable">$F</span>[3]&#125;++&#125;&#125; END &#123;<span class="keyword">print</span> <span class="string">"$_\t$depth&#123;$_&#125;"</span> <span class="keyword">foreach</span> <span class="keyword">sort</span>&#123;<span class="variable">$a</span> &lt;=&gt; <span class="variable">$b&#125;</span>keys %depth&#125;' &gt;<span class="variable">$id</span>.depth.txt</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="对比对结果文件进行过滤"><a href="#对比对结果文件进行过滤" class="headerlink" title="对比对结果文件进行过滤"></a>对比对结果文件进行过滤</h1><p>这个地方有问题</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">samtools</span> view -h -<span class="built_in">F4</span>  -q <span class="number">5</span> KPGP-<span class="number">00001</span>.sorted.merge.<span class="keyword">bam </span><span class="title">|samtools view -bS |</span>samtools rmdup - KPGP-<span class="number">00001</span>.filter.rmdup.<span class="keyword">bam</span></span><br><span class="line"><span class="keyword">samtools </span>index KPGP-<span class="number">00001</span>.filter.rmdup.<span class="keyword">bam</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">bam文件是二进制文件，我们需要samtools </span>view的命令进行格式转换。</span><br><span class="line">这个管道的意思分开来说就是运行第一步时过滤的时候已将<span class="keyword">bam文件转成我们能看的sam格式。</span></span><br><span class="line"><span class="keyword">其中h是在输出的结果中包含头header，F和q是过滤掉没有mapped上的reads（也就是multiple </span>mapping的情况）和低质量的reads。</span><br><span class="line">第二步是将上一步得出的sam文件再转成<span class="keyword">bam，</span></span><br><span class="line"><span class="keyword">第三步就是用samtools </span>rmdup过滤掉PCR duplication的情况了，最后得到了过滤了<span class="keyword">multiple </span>mapping、PCR duplication及低质量比对的<span class="keyword">bam文件。</span></span><br><span class="line"><span class="keyword">最后利用samtools </span>index对过滤后的<span class="keyword">bam文件建立索引。</span></span><br></pre></td></tr></table></figure><h1 id="用GATK对SAM格式的文件进行重排"><a href="#用GATK对SAM格式的文件进行重排" class="headerlink" title="用GATK对SAM格式的文件进行重排"></a>用GATK对SAM格式的文件进行重排</h1><p><a href="http://www.bio-info-trainee.com/838.html" target="_blank" rel="noopener">GATK使用注意事项</a></p><p><a href="https://github.com/snewhouse/ngs_nextflow/wiki/GATK-Bundle" target="_blank" rel="noopener">https://github.com/snewhouse/ngs_nextflow/wiki/GATK-Bundle</a></p><p><a href="https://github.com/ddcap/halvade/wiki" target="_blank" rel="noopener">https://github.com/ddcap/halvade/wiki</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ftp://ftp.broadinstitute.org/bundle/hg19</span></span><br><span class="line"></span><br><span class="line">axel ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta.gz</span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta.fai.gz</span><br><span class="line">gunzip ucsc.hg19.fasta.gz</span><br><span class="line">bwa index ucsc.hg19.fasta</span><br><span class="line"><span class="comment"># ucsc.hg19.fasta.amb</span></span><br><span class="line"><span class="comment"># ucsc.hg19.fasta.ann</span></span><br><span class="line"><span class="comment"># ucsc.hg19.fasta.bwt</span></span><br><span class="line"><span class="comment"># ucsc.hg19.fasta.pac</span></span><br><span class="line"><span class="comment"># ucsc.hg19.fasta.sa</span></span><br><span class="line">axel ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/1000G_phase1.indels.hg19.sites.vcf.gz</span><br><span class="line">axel ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/1000G_phase1.indels.hg19.sites.vcf.idx.gz</span><br><span class="line">axel ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.gz</span><br><span class="line">axel ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.idx.gz</span><br><span class="line">axel ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.dict.gz</span><br><span class="line">axel ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/dbsnp_138.hg19.vcf.gz</span><br><span class="line"></span><br><span class="line">ls *.gz |<span class="keyword">while</span> <span class="built_in">read</span> id;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">gunzip <span class="variable">$id</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>按染色体下载hg19基因组</strong><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">22</span>) X Y M;</span><br><span class="line"><span class="keyword">do</span> echo $i;</span><br><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/hgdownload.cse.ucsc.edu/golden</span>Path/hg19/chromosomes/chr$&#123;i&#125;.fa.gz;</span><br><span class="line">done</span><br><span class="line">gunzip *.gz</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq <span class="number">1</span> <span class="number">22</span>) X Y M;</span><br><span class="line"><span class="keyword">do</span> cat chr$&#123;i&#125;.fa <span class="meta">&gt;&gt; </span>hg19.fasta;</span><br><span class="line">done</span><br><span class="line">rm -fr chr*.fasta</span><br><span class="line"></span><br><span class="line">bwa index ucsc.hg19.fasta</span><br><span class="line"></span><br><span class="line">bwa index -a bwtsw hg19.fasta</span><br><span class="line">samtools faidx hg19.fasta</span><br></pre></td></tr></table></figure></p><p>首先用RealignerTargetCreator找到需要重新比对的区域，输出文件intervals，然后用输出的 tmp.intervals 做输入文件来进行重新比对，也就是用IndelRealigner在这些区域内进行重新比对.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">nohup java -Xmx60g -jar /data/biosoft/GATK/GenomeAnalysisTK.jar -R \</span><br><span class="line">/data/reference/annotation/GATK/ucsc.hg19.fasta -T RealignerTargetCreator \</span><br><span class="line">-I KPGP-00001.filter.rmdup.bam -o KPGP-00001.filter.rmdup.intervals \</span><br><span class="line">-known /data/reference/annotation/GATK/1000G_phase1.indels.hg19.sites.vcf \</span><br><span class="line">1&gt; KPGP-00001.filter.rmdup.RealignerTargetCreator.log</span><br><span class="line"></span><br><span class="line">nohup java -Xmx60g -jar /data/biosoft/GATK/GenomeAnalysisTK.jar  -R \</span><br><span class="line">/data/reference/annotation/GATK/ucsc.hg19.fasta  -T IndelRealigner  \</span><br><span class="line">-I KPGP-00001.filter.rmdup.bam  -targetIntervals KPGP-00001.filter.rmdup.intervals \</span><br><span class="line">-o KPGP-00001.filter.rmdup.realgn.bam  1&gt;KPGP-00001.filter.rmdup.IndelRealigner.log</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>根据gtf格式的基因注释文件得到人所有基因的染色体坐标</title>
      <link href="/hexo/2017/11/10/2017-11-10_gtf_gene_position/"/>
      <url>/hexo/2017/11/10/2017-11-10_gtf_gene_position/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>原文</strong> ：<a href="http://www.biotrainee.com/thread-472-1-1.html" target="_blank" rel="noopener">http://www.biotrainee.com/thread-472-1-1.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/reference/gtf/gencode</span><br><span class="line"><span class="built_in">cd</span>  ~/reference/gtf/gencode</span><br><span class="line"><span class="comment">## https://www.gencodegenes.org/releases/current.html</span></span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.2wayconspseudos.gtf.gz</span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.long_noncoding_RNAs.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.polyAs.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.annotation.gtf.gz </span><br><span class="line"><span class="comment">## https://www.gencodegenes.org/releases/25lift37.html </span></span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.annotation.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.HGNC.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.EntrezGene.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.RefSeq.gz </span><br><span class="line"></span><br><span class="line">zcat  gencode.v25.long_noncoding_RNAs.gtf.gz |perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;lncRNA.hg38.position</span><br><span class="line">zcat  gencode.v25.2wayconspseudos.gtf.gz     |perl -alne <span class="string">'&#123;next unless $F[2] eq "transcript" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;pseudos.hg38.position</span><br><span class="line">zcat  gencode.v25.annotation.gtf.gz| grep   protein_coding |perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;protein_coding.hg38.position</span><br><span class="line">zcat  gencode.v25.annotation.gtf.gz|perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;allGene.hg38.position</span><br><span class="line"></span><br><span class="line">zcat  gencode.v25lift37.annotation.gtf.gz | grep   protein_coding |perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;protein_coding.hg19.position</span><br><span class="line">zcat  gencode.v25lift37.annotation.gtf.gz | perl -alne <span class="string">'&#123;next unless $F[2] eq "gene" ;/gene_name \"(.*?)\";/; print "$F[0]\t$F[3]\t$F[4]\t$1" &#125;'</span> &gt;allGene.hg19.position</span><br></pre></td></tr></table></figure><h2 id="在R语言中读取GTF文件的最好方法"><a href="#在R语言中读取GTF文件的最好方法" class="headerlink" title="在R语言中读取GTF文件的最好方法"></a>在R语言中读取GTF文件的最好方法</h2><p>下载的TCGA数据是没有注释的，需要从ensemble上面下载GTF文件，现在需要把GTF文件读入R</p><h4 id="第一种方法rtracklayer-import"><a href="#第一种方法rtracklayer-import" class="headerlink" title="第一种方法rtracklayer::import"></a>第一种方法rtracklayer::import</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">source(<span class="string">"https://bioconductor.org/biocLite.R"</span>)</span><br><span class="line">biocLite(<span class="string">"rtracklayer"</span>)</span><br><span class="line">biocLite(<span class="string">"SummarizedExperiment"</span>)</span><br><span class="line">gtf1 &lt;- rtracklayer::<span class="keyword">import</span>(<span class="string">'Homo_sapiens.GRCh38.90.chr.gtf'</span>)</span><br><span class="line">gtf_df &lt;- <span class="keyword">as</span>.<span class="keyword">data</span>.frame(gtf1)</span><br></pre></td></tr></table></figure><p>最终读入27个变量，2612129个观测，测试一下显示的不错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> &lt;- gtf_df[1:5,]</span><br><span class="line">View(<span class="built_in">test</span>)</span><br></pre></td></tr></table></figure><p>取出我需要的gene_id,gene_biotype,gene_name，成为新的数据框</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geneid_df &lt;- dplyr::select(gtf_df,c(gene_name,gene_id,gene_biotype))</span><br></pre></td></tr></table></figure><h4 id="第二种方法read-table"><a href="#第二种方法read-table" class="headerlink" title="第二种方法read.table"></a>第二种方法read.table</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtf2 &lt;- read.table(<span class="string">'Homo_sapiens.GRCh38.90.chr.gtf'</span>, header = <span class="keyword">FALSE</span>, sep = <span class="string">'\t'</span>)</span><br></pre></td></tr></table></figure><p>最后发现，速度奇慢无比,取消参考了Y叔的帖子增加参数，读入成功，需要1分钟,读入9个变量<br> <a href="https://link.jianshu.com?t=https://mp.weixin.qq.com/s?__biz=MzI5NjUyNzkxMg==&amp;mid=2247483986&amp;idx=1&amp;sn=43214f77337bc660a733bbc80ab1124b&amp;chksm=ec43b315db343a03cd51ee6cb96e1646975d08e9ea7a980bed236472b77bc6166e601a977dab&amp;mpshare=1&amp;scene=1&amp;srcid=1116dPlFaunZobi46nhFTAM5#rd" target="_blank" rel="noopener">根据GTF画基因的多个转录本结构</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gtf2 &lt;- read.table(<span class="string">'Homo_sapiens.GRCh38.90.chr.gtf'</span>, stringsAsFactors = F, header = <span class="keyword">FALSE</span>, sep = <span class="string">'\t'</span>,comment = <span class="string">"#"</span>)</span><br><span class="line">test2  &lt;- gtf2[<span class="number">1</span>:<span class="number">5</span>,]</span><br></pre></td></tr></table></figure><h4 id="第三种方法readr包里面的read-table2"><a href="#第三种方法readr包里面的read-table2" class="headerlink" title="第三种方法readr包里面的read_table2"></a>第三种方法readr包里面的read_table2</h4><p>速度很快，有进度条，读入了18个变量，但是最gene_biotype显示不对</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gtf3 &lt;- readr::read_table2(<span class="string">"Homo_sapiens.GRCh38.90.chr.gtf"</span>,comment = <span class="string">"#"</span>)</span><br><span class="line">gtf_df3 &lt;- <span class="keyword">as</span>.<span class="keyword">data</span>.frame(gtf3) #转成<span class="keyword">data</span>.frame</span><br><span class="line">test3 &lt;- gtf_df3[<span class="number">1</span>:<span class="number">5</span>,]</span><br><span class="line">View(test3)</span><br></pre></td></tr></table></figure><h4 id="第四种方法read-table，fread"><a href="#第四种方法read-table，fread" class="headerlink" title="第四种方法read.table，fread"></a>第四种方法read.table，fread</h4><p>读入数据跟read.table一样，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">library</span>(<span class="selector-tag">data</span><span class="selector-class">.table</span>)</span><br><span class="line"><span class="selector-tag">genes</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">fread</span>("<span class="selector-tag">Homo_sapiens</span><span class="selector-class">.GRCh38</span><span class="selector-class">.90</span><span class="selector-class">.chr</span><span class="selector-class">.gtf</span>")</span><br><span class="line"><span class="selector-tag">test4</span>&lt;<span class="selector-tag">-</span> <span class="selector-tag">genes</span><span class="selector-attr">[1:5,]</span></span><br><span class="line"><span class="selector-tag">View</span>(<span class="selector-tag">test4</span>)</span><br></pre></td></tr></table></figure><p><strong>上一步用时12秒，速度极快,只是读入后没有名字，需要自己添加</strong><br> 读入9个变量,跟read.table一样</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setnames(genes, names(genes), <span class="built_in">c</span>(<span class="string">"chr"</span>,<span class="string">"source"</span>,<span class="string">"type"</span>,<span class="string">"start"</span>,<span class="string">"end"</span>,<span class="string">"score"</span>,<span class="string">"strand"</span>,<span class="string">"phase"</span>,<span class="string">"attributes"</span>) )</span><br></pre></td></tr></table></figure><p>可选步骤，type那一项有转录本和gene，选取gene，其他有很多转录本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genes &lt;- genes[<span class="built_in">type</span> == <span class="string">"gene"</span>]</span><br></pre></td></tr></table></figure><p>我要的信息粗存在attributes中，构建函数提取</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">extract_attributes &lt;- function(gtf_attributes, att_of_interest)&#123;</span><br><span class="line">  att &lt;- strsplit(gtf_attributes,<span class="string">"; "</span>)</span><br><span class="line">  att &lt;- gsub(<span class="string">"\""</span>,<span class="string">""</span>,unlist(att))</span><br><span class="line">  <span class="keyword">if</span>(!<span class="keyword">is</span>.<span class="literal">null</span>(unlist(strsplit(att[grep(att_of_interest, att)], <span class="string">" "</span>))))&#123;</span><br><span class="line">    <span class="keyword">return</span>( unlist(strsplit(att[grep(att_of_interest, att)], <span class="string">" "</span>))[<span class="number">2</span>])</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>(NA)&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>举例子解释,加入我们需要gene_id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gtf_attributes &lt;- genes[1,9]</span><br><span class="line">att &lt;- strsplit(gtf_attributes,<span class="string">"; "</span>)</span><br></pre></td></tr></table></figure><p>这一步提示non-character argument，后面我查询才知道, 对于第九列的第一行的的获取两种方式返回的格式不一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">genes[1,9] <span class="comment">#data.frame</span></span><br><span class="line">genes<span class="variable">$attributes</span>[1] <span class="comment">#character</span></span><br></pre></td></tr></table></figure><p>而strsplit的对象是character,重来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gtf_attributes &lt;- genes<span class="variable">$attributes</span>[1]</span><br><span class="line">att &lt;- strsplit(gtf_attributes,<span class="string">"; "</span>)</span><br><span class="line">att &lt;- gsub(<span class="string">"\""</span>,<span class="string">""</span>,unlist(att))</span><br></pre></td></tr></table></figure><p>grep获取位置，获取到内容后分隔,得到的第二个元素是我们需要的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unlist(strsplit(att[grep(<span class="string">"gene_id"</span>, att)], <span class="string">" "</span>))[2]</span><br></pre></td></tr></table></figure><p>利用函数获得基因列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genes<span class="variable">$gene_id</span> &lt;- unlist(lapply(genes<span class="variable">$attributes</span>, extract_attributes, <span class="string">"gene_id"</span>))</span><br></pre></td></tr></table></figure><p>如果我们选择使用第一种方法rtracklayer::import，这些事情都是不需要做的！！！</p><h4 id="总结：rtracklayer-import最简单，fread最快，read-table可选，read-table没戏！"><a href="#总结：rtracklayer-import最简单，fread最快，read-table可选，read-table没戏！" class="headerlink" title="总结：rtracklayer::import最简单，fread最快，read.table可选，read_table没戏！"></a>总结：rtracklayer::import最简单，fread最快，read.table可选，read_table没戏！</h4><p>作者：果子学生信</p><p>链接：<a href="https://www.jianshu.com/p/7f96adec2b0d" target="_blank" rel="noopener">https://www.jianshu.com/p/7f96adec2b0d</a></p><p>来源：简书</p><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>外显子测序数据分析学习笔记</title>
      <link href="/hexo/2017/11/09/2017-11-09_wes/"/>
      <url>/hexo/2017/11/09/2017-11-09_wes/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://taoshengxu.github.io/DocumentGit/html/给学徒的WES数据分析流程.html">给学徒的WES数据分析流程</a>  这个教程没有介绍缺少分析数据下载<br><a href="https://www.bilibili.com/video/av28030610/?p=6" target="_blank" rel="noopener">B站视频</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda install sra-tools</span><br><span class="line">conda install samtools gatk4</span><br><span class="line">conda install -y bcftools vcftools  snpeff</span><br><span class="line">conda install -y multiqc qualimap</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载GATK Bundle 依赖文件</span></span><br><span class="line"><span class="comment">#https://software.broadinstitute.org/gatk/download/bundle</span></span><br><span class="line"><span class="comment">#https://github.com/snewhouse/ngs_nextflow/wiki/GATK-Bundle</span></span><br><span class="line">231M Jul 2 05:14 1000G_phase1.indels.hg19.sites.vcf</span><br><span class="line">1.2M Jul 2 10:45 1000G_phase1.indels.hg19.sites.vcf.idx</span><br><span class="line">11G Jul 2 08:05 dbsnp_138.hg19.vcf</span><br><span class="line">2.5K Jul 1 04:31 hg19.dict</span><br><span class="line">3.0G Jun 30 21:29 hg19.fasta</span><br><span class="line">6.6K Jun 30 22:54 hg19.fasta.amb</span><br><span class="line">944 Jun 30 22:54 hg19.fasta.ann</span><br><span class="line">2.9G Jun 30 22:54 hg19.fasta.bwt</span><br><span class="line">788 Jul 2 01:53 hg19.fasta.fai</span><br><span class="line">739M Jun 30 22:54 hg19.fasta.pac</span><br><span class="line">1.5G Jun 30 23:23 hg19.fasta.sa</span><br><span class="line">87M Jul 2 05:37 Mills_and_1000G_gold_standard.indels.hg19.sites.vcf</span><br><span class="line">2.3M Jul 2 10:45 Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.idx</span><br><span class="line"></span><br><span class="line"><span class="comment">#例如：</span></span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/1000G_phase1.indels.hg19.sites.vcf.gz</span><br><span class="line">ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/1000G_phase1.indels.hg19.sites.vcf.idx.gz</span><br><span class="line">ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/dbsnp_138.hg19.vcf.gz</span><br><span class="line">ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.dict.gz</span><br><span class="line">ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/media/ubuntu/Data2/Reference/index/GATK</span><br></pre></td></tr></table></figure><p><strong>学习提纲</strong>：</p><p>（1）<a href="http://www.bio-info-trainee.com/2735.html" target="_blank" rel="noopener">肿瘤全外显子测序数据分析流程</a> <a href="https://mp.weixin.qq.com/s?__biz=MzAxMDkxODM1Ng==&amp;mid=2247485033&amp;idx=1&amp;sn=eb9865b92879e20c4afe285aeb8dc73c&amp;chksm=9b4846d2ac3fcfc4e3f90c6ec8ff533494f3a43c502e3c8e842dafb7496db137c11434fccea4&amp;mpshare=1&amp;scene=1&amp;srcid=0922Ls8z5WWLuNh7ml25V20r#rd" target="_blank" rel="noopener">微信连接</a></p><p>(2) <a href="https://mp.weixin.qq.com/s?__biz=MzAxMDkxODM1Ng==&amp;mid=2247484873&amp;idx=1&amp;sn=e455578dfac51afece7adb21cb315a17&amp;chksm=9b484572ac3fcc6460b6b9bbb88306f73c399d8e7a96ad8bb472a179a8de518bc70e21a72b0b&amp;mpshare=1&amp;scene=1&amp;srcid=0819fvKioudGMT1TYHXwnXoG#rd" target="_blank" rel="noopener">WES分析七步走</a></p><p>(3) <a href="http://www.bio-info-trainee.com/1108.html" target="_blank" rel="noopener">WES 测序质量控制</a></p><p>(4) <a href="http://www.bio-info-trainee.com/1114.html" target="_blank" rel="noopener">WES（二）snp-calling</a></p><p>(5) <a href="http://www.bio-info-trainee.com/1137.html" target="_blank" rel="noopener">WES（三）snp-filter</a></p><p>(6) <a href="http://www.bio-info-trainee.com/1138.html" target="_blank" rel="noopener">WES（四）不同个体的比较</a></p><p>(7) <a href="http://www.bio-info-trainee.com/1150.html" target="_blank" rel="noopener">WES（五）不同软件比较</a></p><p>(8) <a href="http://www.bio-info-trainee.com/1158.html" target="_blank" rel="noopener">WES（六）用annovar注释</a></p><p>(9) <a href="http://www.bio-info-trainee.com/1159.html" target="_blank" rel="noopener">WES（七）看de novo变异情况</a></p><p>(10) <a href="http://blog.csdn.net/zhu_si_tao/article/details/53321374" target="_blank" rel="noopener">GATK流程</a></p><p>(11) <a href="http://www.bio-info-trainee.com/838.html" target="_blank" rel="noopener">GATK使用注意事项</a></p><p>WES数据分析步骤：A Survey of Computational Tools to Analyze and Interpret Whole Exome Sequencing Data(2016)</p><h1 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h1><p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4812767/" target="_blank" rel="noopener">Whole-exome sequencing identifies MST1R as a genetic susceptibility gene in nasopharyngeal carcinoma</a></p><p>We sequenced the blood samples from 161 NPC cases, including 39 EAO cases, 63 FH+ cases from 52 independent families, and 59 sporadic cases by WES and achieved an average coverage of 49-fold on target (range of 32- to 76-fold). An additional 2,160 NPC cases and 2,433 healthy controls from Hong Kong were further examined for the selected candidate variants. <strong>GEO Accession ID SRA291701</strong></p><p>挑选5个样本进行分析 npc.sra.txt<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">SRX445405</span>    <span class="string">MALE</span>    <span class="string">NPC15</span>   <span class="string">SRR1139956</span>  <span class="string">NPC15F</span>  <span class="literal">NO</span>  <span class="string">SRS540548</span>   <span class="string">NPC15F-T</span></span><br><span class="line"><span class="string">SRX445406</span>    <span class="string">MALE</span>    <span class="string">NPC15</span>   <span class="string">SRR1139958</span>  <span class="string">NPC15F</span>  <span class="literal">NO</span>  <span class="string">SRS540549</span>   <span class="string">NPC15F-N</span></span><br><span class="line"><span class="string">SRX445407</span>    <span class="string">MALE</span>    <span class="string">NPC29</span>   <span class="string">SRR1139966</span>  <span class="string">NPC29F</span>  <span class="literal">YES</span> <span class="string">SRS540550</span>   <span class="string">NPC29F-T</span></span><br><span class="line"><span class="string">SRX445408</span>    <span class="string">MALE</span>    <span class="string">NPC29</span>   <span class="string">SRR1139973</span>  <span class="string">NPC29F</span>  <span class="literal">YES</span> <span class="string">SRS540551</span>   <span class="string">NPC29F-N</span></span><br><span class="line"><span class="string">SRX445409</span>    <span class="string">FEMALE</span>  <span class="string">NPC10</span>   <span class="string">SRR1139999</span>  <span class="string">NPC10F</span>  <span class="literal">NO</span>  <span class="string">SRS540552</span>   <span class="string">NPC10F-T</span></span><br><span class="line"><span class="string">SRX445410</span>    <span class="string">FEMALE</span>  <span class="string">NPC10</span>   <span class="string">SRR1140007</span>  <span class="string">NPC10F</span>  <span class="literal">NO</span>  <span class="string">SRS540553</span>   <span class="string">NPC10F-N</span></span><br><span class="line"><span class="string">SRX445411</span>    <span class="string">FEMALE</span>  <span class="string">NPC34</span>   <span class="string">SRR1140015</span>  <span class="string">NPC34F</span>  <span class="literal">NO</span>  <span class="string">SRS540554</span>   <span class="string">NPC34F-T</span></span><br><span class="line"><span class="string">SRX445412</span>    <span class="string">FEMALE</span>  <span class="string">NPC34</span>   <span class="string">SRR1140023</span>  <span class="string">NPC34F</span>  <span class="literal">NO</span>  <span class="string">SRS540555</span>   <span class="string">NPC34F-N</span></span><br><span class="line"><span class="string">SRX445413</span>    <span class="string">MALE</span>    <span class="string">NPC37</span>   <span class="string">SRR1140044</span>  <span class="string">NPC37F</span>  <span class="literal">YES</span> <span class="string">SRS540556</span>   <span class="string">NPC37F-T</span></span><br><span class="line"><span class="string">SRX445414</span>    <span class="string">MALE</span>    <span class="string">NPC37</span>   <span class="string">SRR1140045</span>  <span class="string">NPC37F</span>  <span class="literal">YES</span> <span class="string">SRS540557</span>   <span class="string">NPC37F-N</span></span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat npc.sra.txt | cut -f 4| <span class="keyword">while</span> <span class="built_in">read</span> id</span><br><span class="line"><span class="comment"># or cut -f 4 npc.sra.txt | while read id</span></span><br><span class="line"><span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$id</span></span><br><span class="line">axel ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP035/SRP035573/<span class="variable">$id</span>/<span class="variable">$id</span>.sra &amp;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat npc.sra.txt | <span class="keyword">while</span> <span class="built_in">read</span> id</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">array=(<span class="variable">$id</span>)</span><br><span class="line"><span class="built_in">echo</span>  <span class="variable">$&#123;array[3]&#125;</span>.sra  <span class="variable">$&#123;array[7]&#125;</span> fastq-dump --gzip --split-3 -A \  </span><br><span class="line">   <span class="variable">$&#123;array[7]&#125;</span>  <span class="variable">$&#123;array[3]&#125;</span>.sra </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>刚刚开始没搞清楚，这个太难了，学了好像暂时也没啥好用的，数据、资料收集到这里，以后有空再学习吧，数据太大了，浪费空间和电费了。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>DNA Methylation甲基化450k,850k芯片</title>
      <link href="/hexo/2017/11/07/2017-11-07_HumanMethylation450/"/>
      <url>/hexo/2017/11/07/2017-11-07_HumanMethylation450/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Illumina-HumanMethylation-BeadChip简介"><a href="#Illumina-HumanMethylation-BeadChip简介" class="headerlink" title="Illumina HumanMethylation BeadChip简介"></a>Illumina HumanMethylation BeadChip简介</h1><p>Illumina最早的甲基化芯片是27K（K代表1000，表示大概可以测到的CpG位点数）的数据，后来增加到了450K（主流的甲基化芯片），而目前illumina已经出了新一代产品EPIC（我习惯称之为850K），但是技术核心在450K已经成熟了，所以分析流程这里以450K为主（也是目前数据库主流的甲基化芯片数据）。</p><p><strong>芯片</strong></p><p>一张芯片包括12个array，也就是一张芯片可以做12个sample，一台机子一次可以跑8张芯片，也就是一共96个sample，每个样本可以测到超过450，000个CpG位点的甲基化信息（大概人所有甲基化位点的1%，但是覆盖了多数CpG岛和启动子区），芯片本身包含一些控制探针可以做质控。</p><p><strong>原理</strong></p><p>简而言之，基于亚硫酸盐处理后的DNA序列杂交的信号探测。亚硫酸盐是甲基化探测的“金标准”，不管是芯片或者甲基化测序，都要先对DNA样品进行亚硫酸盐处理，使非甲基化的C变成U，而甲基化的C保持不变，从而在后续的测序或者杂交后区分出来。450K采用了两种探针对甲基化进行测定，Infinium I采用了两种bead（甲基化M和非甲基化U，如图显示），而II只有一种bead（即甲基化和非甲基化在一起），这也导致了它们在后续荧光探测的不同，450K采用了两种荧光探测信号（红光和绿光）。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/DNA_methylation1.jpg" alt=""></p><p>DNA甲基化指的是包裹在DNA上CG碱基（又叫CpG）的外周的一些蛋白发生变化，进而导致基因或者一些调控因子的表达出现变化，进而导致那些基因或者调控因子控制的表型出现变化，进而导致疾病或者差异的发生。DNA甲基化被认为是表观遗传调控的一种方式，如Cytosine methylation (5-mC)是研究最多的，被认为是哺乳动物中常见的甲基化方式, 最近有一些研究也发现了其他形式的甲基化，如2016年Nature上发表了一篇关于鼠的胚胎干细胞的m6A（N6-methyladenine）形式的甲基化。DAN甲基化被认为对基因表达，染色质重塑，细胞分化，疾病等都有重要影响。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/DNA_methylation2.jpg" alt=""></p><p><strong>甲基化的检测方法</strong></p><p>目前甲基化检测的方法可以概括为三种：芯片、测序、免疫沉淀。具体选择何种方法主要还是根据实验目的和实验室条件了。但目前来说，甲基化芯片技术从覆盖度，检测灵敏度和价格综合考虑，还是性价比相对高。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/DNA_methylation3.jpg" alt=""></p><p><strong>甲基化芯片常见的Glossary</strong></p><ul><li>CpG island: Defned as regions 500 bp, 55% GC and expected/observed CpG ratio of 0.65. 40% of gene promoters contain islands.</li><li>CpG shelves: ~4Kb from islands.</li><li>CpG shores: ~2Kb from islands, 75% of tissuespecifc differentially methylated regions found in shores. Methylation in shores shows higher correlation with gene expression than CpG islands.</li><li>Differentially methylated regions (DMR): Cell-, tissue-, and condition- specifc differences in methylation.</li><li>Enhancer: A short region of DNA that can activate transcription and is often regulated by methylation.</li><li>Hypermethylation: Most cytosines are methylated. Hypomethylation: Most cytosines do not have 5-mC. Euchromatin and active gene promoters are hypomethylated.</li><li>Beta value:通常的甲基化衡量方法被称为“Beta”值; 等于甲基化百分比，并定义为“Meth”除以“Meth + Unmeth”。</li><li>CGI: CpG island 即甲基化岛。</li></ul><p><strong>分析需要考虑的问题</strong></p><ol><li>背景校正</li><li>红光和绿光的校正</li><li>控制芯片的使用（illumina450K本身有一些控制芯片，可以用来做质控，如亚硫酸盐处理效率）</li><li>探针类型（I型和II型）的校正（不同探针类型产生的数据不同）<br>这个问题我们之前关注很多，这里附上两篇文献供大家参考，最终我们选择BMIQ的方法（基于ebayes的原理将II型探针的甲基化水平拉伸到I型水平，如下图显示）来做矫正。(图片来源于第1篇文献)<br>文献1： <a href="http://bioinformatics.oxfordjournals.org/content/29/2/189.short" target="_blank" rel="noopener">http://bioinformatics.oxfordjournals.org/content/29/2/189.short</a><br>文献2： <a href="http://www.tandfonline.com/doi/abs/10.4161/epi.24008" target="_blank" rel="noopener">http://www.tandfonline.com/doi/abs/10.4161/epi.24008</a></li><li>位置的校正（芯片上的不同位置产生的数据可能会有偏差）</li><li>批次的校正（不同的批次做的数据会有偏差）</li><li>探针序列本身是否可靠（有些探针本身位于repeat区或者包含snp等就会影响杂交及最后的结果，应该去除，附上一片参考文献，里边有list可以用来去除不好的探针）<br>文献：<a href="http://bmcgenomics.biomedcentral.com/articles/10.1186/1471-2164-15-51" target="_blank" rel="noopener">http://bmcgenomics.biomedcentral.com/articles/10.1186/1471-2164-15-51</a> </li></ol><p><strong>数据处理</strong></p><ol><li>GenomeStudio<br>GS是illumina开发的软件，基于图形界面的操作处理，适合于没有R及编程基础的人使用，但是使用GS需要权限，本人试过挺难破解的，如果有人可以破解，可以提供给论坛小伙伴使用。</li><li>基于R和bioconductor的pipeline<br>bioconductor里开发了很多package供大家使用，如果你会R，那么处理这个甲基化芯片的数据将变得简单。<br>可以处理450K芯片的package有lumi、minfi、wateRmelon、ChAMP等，没有哪一种就特别好，大家都在不断改进，所以只要你知道大概的流程和需要注意的问题，那么你也可以自己写代码处理，只是package可以帮你省很多事情。下边我会附上我的处理流程图和详解，还有我的代码，我的代码是基于minfi的，我再次强调，代码只是手段，你可以用其他的package（例如我的同事很多使用ChAMP），也许会更好。</li></ol><p><img src="https://taoshengxu.github.io/DocumentGit/img/DNA_methylation4.jpg" alt=""></p><p>流程图详解：</p><ul><li>蓝色部分代表的是有关于数据的准备部分</li><li>红色部分代表的是数据分析部分</li><li>黄色部门代表数据可视化部分</li></ul><p>箭头指示了分析流程，首先是load数据，然后是QC（quality control），然后是normalization，然后是SVD分析（看有没有batch effect）。准备完毕之后，黑点代表了一批质量有保证，经过处理，可以直接上马进行数据分析的数据了。之后的分析，DMP代表找出Differential Methylation Probe（差异化CpG位点），DMR代表找出Differential Methylation Region（差异化CpG区域），Block代表Differential Methylation Block（更大范围的差异化region区域），RefFree代表细胞差异被修正过后再找的DMP，EpiMod是基于基因作用网络的差异化分析。</p><p>我们一般下载或者iscan后的原始数据格式为Idat，首先可以得到每个sample的每个probe的p值和bead数，根据p值和bead数可以进行样本和探针的过滤，过滤之后需要用BMIQ的方法进行I和II型探针的校正，矫正之后去掉那些包含snp之类的不好的探针，最后对数据做batch的校正。校正之后的数据就是预处理后的数据了，可以用于更下游的分析，如差异甲基化和甲基化与表达的关联分析等。<br>我的代码： <a href="https://github.com/wkl1990/illumina-450K-analysis" target="_blank" rel="noopener">https://github.com/wkl1990/illumina-450K-analysis</a> 。</p><h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><ol><li><a href="http://www.biotrainee.com/thread-237-1-1.html" target="_blank" rel="noopener">Illumina HumanMethylation450 BeadChip甲基化450k芯片预处理初探</a></li><li><a href="http://www.bio-info-trainee.com/2823.html" target="_blank" rel="noopener">850K甲基化芯片数据的分析</a></li><li><a href="https://bioconductor.org/packages/release/bioc/vignettes/ChAMP/inst/doc/ChAMP.html" target="_blank" rel="noopener">Bioconductor ChAMP包</a></li><li><a href="http://blog.csdn.net/joshua_hit/article/details/54982018" target="_blank" rel="noopener">Shiny和Plotly实现可交互DNA甲基化分析包ChAMP</a></li></ol>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Chip-Seq 分析</title>
      <link href="/hexo/2017/11/07/2017-11-07_ChIP_seq/"/>
      <url>/hexo/2017/11/07/2017-11-07_ChIP_seq/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>数据获取</strong></p><ol><li>将蛋白交联到DNA上。 也就是保证蛋白和DNA能够结合，找到互作位点。</li><li>通过超声波剪切DNA链。</li><li>加上附上抗体的磁珠用于免疫沉淀靶蛋白。抗体很重要</li><li>接触蛋白交联；纯化DNA</li><li>测序。</li></ol><p><strong>分析流程</strong>：</p><ol><li>质量控制, 用到的是FastQC</li><li>序列比对, Bowtie2或这BWA</li><li>peak calling，此处用的MACS</li><li>peak注释, 这里用的Y叔的ChIPseeker</li></ol><p><img src="https://taoshengxu.github.io/DocumentGit/img/RNASeq_WES.jpeg" alt=""></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/ChIP-Seq.jpg" alt=""></p><h4 id="得到一个物种所有基因的TSS-转录起始位点-区域的bed文件"><a href="#得到一个物种所有基因的TSS-转录起始位点-区域的bed文件" class="headerlink" title="得到一个物种所有基因的TSS(转录起始位点)区域的bed文件"></a>得到一个物种所有基因的TSS(转录起始位点)区域的bed文件</h4><p><a href="https://genome.ucsc.edu/cgi-bin/hgTables" target="_blank" rel="noopener">https://genome.ucsc.edu/cgi-bin/hgTables</a><br>(参阅<a href="http://www.bio-info-trainee.com/2136.html）" target="_blank" rel="noopener">http://www.bio-info-trainee.com/2136.html）</a><br><u>图片中有个错误，要选择output format 为bed 类型</u><br><img src="https://taoshengxu.github.io/DocumentGit/img/mm10_ucsc_refseq_bed.jpg" alt=""></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/Chipseq_Tss_Heatmap_10K.png" alt=""></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHIPSeq  TSS（转录起始位点）信号强度热图.</span><br><span class="line">-<span class="ruby"> 横坐标：TSS 位点上下游（如<span class="number">10</span>kb）坐标</span></span><br><span class="line"><span class="ruby">- 纵坐标：每个基因的在不同位点的信号强度，上面曲线是所有基因信号强度叠加</span></span><br></pre></td></tr></table></figure><p>====================================================</p><p><a href="https://taoshengxu.github.io/DocumentGit/html/给学徒ChIP-seq数据处理流程.html">给学徒ChIP-seq数据处理流程</a> </p><p><a href="https://www.bilibili.com/video/av29255401/?p=6&amp;t=335" target="_blank" rel="noopener">对应的B站视频教程</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#视频代码</span></span><br><span class="line">---------------------------------------------</span><br><span class="line"><span class="comment">##数据下载  或者根据ftp地址迅雷下载  国内下载很慢，不能按照教程的方法</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ` seq 32 50`;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">nohup axel ftp://ftp.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR/SRR391/SRR3910<span class="variable">$&#123;i&#125;</span>/SRR3910<span class="variable">$&#123;i&#125;</span>.sra &amp; </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">---------------------------------------------</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br><span class="line">sudo sh Miniconda3-latest-Linux-x86_64.sh</span><br><span class="line">conda  create -n chipseq  python=2 bwa</span><br><span class="line">conda info --envs</span><br><span class="line"><span class="built_in">source</span> activate chipseq</span><br><span class="line"><span class="comment"># 可以用search先进行检索</span></span><br><span class="line">conda search trim-galore</span><br><span class="line"></span><br><span class="line"><span class="comment">## 保证所有的软件都是安装在 chipseq 这个环境下面</span></span><br><span class="line">conda install -y sra-tools  </span><br><span class="line">conda install -y trim-galore  samtools</span><br><span class="line">conda install -y deeptools homer  meme</span><br><span class="line">conda install -y macs2 bowtie bowtie2 </span><br><span class="line">conda install -c bioconda multiqc</span><br><span class="line"></span><br><span class="line"><span class="comment">##制作config文件，或者写代码 或者直接用excel</span></span><br><span class="line">cut -f 4,7 sra.table |cut -d<span class="string">":"</span> -f 2 |sed <span class="string">'s/ChIPSeq//g'</span> | sed <span class="string">'s/MockIP//g'</span>|sed  <span class="string">'s/^ //'</span> |tr <span class="string">' '</span> <span class="string">'_'</span> |perl -alne <span class="string">'&#123;$h&#123;$F[0]&#125;++ if exists $h&#123;$F[0]&#125;; $h&#123;$F[0]&#125;=1 unless exists $h&#123;$F[0]&#125;;print "$F[0]$h&#123;$F[0]&#125;\t$F[1]"&#125;'</span> &gt; config </span><br><span class="line"></span><br><span class="line"><span class="comment">##fastq-dump从SRA文件中提取fastq文件 </span></span><br><span class="line"><span class="comment">##fastq-dump是sratoolkit软件中的一个功能，</span></span><br><span class="line"><span class="comment">##fastq-dump -h  （查看是否添加完成）</span></span><br><span class="line">dump=fastq-dump</span><br><span class="line">analysis_dir=raw</span><br><span class="line"><span class="comment">## 下面用到的 config 文件，就是上面自行制作的。</span></span><br><span class="line">cat config|<span class="keyword">while</span> <span class="built_in">read</span> id;</span><br><span class="line"><span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$id</span></span><br><span class="line">arr=(<span class="variable">$id</span>)</span><br><span class="line">srr=<span class="variable">$&#123;arr[1]&#125;</span></span><br><span class="line">sample=<span class="variable">$&#123;arr[0]&#125;</span></span><br><span class="line"><span class="comment"># 单端测序数据的sra转fastq</span></span><br><span class="line">nohup <span class="variable">$dump</span> -A  <span class="variable">$sample</span> -O <span class="variable">$analysis_dir</span>  --gzip --split-3  sra/<span class="variable">$srr</span>.sra &amp; </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#Trim Galore是对FastQC和Cutadapt的包装。适用于所有高通量测序，包括RRBS(Reduced Representation #Bisulfite-Seq ), Illumina、Nextera 和smallRNA测序平台的双端和单端数据。主要功能包括两步：</span></span><br><span class="line"><span class="comment">#第一步首先去除低质量碱基，然后去除3' 末端的adapter, 如果没有指定具体的adapter，程序会自动检测前#1million的序列，然后对比前12-13bp的序列是否符合以下类型的adapter.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##这个时候选择trim_galore软件进行过滤，单端测序数据的代码如下；</span></span><br><span class="line">ls ./raw/*gz | <span class="keyword">while</span> <span class="built_in">read</span> fq1;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">nohup trim_galore -q 25 --phred33 --length 25 -e 0.1 --stringency 4 -o ./clean  <span class="variable">$fq1</span> &amp; </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">##走一波QC</span></span><br><span class="line"><span class="built_in">cd</span> ~/project/epi/qc</span><br><span class="line"><span class="comment">## 相对目录需要理解</span></span><br><span class="line">ls ../raw/*gz|xargs fastqc -t 10 -o  ./</span><br><span class="line">ls ../clean/*gz|xargs fastqc -t 10 -o  ./</span><br><span class="line"><span class="comment"># multiqc 对所有qc结果综合一下</span></span><br><span class="line">multiqc ./</span><br><span class="line"></span><br><span class="line"><span class="comment">#构建索引（不建议）</span></span><br><span class="line">nohup time bowtie2-build  /data/reference/mm10/mm10.fa /data/reference/index/bowtie/mm10 1&gt;mm10.bowtie_index.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="comment">## 直接下载索引文件，下载参考基因组索引大小为3.2GB</span></span><br><span class="line">$ mkdir referece &amp;&amp; <span class="built_in">cd</span> reference</span><br><span class="line"><span class="comment">## 断点续传，后台下载</span></span><br><span class="line">wget -c -b ftp://ftp.ccb.jhu.edu/pub/data/bowtie2_indexes/mm10.zip</span><br><span class="line"></span><br><span class="line"><span class="comment">##开始比对过程</span></span><br><span class="line"><span class="built_in">cd</span> align</span><br><span class="line"><span class="comment"># 这个地方搞了好几天都不知道为什么错。原来是存放bowtie2 index后面要带mm10参数才行，比如 ~/bowtie/mm10 是存放mm10索引的目录，在~/bowtie/mm10还要加/mm10才能保证正确的索引到</span></span><br><span class="line">bowtie2_index=/data/reference/index/bowtie/mm10/mm10</span><br><span class="line">ls ../clean/*gz |<span class="keyword">while</span> <span class="built_in">read</span> id</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">file=$(basename <span class="variable">$id</span> )</span><br><span class="line">sample=<span class="variable">$&#123;file%%.*&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$file</span> <span class="variable">$sample</span></span><br><span class="line"><span class="comment">## 比对过程3分钟一个样本</span></span><br><span class="line">bowtie2 -p 5 -x <span class="variable">$bowtie2_index</span> -U <span class="variable">$id</span> | samtools sort -O bam -@ 5 -o -&gt; <span class="variable">$&#123;sample&#125;</span>.bam </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#对bam文件进行QC</span></span><br><span class="line"><span class="built_in">cd</span> align</span><br><span class="line">ls  *.bam  |xargs -i samtools index &#123;&#125; <span class="comment">#构建index</span></span><br><span class="line">ls  *.bam  | <span class="keyword">while</span> <span class="built_in">read</span> id ;<span class="keyword">do</span> (nohup samtools flagstat <span class="variable">$id</span> &gt; $(basename <span class="variable">$id</span> <span class="string">".bam"</span>).<span class="built_in">stat</span> &amp; );<span class="keyword">done</span> <span class="comment">#生成stat文件，可以在这个文件中查看质控</span></span><br><span class="line"><span class="comment">#cat *stat|grep 'N/A'|grep '%'</span></span><br><span class="line">grep <span class="string">'N/A'</span> *.<span class="built_in">stat</span>|grep <span class="string">'%'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##合并bam文件，因为一个样品分成了多个lane进行测序，所以在进行peaks calling的时候，需要把bam进行合并。</span></span><br><span class="line"><span class="comment">## 如果不用循环 samtools merge  control.merge.bam Control_1_trimmed.bam Control_2_trimmed.bam</span></span><br><span class="line"><span class="comment">## 通常我们用批处理。</span></span><br><span class="line"><span class="built_in">cd</span> align</span><br><span class="line">mkdir ../mergeBam</span><br><span class="line">ls *.bam|sed <span class="string">'s/_[0-9]_trimmed.bam//g'</span> |sort -u |<span class="keyword">while</span> <span class="built_in">read</span> id;<span class="keyword">do</span> samtools merge ../mergeBam/<span class="variable">$id</span>.merge.bam <span class="variable">$id</span>*.bam ;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##去除PCR重复</span></span><br><span class="line">conda activate chipseq</span><br><span class="line"><span class="built_in">cd</span> mergeBam</span><br><span class="line">ls  *merge.bam  | <span class="keyword">while</span> <span class="built_in">read</span> id ;<span class="keyword">do</span> (nohup samtools markdup -r <span class="variable">$id</span> $(basename <span class="variable">$id</span> <span class="string">".bam"</span>).rmdup.bam &amp; );<span class="keyword">done</span></span><br><span class="line">ls  *.rmdup.bam  |xargs -i samtools index &#123;&#125; </span><br><span class="line">ls  *.rmdup.bam  | <span class="keyword">while</span> <span class="built_in">read</span> id ;<span class="keyword">do</span> (nohup samtools flagstat <span class="variable">$id</span> &gt; $(basename <span class="variable">$id</span> <span class="string">".bam"</span>).<span class="built_in">stat</span> &amp; );<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##使用macs2进行找peaks</span></span><br><span class="line"><span class="comment">## macs2参数参考上面网页教程</span></span><br><span class="line"><span class="built_in">cd</span>  mergeBam </span><br><span class="line">conda activate chipseq</span><br><span class="line">ls  *merge.bam |cut -d<span class="string">"."</span> -f 1 |<span class="keyword">while</span> <span class="built_in">read</span> id;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="keyword">if</span> [ ! -s <span class="variable">$&#123;id&#125;</span>_summits.bed ];</span><br><span class="line">    <span class="keyword">then</span> </span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$id</span> </span><br><span class="line">        nohup macs2 callpeak -c  Control.merge.bam -t <span class="variable">$id</span>.merge.bam -f BAM -B -g mm -n <span class="variable">$id</span> --outdir ../peaks  2&gt; <span class="variable">$id</span>.<span class="built_in">log</span> &amp;  </span><br><span class="line">    <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span>  </span><br><span class="line"></span><br><span class="line">mkdir dup</span><br><span class="line">mv *rmdup* dup/</span><br><span class="line"><span class="built_in">cd</span> dup/</span><br><span class="line">ls  *.merge.rmdup.bam |cut -d<span class="string">"."</span> -f 1 |<span class="keyword">while</span> <span class="built_in">read</span> id;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="keyword">if</span> [ ! -s <span class="variable">$&#123;id&#125;</span>_rmdup_summits.bed ];</span><br><span class="line">    <span class="keyword">then</span> </span><br><span class="line">      <span class="built_in">echo</span> <span class="variable">$id</span> </span><br><span class="line">      nohup macs2 callpeak -c  Control.merge.rmdup.bam  -t <span class="variable">$id</span>.merge.rmdup.bam  -f BAM -B -g mm -n <span class="variable">$&#123;id&#125;</span>_rmdup --outdir ../peaks 2&gt; <span class="variable">$id</span>.<span class="built_in">log</span> &amp;  </span><br><span class="line">    <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">##使用deeptool是进行可视化</span></span><br><span class="line"><span class="comment">#首先把bam文件转为bw文件</span></span><br><span class="line"><span class="built_in">cd</span>  mergeBam </span><br><span class="line">ls  *.bam  |xargs -i samtools index &#123;&#125; </span><br><span class="line">ls *.bam |<span class="keyword">while</span> <span class="built_in">read</span> id;<span class="keyword">do</span></span><br><span class="line">nohup bamCoverage --normalizeUsing CPM -b <span class="variable">$id</span> -o <span class="variable">$&#123;id%%.*&#125;</span>.bw &amp; </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> dup </span><br><span class="line">ls  *.bam  |xargs -i samtools index &#123;&#125; </span><br><span class="line">ls *.bam |<span class="keyword">while</span> <span class="built_in">read</span> id;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">nohup bamCoverage --normalizeUsing CPM -b <span class="variable">$id</span> -o <span class="variable">$&#123;id%%.*&#125;</span>.rm.bw &amp; </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看tss（转录起始位置）附近的信号强度</span></span><br><span class="line">mkdir tss</span><br><span class="line"><span class="built_in">cd</span> tss</span><br><span class="line">bed=/data/reference/annotation/CHIPSeq/mm10/ucsc_mm10_refSeq.bed</span><br><span class="line"><span class="keyword">for</span> id <span class="keyword">in</span>  /data/DataSet_Experiment/ChIPSeq/chipseq_jimmy/mergeBam/*bw ;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$id</span></span><br><span class="line">file=$(basename <span class="variable">$id</span> )</span><br><span class="line">sample=<span class="variable">$&#123;file%%.*&#125;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sample</span>  </span><br><span class="line">computeMatrix reference-point  --referencePoint TSS  -p 15  \</span><br><span class="line">-b 10000 -a 10000    \</span><br><span class="line">-R  <span class="variable">$bed</span> \</span><br><span class="line">-S <span class="variable">$id</span>  \</span><br><span class="line">--skipZeros  -o matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_10K.gz  \</span><br><span class="line">--outFileSortedRegions regions1_<span class="variable">$&#123;sample&#125;</span>_TSS_10K.bed</span><br><span class="line"><span class="comment"># 输出的gz为文件用于plotHeatmap, plotProfile</span></span><br><span class="line"><span class="comment">##     both plotHeatmap and plotProfile will use the output from   computeMatrix</span></span><br><span class="line">plotHeatmap -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_10K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Heatmap_10K.png</span><br><span class="line">plotHeatmap -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_10K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Heatmap_10K.pdf --plotFileFormat pdf  --dpi 720  </span><br><span class="line">plotProfile -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_10K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Profile_10K.png</span><br><span class="line">plotProfile -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_10K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Profile_10K.pdf --plotFileFormat pdf --perGroup --dpi 720 </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用命令批量提交：nohup bash 10k.sh 1&gt;10k.log &amp;</span></span><br><span class="line"></span><br><span class="line">bed=/data/reference/annotation/CHIPSeq/mm10/ucsc_mm10_refSeq.bed</span><br><span class="line"><span class="keyword">for</span> id <span class="keyword">in</span>  /data/DataSet_Experiment/ChIPSeq/chipseq_jimmy/mergeBam/*bw ;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$id</span></span><br><span class="line">file=$(basename <span class="variable">$id</span> )</span><br><span class="line">sample=<span class="variable">$&#123;file%%.*&#125;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sample</span> </span><br><span class="line"></span><br><span class="line">computeMatrix reference-point  --referencePoint TSS  -p 15  \</span><br><span class="line">-b 2000 -a 2000    \</span><br><span class="line">-R  <span class="variable">$bed</span> \</span><br><span class="line">-S <span class="variable">$id</span>  \</span><br><span class="line">--skipZeros  -o matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_2K.gz  \</span><br><span class="line">--outFileSortedRegions regions1_<span class="variable">$&#123;sample&#125;</span>_TSS_2K.bed</span><br><span class="line"></span><br><span class="line"><span class="comment">##     both plotHeatmap and plotProfile will use the output from   computeMatrix</span></span><br><span class="line">plotHeatmap -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_2K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Heatmap_2K.png</span><br><span class="line">plotHeatmap -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_2K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Heatmap_2K.pdf --plotFileFormat pdf  --dpi 720  </span><br><span class="line">plotProfile -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_2K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Profile_2K.png</span><br><span class="line">plotProfile -m matrix1_<span class="variable">$&#123;sample&#125;</span>_TSS_2K.gz  -out <span class="variable">$&#123;sample&#125;</span>_Profile_2K.pdf --plotFileFormat pdf --perGroup --dpi 720 </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用命令批量提交：nohup bash 2k.sh 1&gt;2k.log &amp;</span></span><br></pre></td></tr></table></figure><p>广告： <a href="https://taoshengxu.github.io/DocumentGit/html/如何使用deeptools处理BAM数据.html">如何使用deeptools处理BAM数据</a>   </p><h3 id="使用R包对找到的peaks文件进行注释"><a href="#使用R包对找到的peaks文件进行注释" class="headerlink" title="使用R包对找到的peaks文件进行注释"></a>使用R包对找到的peaks文件进行注释</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"devtools"</span>)</span><br><span class="line"><span class="keyword">library</span>(devtools) </span><br><span class="line"><span class="comment">#选择安装源</span></span><br><span class="line">local(&#123;</span><br><span class="line">  options( repos  = <span class="string">"https://mirrors.ustc.edu.cn/CRAN/"</span> )</span><br><span class="line">  options( BioC_mirror = <span class="string">"https://mirrors.ustc.edu.cn/bioc/"</span> )</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># Step2 List of the used packages  ----------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##bash </span></span><br><span class="line">sudo apt-get install libcurl4-gnutls-dev <span class="comment">##不然RCurl包安装不了</span></span><br><span class="line">sudo apt-get install libssl-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">##R 3.5</span></span><br><span class="line">install.packages(<span class="string">"RCurl"</span>)</span><br><span class="line">bioPackages &lt;- c(<span class="string">'airway'</span>,<span class="string">'DESeq2'</span>,<span class="string">'edgeR'</span>,<span class="string">'limma'</span>,<span class="string">'ChIPpeakAnno'</span>,<span class="string">'ChIPseeker'</span></span><br><span class="line">                 <span class="string">'TxDb.Hsapiens.UCSC.hg19.knownGene'</span>,</span><br><span class="line">                 <span class="string">'TxDb.Hsapiens.UCSC.hg38.knownGene'</span>,</span><br><span class="line">                 <span class="string">'TxDb.Mmusculus.UCSC.mm10.knownGene'</span>)</span><br><span class="line">install.packages(<span class="string">"BiocManager"</span>)</span><br><span class="line">BiocManager::install(bioPackages, update = <span class="literal">TRUE</span>, ask = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="keyword">library</span>(TxDb.Hsapiens.UCSC.hg19.knownGene) </span><br><span class="line"><span class="keyword">library</span>(TxDb.Mmusculus.UCSC.mm10.knownGene) </span><br><span class="line"><span class="keyword">library</span>(TxDb.Hsapiens.UCSC.hg38.knownGene) </span><br><span class="line"><span class="keyword">library</span>(ChIPpeakAnno) </span><br><span class="line"><span class="keyword">library</span>(ChIPseeker) </span><br><span class="line"></span><br><span class="line">bedPeaksFile = <span class="string">'H3K36me3_summits.bed'</span>; </span><br><span class="line">bedPeaksFile</span><br><span class="line"><span class="comment">## loading packages</span></span><br><span class="line"><span class="keyword">require</span>(ChIPseeker)</span><br><span class="line"><span class="keyword">require</span>(TxDb.Mmusculus.UCSC.mm10.knownGene)</span><br><span class="line">txdb &lt;- TxDb.Mmusculus.UCSC.mm10.knownGene</span><br><span class="line"><span class="keyword">require</span>(clusterProfiler) </span><br><span class="line">peak &lt;- readPeakFile( bedPeaksFile )  </span><br><span class="line">keepChr= !grepl(<span class="string">'_'</span>,seqlevels(peak))</span><br><span class="line">seqlevels(peak, pruning.mode=<span class="string">"coarse"</span>) &lt;- seqlevels(peak)[keepChr]</span><br><span class="line">peakAnno &lt;- annotatePeak(peak, tssRegion=c(-<span class="number">3000</span>, <span class="number">3000</span>), </span><br><span class="line">                         TxDb=txdb, annoDb=<span class="string">"org.Mm.eg.db"</span>) </span><br><span class="line">peakAnno_df &lt;- as.data.frame(peakAnno)</span><br></pre></td></tr></table></figure><h2 id="peaks相关基因集的注释"><a href="#peaks相关基因集的注释" class="headerlink" title="peaks相关基因集的注释"></a>peaks相关基因集的注释</h2><p>都是得到感兴趣基因集，然后注释，分析方法等同于GEO数据挖掘课程或者转录组下游分析： <a href="https://github.com/jmzeng1314/GEO" target="_blank" rel="noopener">https://github.com/jmzeng1314/GEO</a> （有配套视频）</p><h2 id="homer软件来寻找motif"><a href="#homer软件来寻找motif" class="headerlink" title="homer软件来寻找motif"></a>homer软件来寻找motif</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##下载 mm10注释</span></span><br><span class="line">perl  /soft/miniconda3/envs/chipseq/share/homer-4.10-0/configureHomer.pl  -install mm10</span><br><span class="line">du -h  /soft/miniconda3/envs/chipseq/share/homer-4.10-0/data/ <span class="comment">#查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#homer软件找motif整合了两个方法，包括依赖于数据库的查询，和de novo的推断,都是读取ChIP-seq数据上游分析得到的bed格式的peaks文件。</span></span><br><span class="line"><span class="comment"># http://homer.ucsd.edu/homer/ngs/peakMotifs.html</span></span><br><span class="line"><span class="built_in">cd</span>  motif  </span><br><span class="line"><span class="keyword">for</span> id ../peaks/*.bed;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$id</span></span><br><span class="line">file=$(basename <span class="variable">$id</span> )</span><br><span class="line">sample=<span class="variable">$&#123;file%%.*&#125;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sample</span>  </span><br><span class="line">awk <span class="string">'&#123;print $4"\t"$1"\t"$2"\t"$3"\t+"&#125;'</span> <span class="variable">$id</span> &gt;homer_peaks.tmp  </span><br><span class="line">findMotifsGenome.pl homer_peaks.tmp mm10 <span class="variable">$&#123;sample&#125;</span>_motifDir -len 8,10,12</span><br><span class="line">annotatePeaks.pl    homer_peaks.tmp mm10  1&gt;<span class="variable">$&#123;sample&#125;</span>.peakAnn.xls 2&gt;<span class="variable">$&#123;sample&#125;</span>.annLog.txt </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#把上面的代码保存为脚本runMotif.sh，然后运行：nohup bash runMotif.sh 1&gt;motif.log &amp;</span></span><br></pre></td></tr></table></figure><p>===================================================================</p><p>另外一篇文章</p><p><a href="http://www.biotrainee.com/thread-2013-1-1.html" target="_blank" rel="noopener">学习提纲</a>   </p><p><a href="https://taoshengxu.github.io/DocumentGit/html/学员分享Chipseq实战分析流程.html">笔记</a>     </p><p><a href="https://taoshengxu.github.io/DocumentGit/html/一篇文章学会ChIP-seq分析_上.html">一篇文章学会ChIP-seq分析1</a>      <a href="https://taoshengxu.github.io/DocumentGit/html/一篇文章学会ChIP-seq分析_下.html">一篇文章学会ChIP-seq分析2</a> </p><p> <a href="https://guangchuangyu.github.io/cn/2017/10/chipseeker-visualization/" target="_blank" rel="noopener">ChIPseq从入门到放弃</a></p><h4 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1.基础知识"></a>1.基础知识</h4><ul><li>peak calling的统计学原理 <a href="http://www.plob.org/2014/05/08/7227.html" target="_blank" rel="noopener">http://www.plob.org/2014/05/08/7227.html</a></li><li>根据比对的bam文件来对peaks区域可视化 <a href="http://www.bio-info-trainee.com/1843.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/1843.html</a></li><li>wig、bigWig和bedgraph文件详解 <a href="http://www.bio-info-trainee.com/1815.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/1815.html</a></li><li>【综述】ChIP-seq guidelines and practices of the ENCODE and modENCODE consortia. <a href="https://www.ncbi.nlm.nih.gov/pubmed/22955991" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/pubmed/22955991</a></li></ul><h4 id="2-Chip-Seq测序的统计学原理"><a href="#2-Chip-Seq测序的统计学原理" class="headerlink" title="2.Chip-Seq测序的统计学原理"></a>2.Chip-Seq测序的统计学原理</h4><p>TF在基因组上的结合其实是一个随机过程，基因组的每个位置其实都有机会结合某个TF，只是概率不一样，说白了，peak出现的位置，是TF结合的热点，而peak-calling就是为了找到这些热点。</p><p>如何定义热点呢？通俗地讲，热点是这样一些位置，这些位置多次被测得的read所覆盖（我们测的是一个细胞群体，read出现次数多，说明该位置被TF结合的几率大）。那么，read数达到多少才叫多？这就要用到统计检验喽。假设TF在基因组上的分布是没有任何规律的，那么，测序得到的read在基因组上的分布也必然是随机的，某个碱基上覆盖的read的数目应该服从二项分布。这其实和高中大学课本上抽小球的过程是类似的。当n很大，p很小时，二项分布可以近似用泊松分布替代。</p><script type="math/tex; mode=display">\lambda=n \ast p, p=\frac{l}{s}</script><p>\(\lambda\)是泊松分布唯一的参数，n是测序得到的read总数目，l是单个read的长度，s是基因组的大小。有了分布，我们可以算出在某个置信概率（如0.00001）下，随机情况下，某个碱基上可以覆盖的read的数目的最小值，当实际观察到的read数目超过这个值（单侧检验）时，我们认为该碱基是TF的一个结合热点。反过来，针对每一个read数目，我们也可以算出对应的置信概率P。<br>但是，这只是一个简化的模型，实际情况要复杂好多。比如，由于测序、mapping过程内在的偏好性，以及不同染色质间的差异性，相比全基因组，某些碱基可能内在地会被更多的read所覆盖，这种情况得到的很多peak可能都是假的。MACS考虑到了这一点，当对某个碱基进行假设检验时，MACS只考虑该碱基附近的染色质区段（如10k），此时，上述公式中n表示附近10k区间内的read数目，s被置为10k。当有对照组实验（Control，相比实验组，没有用抗体捕获TF，或用了一个通用抗体）存在时，利用Control组的数据构建泊松分布，当没有Control时，利用实验组，稍大一点的局部区间（比如50k）的数据构建泊松分布。<br>这儿还有一个问题，read只是跟随着TF一起沉淀下来的DNA fragment的末端，read的位置并不是真实的TF结合的位置。所以在peak-calling之前，延伸read是必须的。不同TF大小不一样，对read延伸的长度也理应不同。我们知道，测得的read最终其实会近似地平均分配到正负链上，这样，对于一个TF结合热点而言，read在附近正负链上会近似地形成“双峰”。MACS会以某个window size扫描基因组，统计每个window里面read的富集程度，然后抽取（比如1000个）合适的（read富集程度适中，过少，无法建立模型，过大，可能反映的只是某种偏好性）window作样本，建立“双峰模型”。最后，两个峰之间的距离就被认为是TF的长度D，每个read将延伸D/2的长度。</p><h4 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h4><p><a href="https://www.ncbi.nlm.nih.gov/pubmed/23273917" target="_blank" rel="noopener">RYBP and Cbx7 define specific biological functions of polycomb complexes in mouse embryonic stem cells</a></p><p><a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE42466" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE42466</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=204;i&lt;=209;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">axel ftp://ftp.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR/SRR620/SRR620<span class="variable">$i</span>/SRR620<span class="variable">$i</span>.sra &amp;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">ls *sra |<span class="keyword">while</span> <span class="built_in">read</span> id; <span class="keyword">do</span> fastq-dump –split-3 <span class="variable">$id</span> &amp; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>注意文件： 这里要注意是双端测序还是单端测序。</p><p>fastq-dump 转换sra文件成fastq/fasta 文件。</p><ul><li>pair-end: fastq-dump —split-3 *.sra</li><li>single-end: fastq-dump <em>.sra 或者 fastq-dump —fasta </em>sra</li></ul><h4 id="下载参考基因组-建立bowtie2索引"><a href="#下载参考基因组-建立bowtie2索引" class="headerlink" title="下载参考基因组,建立bowtie2索引"></a>下载参考基因组,建立bowtie2索引</h4><p>索引可以自己build，也可以下载 ftp://ftp.ccb.jhu.edu/pub/data/bowtie2_indexes/mm10.zip<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p  /data/reference/genome/mm10</span><br><span class="line"><span class="built_in">cd</span> /data/reference/genome/mm10</span><br><span class="line">axel http://hgdownload.cse.ucsc.edu/goldenPath/mm10/bigZips/chromFa.tar.gz</span><br><span class="line">tar zvxf chromFa.tar.gz </span><br><span class="line">cat *.fa &gt; mm10.fa</span><br><span class="line">rm chr*.fa </span><br><span class="line"></span><br><span class="line">mkdir -p /data/reference/index/bowtie</span><br><span class="line"><span class="built_in">cd</span> /data/reference/index/bowtie</span><br><span class="line">nohup time bowtie2-build  /data/reference/genome/mm10/mm10.fa  /data/reference/index/bowtie/mm10 1&gt;mm10.bowtie_index.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p><h1 id="数据处理与分析"><a href="#数据处理与分析" class="headerlink" title="数据处理与分析"></a>数据处理与分析</h1><h2 id="质控"><a href="#质控" class="headerlink" title="质控"></a>质控</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls *fastq <span class="string">|xargs fastqc -t 10</span></span><br></pre></td></tr></table></figure><p>发现3端质量有点问题，我就用了-3 5—local参数，</p><h2 id="序列拼接"><a href="#序列拼接" class="headerlink" title="序列拼接"></a>序列拼接</h2><p>bowtie 短序列比对工具，用bowtie2软件把测序得到的fastq文件比对到mm10参考基因组上面<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /data/ChIPSeq</span><br><span class="line">bowtie2 -p <span class="number">6</span> -<span class="number">3</span> <span class="number">5</span> --<span class="keyword">local</span> -<span class="keyword">x</span> /data/reference/<span class="keyword">index</span>/bowtie/mm1<span class="number">0</span> -U SRR620204.fast<span class="string">q | samtools sort -O bam -o ring1B.bam</span></span><br><span class="line"><span class="string">bowtie2 -p 6 -3 5 --local -x /data/reference/index/bowtie/mm10 -U SRR620205.fastq |</span> samtools <span class="keyword">sort</span> -O bam -o cbx7.bam</span><br><span class="line">bowtie2 -p <span class="number">6</span> -<span class="number">3</span> <span class="number">5</span> --<span class="keyword">local</span> -<span class="keyword">x</span> /data/reference/<span class="keyword">index</span>/bowtie/mm1<span class="number">0</span> -U SRR620206.fast<span class="string">q | samtools sort -O bam -o suz12.bam</span></span><br><span class="line"><span class="string">bowtie2 -p 6 -3 5 --local -x /data/reference/index/bowtie/mm10 -U SRR620207.fastq |</span> samtools <span class="keyword">sort</span> -O bam -o RYBP.bam</span><br><span class="line">bowtie2 -p <span class="number">6</span> -<span class="number">3</span> <span class="number">5</span> --<span class="keyword">local</span> -<span class="keyword">x</span> /data/reference/<span class="keyword">index</span>/bowtie/mm1<span class="number">0</span> -U SRR620208.fast<span class="string">q | samtools sort -O bam -o IgGold.bam</span></span><br><span class="line"><span class="string">bowtie2 -p 6 -3 5 --local -x /data/reference/index/bowtie/mm10 -U SRR620209.fastq |</span> samtools <span class="keyword">sort</span> -O bam -o IgG.bam</span><br></pre></td></tr></table></figure></p><h2 id="call-peaks"><a href="#call-peaks" class="headerlink" title="call peaks"></a>call peaks</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##参数解释</span><br><span class="line">##-m 建立“双峰模型”用到，默认就算10 30，-p p-value 大于 1e-5，</span><br><span class="line">##-f 文件来源是bam格式，-g 基因组大小是小鼠的（代号mm），-n 起名字的话叫 cbx7 </span><br><span class="line">nohup macs2 callpeak -c IgGold.bam -t suz12.bam -m 10 30 -p 1e-5 -f BAM -g mm -n suz12 2&gt;suz12.masc2.log &amp;</span><br><span class="line">nohup macs2 callpeak -c IgGold.bam -t ring1B.bam -m 10 30 -p 1e-5 -f BAM -g mm -n ring1B 2&gt;ring1B.masc2.log &amp;</span><br><span class="line">nohup macs2 callpeak -c IgG.bam -t cbx7.bam -m 10 30 -p 1e-5 -f BAM -g mm -n cbx7 2&gt;cbx7.masc2.log &amp;</span><br><span class="line">nohup macs2 callpeak -c IgG.bam -t RYBP.bam -m 10 30 -p 1e-5 -f BAM -g mm -n RYBP 2&gt;RYBP.masc2.log &amp;</span><br></pre></td></tr></table></figure><h2 id="bam转换成bw文件"><a href="#bam转换成bw文件" class="headerlink" title="bam转换成bw文件"></a>bam转换成bw文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ls *.bam |while read id; do samtools index $id $id.bai; done</span><br><span class="line">ls *bam |while read id</span><br><span class="line">do </span><br><span class="line">  file=$(basename $id )</span><br><span class="line">  sample=$&#123;file%%.*&#125;</span><br><span class="line">  echo $sample</span><br><span class="line">  bamCoverage -b $id -o $sample.bw ## 这里有个参数，-p 10 --normalizeUsingRPKM</span><br><span class="line">  computeMatrix reference-point --referencePoint TSS -b 10000 -a 10000 -R /data/reference/annotation/ChIPSeq/mm10/ucsc.refseq.bed -S $sample.bw --skipZeros -o matrix1_$&#123;sample&#125;_TSS.gz --outFileSortedRegions regions1_$&#123;sample&#125;_genes.bed</span><br><span class="line">  plotHeatmap -m matrix1_$&#123;sample&#125;_TSS.gz -out $&#123;sample&#125;.png</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>结果文件不只是上述提到的一类，还有如下格式：</p><ul><li>NAMEpeaks.xls: 以表格形式存放peak信息，虽然后缀是xls，但其实能用文本编辑器打开，和bed格式类似，但是以1为基，而bed文件是以0为基.也就是说xls的坐标都要减一才是bed文件的坐标</li><li>NAMEpeaks.narrowPeak NAMEpeaks.broadPeak 类似。后面4列表示为， integer score for display， fold-change，-log10pvalue，-log10qvalue，relative summit position to peak start。内容和NAMEpeaks.xls基本一致，适合用于导入R进行分析。</li><li>NAMEsummits.bed：记录每个peak的peak summits，话句话说就是记录极值点的位置。MACS建议用该文件寻找结合位点的motif。 </li><li>NAMEmodel.r，能通过$ Rscript NAME_model.r作图，得到是基于你提供数据的peak模型</li></ul><h2 id="计算peak数"><a href="#计算peak数" class="headerlink" title="计算peak数"></a>计算peak数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc -l *summits.bed</span><br></pre></td></tr></table></figure><p>下载原作者的peak数据,可以用于分析结果比较<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE42nnn/GSE42466/suppl/GSE42466_RYBP_peaks_5.txt.gz</span><br><span class="line">gzip -d GSE42466_RYBP_peaks_5.txt.gz</span><br><span class="line">mv GSE42466_RYBP_peaks_5.txt RYBP2_summits.bed</span><br></pre></td></tr></table></figure></p><h2 id="整合所有的chipseq的bam文件，画基因的TSS附近的profile和heatmap图"><a href="#整合所有的chipseq的bam文件，画基因的TSS附近的profile和heatmap图" class="headerlink" title="整合所有的chipseq的bam文件，画基因的TSS附近的profile和heatmap图"></a>整合所有的chipseq的bam文件，画基因的TSS附近的profile和heatmap图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">computeMatrix reference-point -p 10 --referencePoint TSS -b 2000 -a 2000 -S *bw -R /data/reference/annotation/ChIPSeq/mm10/ucsc.refseq.bed --skipZeros -o tmp4.mat.gz</span><br><span class="line">plotHeatmap -m tmp4.mat.gz -out tmp4.merge.png</span><br><span class="line">plotProfile --dpi 720 -m tmp4.mat.gz -out tmp4.profile.pdf --plotFileFormat pdf --perGroup</span><br><span class="line">plotHeatmap --dpi 720 -m tmp4.mat.gz -out tmp4.merge.pdf --plotFileFormat pdf</span><br></pre></td></tr></table></figure><h2 id="整合所有的chipseq的bam文件，画基因的genebody附近的profile和heatmap图"><a href="#整合所有的chipseq的bam文件，画基因的genebody附近的profile和heatmap图" class="headerlink" title="整合所有的chipseq的bam文件，画基因的genebody附近的profile和heatmap图"></a>整合所有的chipseq的bam文件，画基因的genebody附近的profile和heatmap图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">computeMatrix scale-regions -p 10 -S *bw -R /data/reference/annotation/ChIPSeq/mm10/ucsc.refseq.bed -b 3000 -a 3000 -m 5000 --skipZeros -o tmp5.mat.gz</span><br><span class="line">plotHeatmap -m tmp5.mat.gz -out tmp5.merge.png</span><br><span class="line">plotProfile --dpi 720 -m tmp5.mat.gz -out tmp5.profile.pdf --plotFileFormat pdf --perGroup</span><br><span class="line">plotHeatmap --dpi 720 -m tmp5.mat.gz -out tmp5.merge.pdf --plotFileFormat pdf</span><br></pre></td></tr></table></figure><h1 id="结果注释与可视化"><a href="#结果注释与可视化" class="headerlink" title="结果注释与可视化"></a>结果注释与可视化</h1><p>ChIPseeker R package的功能分为三类: </p><ul><li>注释：提取peak附近最近的基因， 注释peak所在区域 </li><li>比较：估计ChIP peak数据集中重叠部分的显著性；整合GEO数据集，以便于将当前结果和已知结果比较 </li><li>可视化： peak的覆盖情况；TSS区域结合的peak的平均表达谱和热图；基因组注释；TSS距离；peak和基因的重叠。</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> (<span class="string">"https://bioconductor.org/biocLite.R"</span>)</span><br><span class="line">biocLite(<span class="string">"ChIPseeker"</span>)</span><br><span class="line">biocLite(<span class="string">"org.Mm.eg.db"</span>)</span><br><span class="line">biocLite(<span class="string">"TxDb.Mmusculus.UCSC.mm10.knownGene"</span>)</span><br><span class="line">biocLite(<span class="string">"clusterProfiler"</span>)</span><br><span class="line">biocLite(<span class="string">"ReactomePA"</span>)</span><br><span class="line">biocLite(<span class="string">"DOSE"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(<span class="string">"ChIPseeker"</span>)</span><br><span class="line"><span class="keyword">library</span>(<span class="string">"org.Mm.eg.db"</span>)</span><br><span class="line"><span class="keyword">library</span>(<span class="string">"TxDb.Mmusculus.UCSC.mm10.knownGene"</span>)</span><br><span class="line">txdb &lt;- TxDb.Mmusculus.UCSC.mm10.knownGene</span><br><span class="line"><span class="keyword">library</span>(<span class="string">"clusterProfiler"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读入bed文件</span></span><br><span class="line">ring1B &lt;- readPeakFile(<span class="string">"F:/Chip-seq_exercise/ring1B_peaks.narrowPeak"</span>)</span><br><span class="line"><span class="comment">#查看peak在全基因组的位置</span></span><br><span class="line">covplot(ring1B)<span class="comment">##全基因组</span></span><br><span class="line">covplot(ring1B,chrs=c(<span class="string">"chr17"</span>, <span class="string">"chr18"</span>))   <span class="comment">#指定染色体</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Average Profile of ChIP peaks binding to TSS region</span></span><br><span class="line"><span class="comment">#(Confidence interval estimated by bootstrap method)</span></span><br><span class="line">plotAvgProf(tagMatrix, xlim=c(-<span class="number">3000</span>, <span class="number">3000</span>), conf = <span class="number">0.95</span>, resample = <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p><strong>peak的注释</strong></p><p>peak的注释用annotatePeak()函数，</p><ul><li>TSS (transcription start site) region 可以自己设定，默认是（-3000，3000），</li><li>TxDb 是指某个物种的基因组，例如TxDb.Hsapiens.UCSC.hg38.knownGene, TxDb.Hsapiens.UCSC.hg19.knownGene for human genome hg38 and hg19, TxDb.Mmusculus.UCSC.mm10.knownGene and TxDb.Mmusculus.UCSC.mm9.knownGene for mouse mm10 and mm9.</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">peakAnno &lt;- annotatePeak(ring1B, tssRegion=c(-<span class="number">3000</span>, <span class="number">3000</span>),</span><br><span class="line">TxDb=txdb, annoDb=<span class="string">"org.Mm.eg.db"</span>)</span><br><span class="line"><span class="comment">#可视化 Pie and Bar plot</span></span><br><span class="line">plotAnnoBar(peakAnno)</span><br><span class="line">vennpie(peakAnno)</span><br><span class="line">upsetplot(peakAnno)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可视化TSS区域的TF binding loci</span></span><br><span class="line">plotDistToTSS(peakAnno,</span><br><span class="line">title=<span class="string">"Distribution of transcription factor-binding loci\nrelative to TSS"</span>)</span><br></pre></td></tr></table></figure><p><strong>多个peak的比较</strong></p><p>多个peak set注释时，先构建list,然后用lapply.list(name1=bed_file1,name2=bed_file2) RYBP的数据有问题，这里加上去，会一直报错。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">peaks &lt;- list(<span class="name">cbx7=cbx7</span>,ring1B=ring1B,suz12=suz12)</span><br><span class="line">promoter &lt;- getPromoters(<span class="name">TxDb=txdb</span>, upstream=3000, downstream=3000)</span><br><span class="line">tagMatrixList &lt;- lapply(<span class="name">peaks</span>, getTagMatrix, windows=promoter)</span><br><span class="line">plotAvgProf(<span class="name">tagMatrixList</span>, xlim=c(<span class="name">-3000</span>, <span class="number">3000</span>))</span><br><span class="line">plotAvgProf(<span class="name">tagMatrixList</span>, xlim=c(<span class="name">-3000</span>, <span class="number">3000</span>), conf=0.<span class="number">95</span>,resample=500, facet=<span class="string">"row"</span>)</span><br><span class="line">tagHeatmap(<span class="name">tagMatrixList</span>, xlim=c(<span class="name">-3000</span>, <span class="number">3000</span>), color=NULL)</span><br><span class="line"></span><br><span class="line">#ChIP peak annotation comparision</span><br><span class="line">peakAnnoList &lt;- lapply(<span class="name">peaks</span>, annotatePeak, TxDb=txdb,</span><br><span class="line">tssRegion=c(<span class="name">-3000</span>, <span class="number">3000</span>), verbose=FALSE)</span><br><span class="line">plotAnnoBar(<span class="name">peakAnnoList</span>)</span><br><span class="line">plotDistToTSS(<span class="name">peakAnnoList</span>)</span><br><span class="line"></span><br><span class="line">#Overlap of peaks and annotated genes</span><br><span class="line">genes= lapply(<span class="name">peakAnnoList</span>, function(<span class="name">i</span>) as.data.frame(<span class="name">i</span>)$geneId)</span><br><span class="line">vennplot(<span class="name">genes</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown+Rmarkdown+Shiny手册</title>
      <link href="/hexo/2017/11/06/2017-11-06_Markdown_Rmarkdown_Shiny/"/>
      <url>/hexo/2017/11/06/2017-11-06_Markdown_Rmarkdown_Shiny/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/Markdown+RMarkdown+Shiny.pdf">Markdown+Rmarkdown+Shiny手册</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>常用生物信息学格式介绍</title>
      <link href="/hexo/2017/11/06/2017-11-06_Data_format/"/>
      <url>/hexo/2017/11/06/2017-11-06_Data_format/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://ju.outofmemory.cn/entry/193943" target="_blank" rel="noopener">原文</a> <a href="https://taoshengxu.github.io/DocumentGit/pdf/常用生物信息学格式介绍.pdf">PDF</a></p><ul><li>fasta</li><li>fastq</li><li>gff2</li><li>gtf(gff2.5)</li><li>gff3</li><li>bed</li><li>sam、bam </li><li>vcf</li></ul><p>另外，有wig、bigWig和bedgraph文件详解，仅仅是为了追踪参考基因组的各个区域的覆盖度，测序深度！而且这些定义好的文件，可以无缝连接到UCSC的Genome Browser工具里面进行可视化！<br><a href="http://www.bio-info-trainee.com/1815.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/1815.html</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>ENCODE计划数据,千人基因组计划数据,Roadmap计划数据</title>
      <link href="/hexo/2017/11/06/2017-11-06_ENCODE_Data/"/>
      <url>/hexo/2017/11/06/2017-11-06_ENCODE_Data/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://www.bio-info-trainee.com/1825.html" target="_blank" rel="noopener">From Jimmy 原文1</a></p><p><a href="http://www.bio-info-trainee.com/1841.html" target="_blank" rel="noopener">From Jimmy 原文2</a></p><p><a href="http://www.bio-info-trainee.com/1339.html" target="_blank" rel="noopener">From Jimmy 原文3</a></p><p>DNA元件百科全书(Encyclopedia of DNA Elements, ENCODE)ENCODE计划的重要性我就不多说了，如果大家还不是很了解，可以直接跳到本文末尾去下载一下ENCODE教程，好好学习。该计划采用以下几种高通量测序技术来刻画了超过100种不同的细胞系或者组织内的全基因组范围内的基因调控元件信息。本来只是针对人类的，后来对mouse以及fly等模式生物也开始测这些数据并进行分析了， 叫做 modENCODE.</p><ul><li>chromatin structure (5C)</li><li>open chromatin (DNase-seq and FAIRE-seq)</li><li>histone modifications and DNA-binding of over 100 transcription factors (ChIP-seq)</li><li>RNA transcription (RNAseq and CAGE)</li></ul><p>目前所有数据均全部公开(<a href="http://genome.ucsc.edu/ENCODE/" target="_blank" rel="noopener">http://genome.ucsc.edu/ENCODE/</a> )，ENCODE results from 2007 and later are available from the ENCODE Project Portal, encodeproject.org. 并以30篇论文在Nature、Science、Cell、JBC、Genome Biol、Genome Research同时发表(<a href="http://www.nature.com/encode" target="_blank" rel="noopener">http://www.nature.com/encode</a> )。<br><strong>所有数据从raw data形式的原始测序数据到比对后的信号文件以及分析好的有意的peaks文件都可以下载</strong>。</p><p>我这里根据自己的学习情况，简单介绍一些ENCODE计划数据下载方式，包括ENCODE官网下载,UCSC下载，ENSEMBL下载，broad研究所数据，IHEC存放的数据，还有GEO下载这6种形式！！！</p><h1 id="UCSC"><a href="#UCSC" class="headerlink" title="UCSC"></a>UCSC</h1><p>直接浏览文件，根据文件夹分类及文件名就可以任意方式下载自己感兴趣的数据</p><p><a href="http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/" target="_blank" rel="noopener">http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/</a></p><p>大家可能会比较习惯用UCSC提供的Genome Browser工具来可视化CHIP-seq的结果，而且Genome Browser里面非常多的选项可以控制各种在线资料是否跟你的数据一起显示来做对比，所以它必然有ftp服务器存放这些数据，其中比较出名的就是ENCODE计划的相关数据啦.</p><h1 id="ENCODE计划的官网下载"><a href="#ENCODE计划的官网下载" class="headerlink" title="ENCODE计划的官网下载"></a>ENCODE计划的官网下载</h1><p><a href="https://www.encodeproject.org/pipelines/" target="_blank" rel="noopener">https://www.encodeproject.org/pipelines/</a></p><p>官网的数据下载，做得像是一个购物网站，大家可以根据自己的需求把数据添加到购物篮，然后统一下载。</p><p>This document describes what data are available at the ENCODE Portal, ways to get started searching and downloading data, and an overview to how the metadata describing the assays and reagents are organized. ENCODE data can be visualized and accessed from other resources, including the UCSC Genome Browser and ENSEMBL.<br>进入 <a href="https://www.encodeproject.org/matrix/?type=Experiment" target="_blank" rel="noopener">https://www.encodeproject.org/matrix/?type=Experiment</a> 可以看到里面列出了173种细胞系，148种组织，还有一堆癌症样本的，包括CHIP-seq，DNase-seq等在内的十几种高通量测序数据。</p><h1 id="GEO"><a href="#GEO" class="headerlink" title="GEO"></a>GEO</h1><p><a href="http://www.ncbi.nlm.nih.gov/geo/info/ENCODE.html" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/geo/info/ENCODE.html</a></p><h1 id="Broad-研究所托管的ENCODE计划数据"><a href="#Broad-研究所托管的ENCODE计划数据" class="headerlink" title="Broad 研究所托管的ENCODE计划数据"></a>Broad 研究所托管的ENCODE计划数据</h1><p> <a href="http://www.broadinstitute.org/~anshul/projects/encode" target="_blank" rel="noopener">http://www.broadinstitute.org/~anshul/projects/encode</a></p><p>原始数据在：<a href="http://www.broadinstitute.org/~anshul/projects/encode/rawdata/" target="_blank" rel="noopener">http://www.broadinstitute.org/~anshul/projects/encode/rawdata/</a></p><h1 id="iHEC"><a href="#iHEC" class="headerlink" title="iHEC"></a>iHEC</h1><p><a href="http://epigenomesportal.ca/ihec/download.html" target="_blank" rel="noopener">http://epigenomesportal.ca/ihec/download.html</a></p><p>以文件夹文件的形式直接浏览，根据自己的需求下载即可,除了ENCODE计划的数据，还有Blueprint计划和roadmap计划的数据都可以下载</p><h1 id="ENSEMBL"><a href="#ENSEMBL" class="headerlink" title="ENSEMBL"></a>ENSEMBL</h1><p><a href="http://asia.ensembl.org/info/website/tutorials/encode.html" target="_blank" rel="noopener">http://asia.ensembl.org/info/website/tutorials/encode.html</a></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>如果你对ENCODE计划不是很了解，可以先看看一些教程：<br>NIH提供的ENCODE计划相关教程： <a href="https://www.genome.gov/27553900/encode-tutorials/" target="_blank" rel="noopener">https://www.genome.gov/27553900/encode-tutorials/</a></p><p><a href="https://www.genome.gov/27562350/encode-workshop-april-2015-keystone-symposia/" target="_blank" rel="noopener">https://www.genome.gov/27562350/encode-workshop-april-2015-keystone-symposia/</a></p><p><a href="https://www.genome.gov/27561253/encode-workshop-tutorial-october-2014-ashg/" target="_blank" rel="noopener">https://www.genome.gov/27561253/encode-workshop-tutorial-october-2014-ashg/</a></p><p><a href="https://www.genome.gov/27553901/encode-tutorial-may-2013-biology-of-genomes-cshl/" target="_blank" rel="noopener">https://www.genome.gov/27553901/encode-tutorial-may-2013-biology-of-genomes-cshl/</a></p><p><a href="https://www.genome.gov/27563006/encoderoadmap-epigenomics-tutorial-october-2015-ashg/" target="_blank" rel="noopener">https://www.genome.gov/27563006/encoderoadmap-epigenomics-tutorial-october-2015-ashg/</a></p><p><a href="https://www.genome.gov/27555330/encoderoadmap-epigenomics-tutorial-october-2013-ashg/" target="_blank" rel="noopener">https://www.genome.gov/27555330/encoderoadmap-epigenomics-tutorial-october-2013-ashg/</a></p><p><a href="https://www.genome.gov/27551933/encoderoadmap-epigenomics-tutorial-nov-2012-ashg/" target="_blank" rel="noopener">https://www.genome.gov/27551933/encoderoadmap-epigenomics-tutorial-nov-2012-ashg/</a></p><p><a href="http://useast.ensembl.org/info/website/tutorials/encode.html" target="_blank" rel="noopener">http://useast.ensembl.org/info/website/tutorials/encode.html</a></p><p><a href="https://www.encodeproject.org/tutorials/" target="_blank" rel="noopener">https://www.encodeproject.org/tutorials/</a></p><p><a href="https://www.encodeproject.org/tutorials/encode-meeting-2016/" target="_blank" rel="noopener">https://www.encodeproject.org/tutorials/encode-meeting-2016/</a></p><p><a href="https://www.encodeproject.org/tutorials/encode-users-meeting-2015/" target="_blank" rel="noopener">https://www.encodeproject.org/tutorials/encode-users-meeting-2015/</a></p><p>DNA元件百科全书(Encyclopedia of DNA Elements, ENCODE)项目旨在描述人类基因组中所编码的全部功能性序列元件。ENCODE计划于2003年9月正式启动，吸引了来自美国、英国、西班牙、日本和新加坡五国32个研究机构的440多名研究人员的参与，经过了9年的努力，研究了147个组织类型，进行了1478次实验，获得并分析了超过15万亿字节的原始数据，确定了400万个基因开关，明确了哪些DNA片段能打开或关闭特定的基因，以及不同类型细胞之间的“开关”存在的差异。证明所谓“垃圾DNA”都是十分有用的基因成分，担任着基因调控重任。证明人体内没有一个DNA片段是无用的。</p><hr><h1 id="千人基因组计划"><a href="#千人基因组计划" class="headerlink" title="千人基因组计划"></a>千人基因组计划</h1><p>由于时间跨度比较长，最终的数据不只是一千人，最新版共有NA编号开头的1182个人，HG开头的1768个人！它的官方网站是：有一个ppt讲得很清楚如何通过官网做的data portal来下载数据：<a href="https://www.genome.gov/pages/research/der/ichg-1000genomestutorial/how_to_access_the_data.pdf" target="_blank" rel="noopener">https://www.genome.gov/pages/research/der/ichg-1000genomestutorial/how_to_access_the_data.pdf</a> 我不喜欢可视化的界面，我比较喜欢直接进入ftp自己翻需要的数据，千人基因组计划不仅仅有自己的ftp站点，而且在NCBI，EBI和sanger研究所里面也有数据源可以下载， 是非常丰富的生信入门资源！</p><p>ftp://ftp-trace.ncbi.nih.gov/1000genomes/ftp/<br>ftp://ftp.sanger.ac.uk/pub/1000genomes/<br>ftp://ftp.ebi.ac.uk/pub/databases/1000genomes/<br> ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp</p><p>千人基因组计划测了5个大的人种，25个亚人种，具体介绍如下：<br>09/08/2014 12:00AM          1,663 20131219.populations.tsv<br>09/09/2014 12:00AM             97 20131219.superpopulations.tsv<br>其实对大部分人来说，除非你想下载千人基因组计划的原始数据来学习生物信息学分析流程，不然用不着这个ftp站点的，它自己在EBI里面的有一个非常好用的可视化界面来浏览千人基因组计划的variation结果</p><p>千人基因组计划 — 基因组浏览器： <a href="http://www.ncbi.nlm.nih.gov/variation/tools/1000genomes/" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/variation/tools/1000genomes/</a><br><a href="http://www.ncbi.nlm.nih.gov/projects/SNP/snp_ref.cgi?rs=rs35761398" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/projects/SNP/snp_ref.cgi?rs=rs35761398</a>  chr1:24201919:24201920<br><a href="http://www.ncbi.nlm.nih.gov/SNP/snp_ref.cgi?rs=2501432" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/SNP/snp_ref.cgi?rs=2501432</a>  chr1:24201920<br><a href="http://www.ncbi.nlm.nih.gov/SNP/snp_ref.cgi?rs=2502992" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/SNP/snp_ref.cgi?rs=2502992</a>  chr1:24201919<br>在千人基因组计划里面看一个rs就能看到各种人群信息：<br><a href="http://browser.1000genomes.org/Homo_sapiens/Variation/Population?r=1:24201420-24202420;v=rs2501432;vdb=variation;vf=1849472" target="_blank" rel="noopener">http://browser.1000genomes.org/Homo_sapiens/Variation/Population?r=1:24201420-24202420;v=rs2501432;vdb=variation;vf=1849472</a><br>这些人群信息，可以画一个网路图！ 只需要变化rs ID号即可，当然并不是所有的rs ID号都在千人基因组计划里面有显示的。<br>还有一个java软件-可视化检测千人基因组数据</p><p><a href="http://bioinformatics.oxfordjournals.org/content/early/2016/03/17/bioinformatics.btw147.short?rss=1" target="_blank" rel="noopener">http://bioinformatics.oxfordjournals.org/content/early/2016/03/17/bioinformatics.btw147.short?rss=1</a><br><a href="http://limousophie35.github.io/Ferret/" target="_blank" rel="noopener">http://limousophie35.github.io/Ferret/</a><br>但是好像不是很好用！</p><p>在千人基因组计划的ftp主站点里面可以下载所有数据。<br>ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/<br>ftp://ftp.ncbi.nlm.nih.gov/1000genomes/ftp/<br>直接看最新版的数据，共有NA编号开头的1182个人，HG开头的1768个人！<br>ftp://ftp.ncbi.nlm.nih.gov/1000genomes/ftp/phase3/data/<br>也可以按照人种来查看这些数据：ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000_genomes_project/data/<br>每个人的目录下面都有 四个数据文件夹<br>Oct 01 2014 00:00    Directory alignment<br>Oct 01 2014 00:00    Directory exome_alignment<br>Oct 01 2014 00:00    Directory high_coverage_alignment<br>Oct 01 2014 00:00    Directory sequence_read<br>这些数据实在是太丰富了！<br>也可以直接看最新版的vcf文件，记录了这两千多人的所有变异位点信息！<br>可以直接看到所有的位点，具体到每个人在该位点是否变异！<br>ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/<br>不过它的基因型信息是通过MVNcall+SHAPEIT这个程序call出来的，具体原理见：<a href="http://www.ncbi.nlm.nih.gov/pubmed/23093610" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/pubmed/23093610</a><br>而且网站还提供一些教程：ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000_genomes_project/working/<br>我们肯定可以在千人基因计划的官网下载测序数据，主要是vcf格式的突变！<br>Coriell Catalog website: 1000 Genomes Project<br>1000 Genomes website: browser.1000genomes.org/index.html (by SNP ID)<br>1000 Genomes website: www.1000genomes.org/data (bulk data)<br>但是关于它的表达数据，就不是那么简单了！<br>The most important available existing expression datasets involving 1000g individuals are probably the following:</p><p>RNAseq (mRNA &amp; miRNA) on 465 individuals (CEU, TSI, GBR, FIN, YRI)</p><p>Pre-publication RNA-sequencing data from the Geuvadis project is available through <a href="http://www.geuvadis.org" target="_blank" rel="noopener">http://www.geuvadis.org</a></p><p><a href="http://www.ebi.ac.uk/arrayexpress/experiments/E-GEUV-1/samples.html" target="_blank" rel="noopener">http://www.ebi.ac.uk/arrayexpress/experiments/E-GEUV-1/samples.html</a><br><a href="http://www.ebi.ac.uk/arrayexpress/experiments/E-GEUV-2/samples.html" target="_blank" rel="noopener">http://www.ebi.ac.uk/arrayexpress/experiments/E-GEUV-2/samples.html</a></p><p>RNAseq on 60 CEU individual [1]</p><p><a href="http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-197" target="_blank" rel="noopener">http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-197</a></p><p>Expression arrays on about 800 HapMap 3 individuals with a lot of overlap with 1000g data [1,2]</p><p><a href="http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-198" target="_blank" rel="noopener">http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-198</a><br><a href="http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-264" target="_blank" rel="noopener">http://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-264</a></p><p>RNAseq for 69 YRI individuals [3]</p><p><a href="http://www.ebi.ac.uk/arrayexpress/experiments/E-GEOD-19480" target="_blank" rel="noopener">http://www.ebi.ac.uk/arrayexpress/experiments/E-GEOD-19480</a></p><hr><h1 id="居然可以下载千人基因组计划的所有数据bam，vcf数据"><a href="#居然可以下载千人基因组计划的所有数据bam，vcf数据" class="headerlink" title="居然可以下载千人基因组计划的所有数据bam，vcf数据"></a>居然可以下载千人基因组计划的所有数据bam，vcf数据</h1><p>它有两个ftp站点存储所有的数据！<br>ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/<br>ftp://ftp.ncbi.nlm.nih.gov/1000genomes/ftp/<br>直接看最新版的数据，共有NA编号开头的1182个人，HG开头的1768个人！<br>ftp://ftp.ncbi.nlm.nih.gov/1000genomes/ftp/phase3/data/<br>也可以按照人种来查看这些数据：ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000_genomes_project/data/<br>每个人的目录下面都有 四个数据文件夹<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Oct</span> 01 2014 00<span class="selector-pseudo">:00</span>    <span class="selector-tag">Directory</span> <span class="selector-tag">alignment</span></span><br><span class="line"><span class="selector-tag">Oct</span> 01 2014 00<span class="selector-pseudo">:00</span>    <span class="selector-tag">Directory</span> <span class="selector-tag">exome_alignment</span></span><br><span class="line"><span class="selector-tag">Oct</span> 01 2014 00<span class="selector-pseudo">:00</span>    <span class="selector-tag">Directory</span> <span class="selector-tag">high_coverage_alignment</span></span><br><span class="line"><span class="selector-tag">Oct</span> 01 2014 00<span class="selector-pseudo">:00</span>    <span class="selector-tag">Directory</span> <span class="selector-tag">sequence_read</span></span><br></pre></td></tr></table></figure></p><p>这些数据实在是太丰富了！<br>也可以直接看最新版的vcf文件，记录了这两千多人的所有变异位点信息！<br>可以直接看到所有的位点，具体到每个人在该位点是否变异！<br>ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/<br>不过它的基因型信息是通过MVNcall+SHAPEIT这个程序call出来的，具体原理见：<a href="http://www.ncbi.nlm.nih.gov/pubmed/23093610" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/pubmed/23093610</a><br>而且网站还提供一些教程：ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/1000_genomes_project/working/</p><p>还有Illumina的450K甲基化芯片数据：ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/hgsv_sv_discovery/working/20151214_450k_methylation/<br>还有一个小程序，ftp://ftp.ncbi.nlm.nih.gov/1000genomes/ftp/technical/browser/vcf_to_ped_converter/version_1.1/<br>还有Illumina的450K甲基化芯片数据：ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/data_collections/hgsv_sv_discovery/working/20151214_450k_methylation/<br>还有一个小程序，ftp://ftp.ncbi.nlm.nih.gov/1000genomes/ftp/technical/browser/vcf_to_ped_converter/version_1.1/</p><hr><h1 id="roadmap"><a href="#roadmap" class="headerlink" title="roadmap"></a>roadmap</h1><p><a href="http://www.roadmapepigenomics.org/" target="_blank" rel="noopener">http://www.roadmapepigenomics.org/</a></p><p>精选的129个细胞系，细胞系的介绍如下：<a href="http://www.broadinstitute.org/~anshul/projects/roadmap/metadata/EID_metadata.tab" target="_blank" rel="noopener">http://www.broadinstitute.org/~anshul/projects/roadmap/metadata/EID_metadata.tab</a></p><p>对每个细胞系，都至少处理了5个核心组蛋白修饰数据，还有其它若干转录因子数据。<br>官网介绍的很详细，我就不翻译了：</p><p>The NIH Roadmap Epigenomics Mapping Consortium was launched with the goal of producing a public resource of human epigenomic data to catalyze basic biology and disease-oriented research. The Consortium leverages experimental pipelines built around next-generation sequencing technologies to map DNA methylation, histone modifications, chromatin accessibility and small RNA transcripts in stem cells and primary ex vivo tissues selected to represent the normal counterparts of tissues and organ systems frequently involved in human disease. The Consortium expects to deliver a collection of normal epigenomes that will provide a framework or reference for comparison and integration within a broad array of future studies. The Consortium also aims to close the gap between data generation and its public dissemination by rapid release of raw sequence data, profiles of epigenomics features and higher-level integrated maps to the scientific community. The Consortium is also committed to the development, standardization and dissemination of protocols, reagents and analytical tools to enable the research community to utilize, integrate and expand upon this body of data.</p><p>首先是这个网站：<br><a href="http://www.encode-roadmap.org/" target="_blank" rel="noopener">http://www.encode-roadmap.org/</a><br>矩阵很容易看懂roadmap处理了哪些细胞系，进行了什么样的处理，数据可以直接下载。</p><p>然后我比较首先推崇broad研究所的下载方式</p><p>里面还列出了他们用过的peaks caller 工具：<br><a href="http://www.broadinstitute.org/~anshul/projects/encode/preprocessing/peakcalling/" target="_blank" rel="noopener">http://www.broadinstitute.org/~anshul/projects/encode/preprocessing/peakcalling/</a>  可以看到，主要有MACS，peakranger，quest，sicer，peakseq，hotspot等等<br>直接进入broad分析好的peaks结果：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[DIR]</span><span class="selector-tag">Parent</span> <span class="selector-tag">Directory</span></span><br><span class="line"><span class="selector-tag">-</span></span><br><span class="line"><span class="selector-attr">[DIR]</span><span class="selector-tag">broadPeak</span>/<span class="selector-tag">08-Feb-2015</span> <span class="selector-tag">21</span><span class="selector-pseudo">:00</span><span class="selector-tag">-</span></span><br><span class="line"><span class="selector-attr">[DIR]</span><span class="selector-tag">gappedPeak</span>/<span class="selector-tag">08-Feb-2015</span> <span class="selector-tag">21</span><span class="selector-pseudo">:00</span><span class="selector-tag">-</span></span><br><span class="line"><span class="selector-attr">[DIR]</span><span class="selector-tag">lowq</span>/<span class="selector-tag">31-Aug-2014</span> <span class="selector-tag">20</span><span class="selector-pseudo">:42</span><span class="selector-tag">-</span></span><br><span class="line"><span class="selector-attr">[DIR]</span><span class="selector-tag">narrowPeak</span>/<span class="selector-tag">08-Feb-2015</span> <span class="selector-tag">20</span><span class="selector-pseudo">:59</span><span class="selector-tag">-</span></span><br></pre></td></tr></table></figure></p><p>这里面有3种peaks，我现在还没有搞懂是什么意思。</p><p>接着是 iHEC存放的数据：</p><p><a href="http://epigenomesportal.ca/ihec/download.html" target="_blank" rel="noopener">http://epigenomesportal.ca/ihec/download.html</a><br>我还是第一次看到这个数据接口，也是以文件夹文件的形式直接浏览，根据自己的需求下载即可：<br>除了ENCODE计划的数据，还有Blueprint计划和roadmap计划的数据都可以下载。<br>NIH Roadmap    2014-05-29    Click here for policies<br>最后可以从圣路易斯华盛顿大学里面下载</p><p>圣路易斯华盛顿大学Washington University in St. Louis，简称（Wash U，WU）以美国国父乔治·华盛顿命名，始建于1853年2月22日，位于美国密苏里州圣路易斯市，是美国历史上建校最早也是最负盛名的“华盛顿大学”，该校在美国新闻和世界报道（US News &amp; World Report）2014大学综合排名中名列14位。<br>里面有一个非常详细的页面来介绍roadmap的各种数据:<a href="http://egg2.wustl.edu/roadmap/web_portal/processed_data.html" target="_blank" rel="noopener">http://egg2.wustl.edu/roadmap/web_portal/processed_data.html</a><br>如果你已经了解了roadmap计划，就很容易找到自己的数据，从而直接浏览器或者wget下载即可。<br>首先是序列比对结果下载。<br>onsolidated Epigenomes:36 bp mappability filtered, pooled and subsampled read alignment files:<br><a href="http://egg2.wustl.edu/roadmap/data/byFileType/alignments/consolidated/" target="_blank" rel="noopener">http://egg2.wustl.edu/roadmap/data/byFileType/alignments/consolidated/</a><br>Unconsolidated Epigenomes (Uniform mappability): 36 bp mappability filtered primary alignment files:<br><a href="http://egg2.wustl.edu/roadmap/data/byFileType/alignments/unconsolidated/" target="_blank" rel="noopener">http://egg2.wustl.edu/roadmap/data/byFileType/alignments/unconsolidated/</a><br>包括各种peaks记录文件下载<br>Narrow contiguous regions of enrichment (peaks) for histone ChIP-seq and DNase-seq<br>Data format: NarrowPeak<br><a href="http://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/narrowPeak/" target="_blank" rel="noopener">http://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/narrowPeak/</a><br>Broad domains on enrichment for histone ChIP-seq and DNase-seq)<br>Data format: BroadPeak<br><a href="http://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/broadPeak/" target="_blank" rel="noopener">http://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/broadPeak/</a></p><p>Data format: GappedPeak (subset of domains containing at least one narrow peaks)<br><a href="http://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/gappedPeak/" target="_blank" rel="noopener">http://egg2.wustl.edu/roadmap/data/byFileType/peaks/consolidated/gappedPeak/</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>nat123</title>
      <link href="/hexo/2017/11/05/2017-11-05_nat123/"/>
      <url>/hexo/2017/11/05/2017-11-05_nat123/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><p><a href="http://www.nat123.com/Pages_17_619.jsp" target="_blank" rel="noopener">教程</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd  /soft/nat123/    --进入自己本地实际安装目录</span><br><span class="line">sudo apt-get install mono-complete</span><br><span class="line"></span><br><span class="line">mono  nat123linux.sh     --根据提示手动输入帐号密码 </span><br><span class="line"><span class="meta">#</span>#或者 </span><br><span class="line">mono  nat123linux.sh  service  &amp;     --自动读取上一次成功登录帐号以后台服务启动</span><br><span class="line"></span><br><span class="line">用ctrl+z转动后台执行</span><br></pre></td></tr></table></figure><h1 id="开机自动登录"><a href="#开机自动登录" class="headerlink" title="开机自动登录"></a>开机自动登录</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">（1）本地必须先手动输入帐号密码成功登录一次；</span><br><span class="line">（2）执行“chmod +x /etc/rc.local”命令确保有权限；</span><br><span class="line">（3）把启动程序的命令添加到/etc/rc.local文件中，此文件内容如下，</span><br><span class="line"><span class="meta">#</span>!/bin/sh -e</span><br><span class="line"><span class="meta">#</span> rc.local</span><br><span class="line"><span class="meta">#</span> This script is executed at the end of each multiuser runlevel.</span><br><span class="line"><span class="meta">#</span> Make sure that the script will "exit 0" on success or any other</span><br><span class="line"><span class="meta">#</span> value on error.</span><br><span class="line"><span class="meta">#</span> In order to enable or disable this script just change the execution</span><br><span class="line"><span class="meta">#</span> bits.</span><br><span class="line"><span class="meta">#</span> By default this script does nothing.</span><br><span class="line"></span><br><span class="line">cd  /soft/nat123    --本地实际安装目录</span><br><span class="line">mono  nat123linux.sh  service  &amp;      ---自动读取上次成功登录帐号并以后台服务启动</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><h1 id="LINUX环境开机自动启动防掉线脚本"><a href="#LINUX环境开机自动启动防掉线脚本" class="headerlink" title="LINUX环境开机自动启动防掉线脚本"></a>LINUX环境开机自动启动防掉线脚本</h1><p><a href="http://www.nat123.com/Pages_17_682.jsp" target="_blank" rel="noopener">教程</a></p><h1 id="花生壳盒子（花生棒Pro）设置"><a href="#花生壳盒子（花生棒Pro）设置" class="headerlink" title="花生壳盒子（花生棒Pro）设置"></a>花生壳盒子（花生棒Pro）设置</h1><p>（1）不需要安装任何客户端，</p><p>（2）先设置联上网（有线或者无线）</p><ul><li>花生壳盒子（花生棒Pro）使用教程——有线上网 <a href="http://service.oray.com/question/5098.html" target="_blank" rel="noopener">http://service.oray.com/question/5098.html</a> </li></ul><p>（3）访问“ <a href="alires:///offlinepkg/ww/recent/src/b.oray.com" target="_blank" rel="noopener">b.oray.com</a> ”，然后用sn码和对应密码登录。  登录后，在花生壳管理页面，鼠标移动到右上角偏中间的SN码，点击“切换账号”再用Oray账号登录</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>转录组分析笔记（2）</title>
      <link href="/hexo/2017/11/05/2017-11-05_transcriptome_analysis-1/"/>
      <url>/hexo/2017/11/05/2017-11-05_transcriptome_analysis-1/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这是一个生信技能树的优秀作业，一字未改。</p><p><a href="http://www.biotrainee.com/thread-1931-1-1.html" target="_blank" rel="noopener">原文</a></p><h2 id="转录组差异表达分析小实战（一）"><a href="#转录组差异表达分析小实战（一）" class="headerlink" title="转录组差异表达分析小实战（一）"></a>转录组差异表达分析小实战（一）</h2><h5 id="读文献获取数据"><a href="#读文献获取数据" class="headerlink" title="读文献获取数据"></a>读文献获取数据</h5><p>文献名称：AKAP95 regulates splicing through scaffolding<br>RNAs and RNA processing factors</p><ol><li><p>查找数据：Data availability<br>The RIP-seq an RNA-seq data have been deposited in the Gene<br>Expression Omnibus database, with accession code GSE81916. All other data is<br>available from the author upon reasonable request.</p></li><li><p>获得GSE号：GSE81916</p></li></ol><h5 id="下载测序数据"><a href="#下载测序数据" class="headerlink" title="下载测序数据"></a>下载测序数据</h5><ol><li><p><a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE81916" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE81916</a>获取数据信息，并点击网址下方的ftp，下载测序数据</p></li><li><p>从<a href="https://trace.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA323422" target="_blank" rel="noopener">https://trace.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA323422</a>可知我们需要的mRNA测序编号为SRR3589956到SRR3589962</p></li><li><p>通过Apera下载SRR数据，这里以SRR3589956为例：</p><pre><code> ascp -T -i /home/anlan/.aspera/connect/etc/asperaweb_id_dsa.openssh anonftp@ftp-private.ncbi.nlm.nih.gov:sra/sra-instant/reads/ByRun/sra/SRR/SRR358/SRR3589956/SRR3589956.sra ./</code></pre></li></ol><h5 id="转化fastq测序数据"><a href="#转化fastq测序数据" class="headerlink" title="转化fastq测序数据"></a>转化fastq测序数据</h5><ol><li><p>通过sratoolkit工具将SRR文件转化为fastq格式的测序数据（写了个shell循环）</p><pre><code> for i in $(seq 56 62);do nohup fastq-dump --split-3  SRR35899${i} &amp;;done</code></pre></li><li><p>通过fastqc对每个fastq文件进行质检，用multiqc查看整体质检报告（对当前目录下的fastq测序结果进行质检，生成每个fq文件的质检报告总multiqc整合后统计查看）</p><pre><code> fastqc *.fastq multiqc ./</code></pre><p> 点击这个url可以查看我这个multiqc报告：<a href="http://www.bioinfo-scrounger.com/data/multiqc_report.html" target="_blank" rel="noopener">http://www.bioinfo-scrounger.com/data/multiqc_report.html</a></p></li><li>如果有接头或者质量值不达标的需要进行过滤，这次的数据质量都不错，因此直接进行比对即可</li></ol><h5 id="序列比对"><a href="#序列比对" class="headerlink" title="序列比对"></a>序列比对</h5><ol><li><p>安装hisat2软件，下载人类的hiast2索引文件</p><ul><li><p>hisat2下载并安装：</p><pre><code>  ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-2.1.0-Linux_x86_64.zip  unzip hisat2-2.1.0-Linux_x86_64.zip</code></pre></li><li><p>下载hisat2的human索引</p><pre><code>  ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/hg19.tar.gz  tar zxvf hg19.tar.gz</code></pre></li></ul></li><li><p>用hisat2进行比对，测序数据放在data目录下，索引文件放在reference/index/hisat2/hg19目录下，SRR3589956-SRR3589958为人的测序数据</p><pre><code>for i in $(seq 56 58);do hisat2 -p 4 \-x ~/reference/index/hisat2/hg19/genome \-1 ./data/SRR35899${i}_1.fastq -2 ./data/SRR35899${i}_2.fastq \-S SRR35899$i.sam &gt;SRR35899${i}.log;done</code></pre></li><li><p>用samtools将sam文件转化为bam文件，并使用默认排序</p><pre><code>for i in $(seq 56 58);do samtools sort -@ 5 -o SRR35899${i}.bam SRR35899${i}.sam;done</code></pre></li></ol><h5 id="reads计数"><a href="#reads计数" class="headerlink" title="reads计数"></a>reads计数</h5><ol><li><p>用htseq对比对产生的bam进行count计数</p><ul><li><p>htseq安装，使用miniconda，省事！唯一的问题是htseq版本不是最新的，是0.7.2。想要最新版还是要正常安装，可参考<a href="http://www.biotrainee.com/thread-1847-1-2.html" target="_blank" rel="noopener">http://www.biotrainee.com/thread-1847-1-2.html</a></p><pre><code>  conda install -c bioconda htseq</code></pre></li><li><p>用htseq将对比后的结果进行计数</p><pre><code>  for i in $(seq 56 58);do htseq-count -f bam -r pos -s no \  SRR35899${i}.bam ~/reference/genome/hg19/gencode.v26lift37.annotation.gtf \  1&gt;SRR35899${i}.count 2&gt;SRR35899${i}_htseq.log;done</code></pre></li></ul></li><li><p>将3个count文件（SRR3589956.count，SRR3589957.count，SRR3589958.count）合并成一个count矩阵，这是就需要脚本来解决这个问题，不然其他方法会稍微麻烦点</p><pre><code>#!/usr/bin/perl -wuse strict;my $path = shift @ARGV;opendir DIR, $path or die;my @dir = readdir DIR;my $header;my @sample;my %hash;foreach my $file (@dir) {    if ($file =~ /^\w+.*\.count/) {        push @sample, $file;        $header .= &quot;\t$file&quot;;        open my $fh, $file or die;        while (&lt;$fh&gt;) {            chomp;            next if ($_ =~ /^\W+/);            my @array = split /\t/, $_;            $hash{$array[0]} -&gt; {$file} = $array[1];        }        close $fh;    }}print &quot;$header\n&quot;;map{    my $gene = $_;    print &quot;$gene&quot;;    foreach my $file (@sample) {        print &quot;\t&quot;.$hash{$gene} -&gt; {$file};    }    print &quot;\n&quot;;}keys %hash;</code></pre></li><li><p>按照接下来的剧本，应该讲count_matrix文件导入DESeq进行差异表达分析。但是从这篇文章的Bioinformatic analyses部分可以发现，作者的control组的2组数据是来自2个不同的批次（一个是SRR3589956，另外一个来源GSM1095127 in GSE44976），treat组倒是同一个批次（SRR3589957和SRR3589958）。但是对于Mouse cells来说，倒是满足2个control和2个treat都正常来自同个批次，因此打算重新用SRR3589959-SRR3589962重新做个一个count_matrix进行后续差异分析</p></li></ol>]]></content>
      
      
    </entry>
    
    <entry>
      <title>转录组分析笔记</title>
      <link href="/hexo/2017/11/05/2017-11-05_transcriptome_analysis/"/>
      <url>/hexo/2017/11/05/2017-11-05_transcriptome_analysis/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这是一个学习笔记，跟随生信技能树的学习笔记重复,把几个优秀笔记的内容重复摘录在此。</p><p><strong>学习提纲</strong>：<a href="http://www.biotrainee.com/thread-1750-1-1.html" target="_blank" rel="noopener">RNA-seq基础入门传送门</a></p><p><strong>文章链接</strong>：<a href="https://www.nature.com/articles/ncomms13347" target="_blank" rel="noopener">https://www.nature.com/articles/ncomms13347</a> </p><p><strong>非常棒的学习笔记1</strong>：<a href="https://taoshengxu.github.io/DocumentGit/pdf/沈梦圆2017年转录组入门合辑0-6.pdf">PANDA姐的转录组入门（0-6）合辑</a></p><p><strong>非常棒的学习笔记2</strong>:<a href="https://taoshengxu.github.io/DocumentGit/pdf/浙大植物学小白的转录组笔记.pdf">浙大植物学小白的转录组笔记</a> <a href="https://mp.weixin.qq.com/s?__biz=MzAxMDkxODM1Ng==&amp;mid=2247484895&amp;idx=1&amp;sn=678da702fa929789b177d214070dd39a&amp;chksm=9b484564ac3fcc72914b0ae2c1b71adb63fb359cf7e73221be1ddfd3040efa2944c91bee8e3b&amp;mpshare=1&amp;scene=1&amp;srcid=0824NWlPEoAgwVKtIWnkEDd9#rd" target="_blank" rel="noopener">Link2</a></p><p><strong>非常棒的学习笔记3</strong>:<a href="./post/transcriptome_analysis1.html">下一篇</a></p><h1 id="分析软件安装"><a href="#分析软件安装" class="headerlink" title="分析软件安装"></a>分析软件安装</h1><p>最方便的安装方式就是 Anaconda</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.continuum.io/archive/Anaconda<span class="number">3</span><span class="number">-4.4</span>.<span class="number">0</span>-Linux-<span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span>.sh</span><br><span class="line"></span><br><span class="line"> conda install -<span class="keyword">c</span> bioconda samtools=<span class="number">1.5</span></span><br><span class="line"> conda install -<span class="keyword">c</span> bioconda htseq=<span class="number">0.7</span>.<span class="number">2</span></span><br><span class="line"> conda install -<span class="keyword">c</span> bioconda hisat<span class="number">2</span>=<span class="number">2.1</span>.<span class="number">0</span></span><br><span class="line"> conda install -<span class="keyword">c</span> bioconda fastqc=<span class="number">0.11</span>.<span class="number">5</span></span><br><span class="line"> conda install -<span class="keyword">c</span> jfear sratoolkit=<span class="number">2.8</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h1><p>From NCBI GEO ftp</p><p>The RIP-seq an RNA-seq data have been deposited in the Gene Expression Omnibus database, with accession code <strong>GSE81916</strong></p><h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><h2 id="质控"><a href="#质控" class="headerlink" title="质控"></a>质控</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> id <span class="keyword">in</span> `seq 56 62`</span><br><span class="line"><span class="keyword">do</span> fastq-dump --gzip --split-3 -O /data/RNASeq -A SRR35899<span class="variable">$&#123;id&#125;</span></span><br><span class="line"><span class="keyword">done</span> <span class="comment">##很慢，建议后台多线程</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##查看fastq文件</span></span><br><span class="line">zcat SRR3589956_1.fastq.gz | head -n 4</span><br><span class="line"><span class="comment">##安装集成分析工具</span></span><br><span class="line">conda install -c bioconda multiqc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先获取QC结果</span></span><br><span class="line">ls *gz | <span class="keyword">while</span> <span class="built_in">read</span> id; <span class="keyword">do</span> fastqc -t 4 <span class="variable">$id</span>; <span class="keyword">done</span></span><br><span class="line"><span class="comment"># multiqc</span></span><br><span class="line">multiqc *fastqc.zip --pdf</span><br></pre></td></tr></table></figure><p><strong>Python质控脚本</strong><br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import zipfile</span><br><span class="line"># <span class="keyword">read</span> the zip <span class="keyword">file</span></span><br><span class="line">def zipReader(<span class="keyword">file</span>):</span><br><span class="line">    qcfile =  zipfile.ZipFile(<span class="keyword">file</span>)</span><br><span class="line">    data_txt = [<span class="keyword">file</span> <span class="keyword">for</span> <span class="keyword">file</span> in qcfile.namelist() <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">".*?_data\.txt"</span>, <span class="keyword">file</span>)][<span class="number">0</span>]</span><br><span class="line">    data = [bytes.decode(<span class="built_in">line</span>) <span class="keyword">for</span> <span class="built_in">line</span> in qcfile.<span class="keyword">open</span>(data_txt)]</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"> </span><br><span class="line">def fastqc_summary(data):</span><br><span class="line">    module_num = <span class="number">0</span></span><br><span class="line">    bases = <span class="number">0</span></span><br><span class="line">    Q20 = <span class="number">0</span></span><br><span class="line">    Q30 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">line</span> in dat<span class="variable">a:</span></span><br><span class="line">        <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">'Filename'</span>, <span class="built_in">line</span>):</span><br><span class="line">            filename = <span class="built_in">line</span>.<span class="keyword">split</span>(sep=<span class="string">"\t"</span>)[<span class="number">1</span>].strip()</span><br><span class="line">        <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">'Total Sequence'</span>, <span class="built_in">line</span>):</span><br><span class="line">            <span class="keyword">read</span> = <span class="built_in">line</span>.<span class="keyword">split</span>(sep=<span class="string">"\t"</span>)[<span class="number">1</span>].strip()</span><br><span class="line">        <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">'%GC'</span>, <span class="built_in">line</span>):</span><br><span class="line">            GC = <span class="built_in">line</span>.<span class="keyword">split</span>(sep=<span class="string">"\t"</span>)[<span class="number">1</span>].strip()</span><br><span class="line">        <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">"[^#](.*?\t)&#123;6&#125;"</span>,<span class="built_in">line</span>):</span><br><span class="line">            bases = bases + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> float(<span class="built_in">line</span>.<span class="keyword">split</span>(<span class="string">"\t"</span>)[<span class="number">1</span>]) &gt; <span class="number">30</span>:</span><br><span class="line">                Q20 = Q20 + <span class="number">1</span></span><br><span class="line">                Q30 = Q30 + <span class="number">1</span></span><br><span class="line">            elif float(<span class="built_in">line</span>.<span class="keyword">split</span>(<span class="string">"\t"</span>)[<span class="number">1</span>]) &gt; <span class="number">20</span>:</span><br><span class="line">                Q20 = Q20 + <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">"&gt;&gt;END"</span>, <span class="built_in">line</span>) :</span><br><span class="line">            module_num = module_num + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> module_num &gt;= <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    Q20 = Q20 / bases</span><br><span class="line">    Q30 = Q30 / bases</span><br><span class="line">    summary = [filename, <span class="keyword">read</span>, GC, str(Q20), str(Q30)]</span><br><span class="line">    <span class="keyword">return</span> summary</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    import sys</span><br><span class="line">    <span class="keyword">for</span> arg in <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(sys.<span class="built_in">argv</span>)):</span><br><span class="line">        data = zipReader(sys.<span class="built_in">argv</span>[arg])</span><br><span class="line">        summary = fastqc_summary(data)</span><br><span class="line">        with <span class="keyword">open</span>(<span class="string">'summary.txt'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> <span class="keyword">f</span>:</span><br><span class="line">            <span class="keyword">f</span>.<span class="keyword">write</span>(<span class="string">'\t'</span>.<span class="keyword">join</span>(summary) + <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grep -w 'gene' gencode.v26lift37.annotation.gtf |grep -w 'TP53'|cut -f 1,4,5 &gt;&gt;gene.bed</span><br><span class="line">grep -w 'gene' gencode.v26lift37.annotation.gtf |grep -w 'KRAS'|cut -f 1,4,5 &gt;&gt;gene.bed</span><br><span class="line">grep -w 'gene' gencode.v26lift37.annotation.gtf |grep -w 'EGFR'|cut -f 1,4,5 &gt;&gt;gene.bed</span><br><span class="line">bedtools igv -i gene.bed &gt;Bach_sanpshot.txt</span><br><span class="line">perl -alne '&#123;print "goto $F[0]:$F[1]-$F[2]\nsnapshot $F[3].png"&#125; '</span><br></pre></td></tr></table></figure><h2 id="Hisat2比对"><a href="#Hisat2比对" class="headerlink" title="Hisat2比对"></a>Hisat2比对</h2><p>HISAT2是TopHat2/Bowti2的继任者，使用改进的BWT算法，实现了更快的速度和更少的资源占用，作者推荐TopHat2/Bowti2和HISAT的用户转换到HISAT2。<br>官网：<a href="https://ccb.jhu.edu/software/hisat2/index.shtml" target="_blank" rel="noopener">https://ccb.jhu.edu/software/hisat2/index.shtml</a></p><p>1.建立基因组索引or index 下载<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">建立基因组索引</span></span><br><span class="line"><span class="meta">#</span><span class="bash">hisat2-build –p 4 genome.fa genome</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">下载索引</span></span><br><span class="line">cd ~/reference</span><br><span class="line">mkdir -p index/hisat &amp;&amp; cd index/hisat</span><br><span class="line">wget -c ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/hg19.tar.gz</span><br><span class="line">wget -c ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/mm10.tar.gz</span><br><span class="line">tar zxvf hg19.tar.gz</span><br><span class="line">tar xvzf mm10.tar.gz</span><br></pre></td></tr></table></figure></p><p>2.比对<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">for i in `seq 56 58`</span><br><span class="line">do</span><br><span class="line">    hisat2 -t -p 24 -x /data/Reference/index/hisat2/hg19/genome \</span><br><span class="line">    -1 /data/RNASeq/fastq/SRR35899$&#123;i&#125;_1.fastq.gz \</span><br><span class="line">    -2 SRR35899$&#123;i&#125;_2.fastq.gz \</span><br><span class="line">    -S /data/RNASeq/fastq/SRR35899$&#123;i&#125;.sam &gt; SRR35899$&#123;i&#125;.log &amp;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#比对结果</span></span></span><br><span class="line">xts@R710:/data/RNASeq/fastq$ for i in `seq 56 58`</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="keyword">do</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     hisat2 -t -p 24 -x /data/Reference/index/hisat2/hg19/genome \</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     -1 /data/RNASeq/fastq/SRR35899<span class="variable">$&#123;i&#125;</span>_1.fastq.gz \</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     -2 SRR35899<span class="variable">$&#123;i&#125;</span>_2.fastq.gz \</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     -S /data/RNASeq/fastq/SRR35899<span class="variable">$&#123;i&#125;</span>.sam &gt; SRR35899<span class="variable">$&#123;i&#125;</span>.<span class="built_in">log</span> &amp;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="keyword">done</span></span></span><br><span class="line">[1] 11177</span><br><span class="line">[2] 11178</span><br><span class="line">[3] 11179</span><br><span class="line">xts@R710:/data/RNASeq/fastq$ tipTime loading forward index: 00:00:24</span><br><span class="line">Time loading forward index: 00:00:24</span><br><span class="line">Time loading forward index: 00:00:24</span><br><span class="line">Time loading reference: 00:00:04</span><br><span class="line">Time loading reference: 00:00:04</span><br><span class="line">Time loading reference: 00:00:04</span><br><span class="line">Multiseed full-index search: 00:13:22</span><br><span class="line">28856780 reads; of these:</span><br><span class="line">  28856780 (100.00%) were paired; of these:</span><br><span class="line">    1838981 (6.37%) aligned concordantly 0 times</span><br><span class="line">    24732654 (85.71%) aligned concordantly exactly 1 time</span><br><span class="line">    2285145 (7.92%) aligned concordantly &gt;1 times</span><br><span class="line">    ----</span><br><span class="line">    1838981 pairs aligned concordantly 0 times; of these:</span><br><span class="line">      90927 (4.94%) aligned discordantly 1 time</span><br><span class="line">    ----</span><br><span class="line">    1748054 pairs aligned 0 times concordantly or discordantly; of these:</span><br><span class="line">      3496108 mates make up the pairs; of these:</span><br><span class="line">        2034939 (58.21%) aligned 0 times</span><br><span class="line">        1221462 (34.94%) aligned exactly 1 time</span><br><span class="line">        239707 (6.86%) aligned &gt;1 times</span><br><span class="line">96.47% overall alignment rate</span><br><span class="line">Time searching: 00:13:26</span><br><span class="line">Overall time: 00:13:50</span><br><span class="line"></span><br><span class="line">Multiseed full-index search: 00:14:42</span><br><span class="line">25914821 reads; of these:</span><br><span class="line">  25914821 (100.00%) were paired; of these:</span><br><span class="line">    1785160 (6.89%) aligned concordantly 0 times</span><br><span class="line">    21786672 (84.07%) aligned concordantly exactly 1 time</span><br><span class="line">    2342989 (9.04%) aligned concordantly &gt;1 times</span><br><span class="line">    ----</span><br><span class="line">    1785160 pairs aligned concordantly 0 times; of these:</span><br><span class="line">      53455 (2.99%) aligned discordantly 1 time</span><br><span class="line">    ----</span><br><span class="line">    1731705 pairs aligned 0 times concordantly or discordantly; of these:</span><br><span class="line">      3463410 mates make up the pairs; of these:</span><br><span class="line">        2187330 (63.16%) aligned 0 times</span><br><span class="line">        1050929 (30.34%) aligned exactly 1 time</span><br><span class="line">        225151 (6.50%) aligned &gt;1 times</span><br><span class="line">95.78% overall alignment rate</span><br><span class="line">Time searching: 00:14:46</span><br><span class="line">Overall time: 00:15:10</span><br><span class="line">[1]   已完成               hisat2 -t -p 24 -x /data/Reference/index/hisat2/hg19/genome -1 /data/RNASeq/fastq/SRR35899$&#123;i&#125;_1.fastq.gz -2 SRR35899$&#123;i&#125;_2.fastq.gz -S /data/RNASeq/fastq/SRR35899$&#123;i&#125;.sam &gt; SRR35899$&#123;i&#125;.log</span><br><span class="line">[3]+  已完成               hisat2 -t -p 24 -x /data/Reference/index/hisat2/hg19/genome -1 /data/RNASeq/fastq/SRR35899$&#123;i&#125;_1.fastq.gz -2 SRR35899$&#123;i&#125;_2.fastq.gz -S /data/RNASeq/fastq/SRR35899$&#123;i&#125;.sam &gt; SRR35899$&#123;i&#125;.log</span><br><span class="line">xts@R710:/data/RNASeq/fastq$ Multiseed full-index search: 00:16:08</span><br><span class="line">29720636 reads; of these:</span><br><span class="line">  29720636 (100.00%) were paired; of these:</span><br><span class="line">    1920019 (6.46%) aligned concordantly 0 times</span><br><span class="line">    25503958 (85.81%) aligned concordantly exactly 1 time</span><br><span class="line">    2296659 (7.73%) aligned concordantly &gt;1 times</span><br><span class="line">    ----</span><br><span class="line">    1920019 pairs aligned concordantly 0 times; of these:</span><br><span class="line">      61683 (3.21%) aligned discordantly 1 time</span><br><span class="line">    ----</span><br><span class="line">    1858336 pairs aligned 0 times concordantly or discordantly; of these:</span><br><span class="line">      3716672 mates make up the pairs; of these:</span><br><span class="line">        2292272 (61.68%) aligned 0 times</span><br><span class="line">        1196099 (32.18%) aligned exactly 1 time</span><br><span class="line">        228301 (6.14%) aligned &gt;1 times</span><br><span class="line">96.14% overall alignment rate</span><br><span class="line">Time searching: 00:16:12</span><br><span class="line">Overall time: 00:16:36</span><br></pre></td></tr></table></figure></p><p><strong>数据转换sam-bam-sorted bam</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> `seq <span class="number">56</span> <span class="number">58</span>`</span><br><span class="line">do</span><br><span class="line">    samtools view -S SRR35899$&#123;i&#125;<span class="selector-class">.sam</span> -<span class="selector-tag">b</span> &gt; SRR35899$&#123;i&#125;.bam</span><br><span class="line">    samtools sort SRR35899$&#123;i&#125;<span class="selector-class">.bam</span> -o SRR35899$&#123;i&#125;_sorted.bam</span><br><span class="line">    samtools index SRR35899$&#123;i&#125;_sorted.bam</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p>SAMtools其他操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">head -1000 SRR3589957.sam &gt; test.sam</span><br><span class="line">samtools view -b  test.sam &gt; test.bam</span><br><span class="line">samtools view test.bam | head</span><br><span class="line"></span><br><span class="line">samtools sort test.bam -o default.bam</span><br><span class="line">samtools view default.bam | head</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> Sort alignments by leftmost coordinates, or by <span class="built_in">read</span> name when -n is used</span></span><br><span class="line">samtools sort test.bam default</span><br><span class="line">samtools view default.bam | head</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">提取1号染色体1234-123456区域的比对<span class="built_in">read</span></span></span><br><span class="line">samtools view SRR3589957_sorted.bam chr1:1234-123456 | head</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在比如搭配flag(0.1.19版本没有）和flagstat，使用-f或-F参数提取不同匹配情况的<span class="built_in">read</span>。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以先用flagstat看下总体情况</span></span><br><span class="line">samtools flagstat SRR3589957_sorted.bam</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">筛选恰好配对的<span class="built_in">read</span>,就需要用0x10</span></span><br><span class="line">samtools view -b -f 0x10 SRR3589957_sorted.bam chr1:1234-123456  &gt; flag.bam</span><br><span class="line">samtools flagstat flag.bam</span><br></pre></td></tr></table></figure><h2 id="比对质控"><a href="#比对质控" class="headerlink" title="比对质控"></a>比对质控</h2><ul><li>RSeQC——<a href="http://rseqc.sourceforge.net/" target="_blank" rel="noopener">http://rseqc.sourceforge.net/</a></li><li>Qualimap——<a href="http://qualimap.bioinfo.cipf.es/" target="_blank" rel="noopener">http://qualimap.bioinfo.cipf.es/</a></li><li>Picard——<a href="http://broadinstitute.github.io/picard/" target="_blank" rel="noopener">http://broadinstitute.github.io/picard/</a></li></ul><p>使用RSeQC来对我们的比对结果进行质控,RSeQC包括了十多个Python脚本，实现很多功能，具体每个脚本的参数用法，都可以在官网学习.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> RSeQC的安装，需要先安装gcc；numpy；R；Python2.7</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install RSeQC</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 对bam文件进行质控，其余都同样的进行</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> bam_stat.py  -i SRR3589956_sorted.bam</span></span><br><span class="line"></span><br><span class="line">基因组覆盖率的QC需要提供bed文件，可以直接RSeQC的网站下载，或者可以用gtf转换</span><br><span class="line">read_distribution.py -i RNA-Seq/aligned/SRR3589956_sorted.bam -r reference/hg19_RefSeq.bed</span><br></pre></td></tr></table></figure><h1 id="Reads-计数-From-hoptop"><a href="#Reads-计数-From-hoptop" class="headerlink" title="Reads 计数 (From hoptop)"></a>Reads 计数 (From hoptop)</h1><p>定量分为三个水平</p><ul><li>基因水平(gene-level)</li><li>转录本水平(transcript-level)</li><li>外显子使用水平(exon-usage-level)。</li></ul><p>1.在<strong>基因水平</strong>上，常用的软件为HTSeq-count，featureCounts，BEDTools, Qualimap, Rsubread, GenomicRanges等。以常用的HTSeq-count为例，这些工具要解决的问题就是<strong>根据read和基因位置的overlap判断这个read到底是谁家的孩子</strong>。值得注意的是不同工具对multimapping reads处理方式也是不同的，例如HTSeq-count就直接当它们不存在。而Qualimpa则是一人一份，平均分配。</p><p>对每个基因计数之后得到的count matrix再后续的分析中，要注意标准化的问题。如果你要比较同一个样本(within-sample)不同基因之间的表达情况，你就需要考虑到<strong>转录本长度</strong>，因为转录本越长，那么检测的片段也会更多，直接比较等于让小孩和大人进行赛跑。如果你是比较不同样本（across sample）同一个基因的表达情况，虽然不必在意转录本长度，但是你要考虑到<strong>测序深度</strong>（sequence depth)，毕竟测序深度越高，检测到的概率越大。除了这两个因素外，你还需要考虑GC%所导致的偏差，以及测序仪器的系统偏差。目前对read count标准化的算法有RPKM（SE）, FPKM（PE），TPM, TMM等，不同算法之间的差异与换算方法已经有文章进行整理和吐槽了。但是，有一些下游分析的软件会要求是输入的count matrix是原始数据，未经标准化，比如说DESeq2，这个时候你需要注意你上一步所用软件会不会进行标准化。</p><p>2.在<strong>转录本水平</strong>上，一般常用工具为Cufflinks和它的继任者StringTie， eXpress。这些软件要处理的难题就时转录本亚型（isoforms）之间通常是有重叠的，当二代测序读长低于转录本长度时，如何进行区分？这些工具大多采用的都是expectation maximization（EM）。好在我们有三代测序。<br>上述软件都是alignment-based，目前许多alignment-free软件，如kallisto, silfish, salmon，能够省去比对这一步，直接得到read count，在运行效率上更高。不过最近一篇文献[1]指出这类方法在估计丰度时存在样本特异性和读长偏差。</p><p>3.在<strong>外显子使用水平</strong>上，其实和基因水平的统计类似。但是值得注意的是为了更好的计数，我们需要提供无重叠的外显子区域的gtf文件。用于分析差异外显子使用的DEXSeq提供了一个Python脚本（dexseq_prepare_annotation.py）执行这个任务。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> -p /data/RNASeq/fastq/<span class="keyword">matrix</span>/</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 56 58); </span><br><span class="line"><span class="keyword">do</span> htseq-<span class="keyword">count</span> -f bam -r pos -s <span class="keyword">no</span> \</span><br><span class="line">/data/RNASeq/fastq/SRR35899<span class="variable">$&#123;i&#125;</span>_sorted.bam /data/Reference/gtf/gencode/gencode.v26lift37.annotation.sorted.gtf \</span><br><span class="line">1&gt;<span class="keyword">matrix</span>/SRR35899<span class="variable">$&#123;i&#125;</span>.<span class="keyword">count</span> 2&gt;<span class="keyword">matrix</span>/SRR35899<span class="variable">$&#123;i&#125;</span>_htseq.<span class="keyword">log</span> &amp;; done</span><br></pre></td></tr></table></figure><h2 id="表达矩阵"><a href="#表达矩阵" class="headerlink" title="表达矩阵"></a>表达矩阵</h2><p>在RNA-Seq分析中，每一个基因就是一个feature（特征？），而基因被认为是它的所有外显子的和集。在可变剪切分析中，可以单独把每个外显子当作一个feature。而在ChIP-Seq分析中，feature则是预先定义的结合域。但是确定一个read到底属于哪一个feature有时会非常棘手。</p><h4 id="这段描述很有意思，信息量也很多-From-hoptop"><a href="#这段描述很有意思，信息量也很多-From-hoptop" class="headerlink" title="这段描述很有意思，信息量也很多(From hoptop)"></a>这段描述很有意思，信息量也很多(From hoptop)</h4><p>我们这次分析是人类mRNA-Seq测序的结果，但是我们其实只下载了3个sra文件。一般而言RNA-Seq数据分析都至少要有2个重复，所以必须要有4个sra文件才行。我在仔细读完文章的方法这一段以后，发现他们有一批数据用的是其他课题组的： For 293 cells, the mRNA-seq results of the control samples include (1) those from the doxycycline-treated parental Flp-In T-REx 293 cells by us and (2) those from the doxycycline-treated control Flp-In T-REx 293 cells performed by another group unrelated to us (sample GSM1095127 in GSE44976)。 然后和Jimmy交流之后，他也承认自己只分析了小鼠的数据，而没有分析人类的数据。所以我们需要根据文章提供的线索下载另外一份数据，才能进行下一步的分析。<br>这个时候就有一个经常被问到的问题：不同来源的RNA-Seq数据能够直接比较吗？甚至说如果不同来源的RNA-seq数据的构建文库都不一样该如何比较?不同来源的RNA-Seq结果之间比较需要考虑 批次效应（batch effect) 的影响。<br>处理批次效应，根据我搜索的结果，是不能使用FPKM/RPKM，关于这个标准化的吐槽，我在biostars上找到了如下观点：<br>FPKM/RPKM 不是标准化的方法，它会引入文库特异的协变量<br>FPKM/RPKM has never been peer-reviewed, it has been introduced as an ad-hoc measure in a supplementary 没有同行评审<br>One of the authors of this paper states, that it should not be used because of faulty arithmetic 作者说算法有问题<br>All reviews so far have shown it to be an inferior scale for DE analysis of genes Length normalization is mostly dispensable imo in DE analysis because gene length is constant<br>有人建议使用一个Bioconductor包<a href="http://www.bioconductor.org/packages/devel/bioc/html/sva.html" target="_blank" rel="noopener">http://www.bioconductor.org/packages/devel/bioc/html/sva.html</a> 我没有具体了解，有生之年去了解补充。<br>还有人引用了一篇文献 IVT-seq reveals extreme bias in RNA-sequencing 证明不同文库的RNA-Seq结果会存在很大差异。<br>结论： 可以问下原作者他们是如何处理数据的，居然有一个居然没有重复的分析也能过审。改用小鼠数据进行分析。或者使用无重复的分析方法，或者模拟一份数据出来，先把流程走完。</p><h1 id="PANDA实践完整代码"><a href="#PANDA实践完整代码" class="headerlink" title="PANDA实践完整代码"></a>PANDA实践完整代码</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##1.SRA to fastq</span></span><br><span class="line"></span><br><span class="line">perl -F<span class="string">'\t'</span> -alne <span class="string">'if($F[7]=~/SRR/)&#123;$F[6]=~s/\s/_/g;$F[13]=~ s/\s|#/_/g;$F[13]=~s/\(|\)//g;print "$F[7]\t$F[6]_$F[13]"&#125;'</span> SraRunTable.txt &gt; Rename.txt</span><br><span class="line"></span><br><span class="line">perl -F<span class="string">'\t'</span> -alne <span class="string">'print "fastq-dump --split-3 --gzip -A $F[1] $F[0].sra &amp;" '</span> Rename.txt &gt;sratofq.sh</span><br><span class="line"></span><br><span class="line">sh sratofq.sh </span><br><span class="line"></span><br><span class="line">md5sum *.fastq.gz &gt;md5sum.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">##2.QC</span></span><br><span class="line"><span class="built_in">cd</span> MYShen</span><br><span class="line">mkdir 1_FastQC_Raw_Data</span><br><span class="line">ls *.gz|<span class="keyword">while</span> <span class="built_in">read</span> id;<span class="keyword">do</span>(fastqc <span class="variable">$id</span> -o 1_FastQC_Raw_Data -t 8);<span class="keyword">done</span></span><br><span class="line"><span class="comment"># 质控统计</span></span><br><span class="line"><span class="built_in">cd</span> 1_FastQC_Raw_Data</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> *.zip; <span class="keyword">do</span> unzip <span class="variable">$i</span>; <span class="keyword">done</span></span><br><span class="line">perl /data/RNASeq/MYShen/fastqc_table.pl</span><br><span class="line">csvtk tab2csv fastqc_table.txt | csvtk csv2md</span><br><span class="line">------------------------------------------------------------------------------------------------</span><br><span class="line">                                                  |total_reads|GC |Q20              |Q30</span><br><span class="line">:-------------------------------------------------|:----------|:--|:----------------|:----------------</span><br><span class="line">Homo_sapiens_AKAP95_KD_miR_12_293_cell_1_fastqc   |25914821   |50 |0.999810031487387|0.972201583024633</span><br><span class="line">Homo_sapiens_AKAP95_KD_miR_12_293_cell_2_fastqc   |25914821   |50 |0.977900484051192|0.934933990090072</span><br><span class="line">Homo_sapiens_AKAP95_KD_miR_8_293_cell_1_fastqc    |29720636   |50 |0.992602101445318|0.966831930304341</span><br><span class="line">Homo_sapiens_AKAP95_KD_miR_8_293_cell_2_fastqc    |29720636   |50 |0.978714654693123|0.93782410982053</span><br><span class="line">Homo_sapiens_Control_293_cell_1_fastqc            |28856780   |50 |0.989872946867992|0.966726176148248</span><br><span class="line">Homo_sapiens_Control_293_cell_2_fastqc            |28856780   |50 |0.977797280223227|0.940547004897982</span><br><span class="line">Mus_musculus_E14_cells_Akap95_shRNA_rep1_1_fastqc |52972617   |50 |0.99966391028307 |0.987561698545491</span><br><span class="line">Mus_musculus_E14_cells_Akap95_shRNA_rep1_2_fastqc |52972617   |50 |0.991854774481748|0.968082091276275</span><br><span class="line">Mus_musculus_E14_cells_Akap95_shRNA_rep2_1_fastqc |43802631   |49 |0.999679725428068|0.972184686419785</span><br><span class="line">Mus_musculus_E14_cells_Akap95_shRNA_rep2_2_fastqc |43802631   |49 |0.986887120253892|0.937616464383233</span><br><span class="line">Mus_musculus_E14_cells_control_shRNA_rep1_1_fastqc|30468155   |50 |0.99960200376177 |0.987110860654561</span><br><span class="line">Mus_musculus_E14_cells_control_shRNA_rep1_2_fastqc|30468155   |50 |0.991083449869222|0.966506018600785</span><br><span class="line">Mus_musculus_E14_cells_control_shRNA_rep2_1_fastqc|36763726   |50 |0.999694316126568|0.979622471169646</span><br><span class="line">Mus_musculus_E14_cells_control_shRNA_rep2_2_fastqc|36763726   |50 |0.990428680495556|0.951578715079022</span><br><span class="line">-------------------------------------------------------------------------------------------------------</span><br><span class="line"><span class="comment">#截图几个基因的 IGV 可视化结构</span></span><br><span class="line">grep -w <span class="string">'gene'</span> gencode.v26lift37.annotation.gtf |grep -w <span class="string">'TP53'</span>|cut -f 1,4,5 &gt;&gt;gene.bed</span><br><span class="line">grep -w <span class="string">'gene'</span> gencode.v26lift37.annotation.gtf |grep -w <span class="string">'KRAS'</span>|cut -f 1,4,5 &gt;&gt;gene.bed</span><br><span class="line">grep -w <span class="string">'gene'</span> gencode.v26lift37.annotation.gtf |grep -w <span class="string">'EGFR'</span>|cut -f 1,4,5 &gt;&gt;gene.bed</span><br><span class="line">bedtools igv -i gene.bed &gt;Bach_sanpshot.txt </span><br><span class="line"><span class="comment">#perl -alne '&#123;print "goto $F[0]:$F[1]-$F[2]\nsnapshot $F[3].png"&#125; '</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##3. HISAT2比对</span></span><br><span class="line">---------------------------------------------------------------</span><br><span class="line"><span class="comment">#map.sh</span></span><br><span class="line">--------------------------------------------------------------------------------------------</span><br><span class="line"><span class="meta">#! usr/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -u</span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">set</span> -o pipefail</span><br><span class="line"></span><br><span class="line">hg19_ref=/data/Reference/index/hisat2/hg19/genome</span><br><span class="line">mm10_ref=/data/Reference/index/hisat2/mm10/genome</span><br><span class="line">data_path=/data/RNASeq/MYShen</span><br><span class="line">NUM_THREADS=5</span><br><span class="line">ls Homo*1.fastq.gz|<span class="keyword">while</span> <span class="built_in">read</span> id; \</span><br><span class="line"><span class="keyword">do</span>((hisat2 -t -p <span class="variable">$NUM_THREADS</span> -x <span class="variable">$hg19_ref</span> -1 <span class="variable">$data_path</span>/<span class="variable">$&#123;id%_*&#125;</span>_1.fastq.gz -2 \</span><br><span class="line"><span class="variable">$data_path</span>/<span class="variable">$&#123;id%_*&#125;</span>_2.fastq.gz 2&gt;<span class="variable">$&#123;id%_*&#125;</span>_map.log | samtools view -b - &gt;<span class="variable">$&#123;id%_*&#125;</span>.bam) &amp;);<span class="keyword">done</span> </span><br><span class="line">                               </span><br><span class="line">ls  Mus*1.fastq.gz|<span class="keyword">while</span> <span class="built_in">read</span> id; \</span><br><span class="line"><span class="keyword">do</span>((hisat2 -t -p <span class="variable">$NUM_THREADS</span> -x <span class="variable">$mm10_ref</span> -1 <span class="variable">$data_path</span>/<span class="variable">$&#123;id%_*&#125;</span>_1.fastq.gz -2 \</span><br><span class="line"><span class="variable">$data_path</span>/<span class="variable">$&#123;id%_*&#125;</span>_2.fastq.gz 2&gt;<span class="variable">$&#123;id%_*&#125;</span>_map.log | samtools view -b - &gt;<span class="variable">$&#123;id%_*&#125;</span>.bam) &amp;);<span class="keyword">done</span></span><br><span class="line">---------------------------------------------------------------------------------------------        </span><br><span class="line"></span><br><span class="line">bash map.sh</span><br><span class="line"><span class="comment">##因为前面开了并行，等前面执行完成，后面再单独执行</span></span><br><span class="line">ls *.bam | <span class="keyword">while</span> <span class="built_in">read</span> id;<span class="keyword">do</span> samtools sort --threads 25 <span class="variable">$id</span> -o <span class="variable">$&#123;id%.*&#125;</span>_sorted.bam; <span class="keyword">done</span> </span><br><span class="line">ls *_sorted.bam | <span class="keyword">while</span> <span class="built_in">read</span> id;<span class="keyword">do</span> samtools index <span class="variable">$id</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 4.Count reads</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 人类</span></span><br><span class="line">mkdir matrix</span><br><span class="line">Homo_GTF=/data/Reference/gtf/gencode/gencode.v26lift37.annotation.gtf</span><br><span class="line"><span class="comment">###count 结果显示基因名称，如果用基因的id号，将 -i gene_name 参数删除即可</span></span><br><span class="line">ls Homo_sapiens*sorted.bam | <span class="keyword">while</span> <span class="built_in">read</span> id; <span class="keyword">do</span> (htseq-count -f bam -r pos -i gene_name -s no \</span><br><span class="line"><span class="variable">$id</span> <span class="variable">$Homo_GTF</span> &gt; matrix/<span class="variable">$&#123;id%_*&#125;</span>.count 2&gt; matrix/<span class="variable">$&#123;id%_*&#125;</span>.<span class="built_in">log</span> &amp;); <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 老鼠</span></span><br><span class="line"><span class="comment"># 下载 gtf：http://www.gencodegenes.org/mouse_stats/archive.html</span></span><br><span class="line">axel ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_mouse/release_M10/gencode.vM10.annotation.gtf.gz</span><br><span class="line">gzip -d gencode.vM10.annotation.gtf.gz</span><br><span class="line">Mus_GTF=/data/Reference/gtf/gencode/gencode.vM10.annotation.gtf</span><br><span class="line">ls Mus_musculus*sorted.bam|<span class="keyword">while</span> <span class="built_in">read</span> id;<span class="keyword">do</span> (htseq-count -f bam -r pos -i gene_name -s no \</span><br><span class="line"><span class="variable">$id</span> <span class="variable">$Mus_GTF</span> &gt; matrix/<span class="variable">$&#123;id%_*&#125;</span>.count 2&gt; matrix/<span class="variable">$&#123;id%_*&#125;</span>.<span class="built_in">log</span> &amp;);<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##另外一些相关的代码</span></span><br><span class="line"><span class="comment">## ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_mouse/release_M1/</span></span><br><span class="line"><span class="comment">## http://hgdownload-test.cse.ucsc.edu/goldenPath/mm10/liftOver/</span></span><br><span class="line"><span class="comment">## GRCm38/mm10 (Dec, 2011) </span></span><br><span class="line"><span class="comment">## ls *bam |while read id;do ( ~/.local/bin/htseq-count  -f bam  $id   genecode/mm9/gencode.vM1.annotation.gtf.gz  1&gt;$&#123;id%%.*&#125;.gene.counts ) ;done </span></span><br><span class="line"><span class="comment">## ls *bam |while read id;do ( ~/.local/bin/htseq-count  -f bam -i exon_id  $id   genecode/mm9/gencode.vM1.annotation.gtf.gz  1&gt;$&#123;id%%.*&#125;.exon.counts ) ;done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> matrix</span><br><span class="line"><span class="comment">#wc命令的功能为统计指定文件中的字节数-c,字符数-m,字数-w,行数-l</span></span><br><span class="line">wc -l Homo_sapiens*.count</span><br><span class="line">head -n 4 Homo_sapiens*.count</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perl -lne <span class="string">'if($ARGV=~/Homo_sapiens_(.*)count/)&#123;print "$1\t$_"&#125;'</span> *|grep -v Homo_sapiens&gt;hg1.count</span><br><span class="line"><span class="comment"># 先把所有文件进行合并</span></span><br><span class="line">setwd(<span class="string">"~/rna_seq/work/matrix"</span>)</span><br><span class="line">hg &lt;- read.csv(file = <span class="string">"hg.count"</span>,header = F,sep = <span class="string">"\t"</span>)</span><br><span class="line">colnames(hg) &lt;- c(<span class="string">'sample'</span>,<span class="string">'gene'</span>,<span class="string">'count'</span>)</span><br><span class="line">library(reshape2)</span><br><span class="line">reads &lt;- dcast(hg,formula = gene ~ sample)</span><br><span class="line">write.table(reads,file = <span class="string">"hg_join.count"</span>,sep = <span class="string">"\t"</span>,quote = FALSE,row.names = FALSE)</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>NCBI-GEO数据下载</title>
      <link href="/hexo/2017/11/04/2017-11-04_NCBI_ftp_http_Command/"/>
      <url>/hexo/2017/11/04/2017-11-04_NCBI_ftp_http_Command/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="GEO-基础"><a href="#GEO-基础" class="headerlink" title="GEO 基础"></a>GEO 基础</h1><ul><li>GEO Platform (GPL) 芯片平台</li><li>GEO Sample (GSM) 样本ID号</li><li>GEO Series (GSE) study的ID号</li><li>GEO Dataset (GDS) 数据集的ID号 ## 用法</li></ul><h1 id="数据搜索"><a href="#数据搜索" class="headerlink" title="数据搜索"></a>数据搜索</h1><p><strong>方法-</strong></p><ol><li><p>在<a href="https://www.ncbi.nlm.nih.gov/" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/</a> 中搜索 GSE81916 选择 BioProject查询 Accession：PRJNA323422; GEO: GSE81916</p></li><li><p><a href="https://trace.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA323422" target="_blank" rel="noopener">https://trace.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA323422</a> 可以查询数据具体信息</p></li></ol><p><strong>方法二</strong></p><ol><li><p>在 Gene Expression Omnibus (<a href="https://www.ncbi.nlm.nih.gov/geo/)搜素GSE81916进入" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/)搜素GSE81916进入</a></p></li><li><p><a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE81916" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE81916</a> 数据地址</p></li></ol><h1 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h1><h4 id="原始GSE数据，以GSE114727为例"><a href="#原始GSE数据，以GSE114727为例" class="headerlink" title="原始GSE数据，以GSE114727为例"></a>原始GSE数据，以GSE114727为例</h4><p>ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114727</p><p>ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE114nnn/GSE114727/suppl/GSE114727_RAW.tar</p><p>ftp地址用迅雷下载即可</p><hr><p><strong>ftp地址</strong><br>ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP075/SRP075747</p><p>可以分为以下几个部分</p><ul><li>所有SRA数据的共同部分： ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant</li><li>reads表示存放reads数据，在FTP可以看到另一个选项是analysis，表示分析结果</li><li>ByStudy表示根据Study进行分类，其他还可以根据实验ByExp,根据Run,ByRun.</li><li>sra/SRP/SRP075/SRP075747: 后面部分都是为了便于检索。</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="comment"># <span class="doctag">@author</span>: xt</span></span><br><span class="line"><span class="comment"># <span class="doctag">@date</span>: 2017-11-04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">` seq 56 62`</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">axel <span class="symbol">ftp:</span>/<span class="regexp">/ftp-trace.ncbi.nlm.nih.gov/sra</span><span class="regexp">/sra-instant/reads</span><span class="regexp">/ByStudy/sra</span><span class="regexp">/SRP/</span>SRP075/SRP075747/SRR35899$&#123;i&#125;/SRR35899$&#123;i&#125;.sra</span><br><span class="line"><span class="comment">#wget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP075/SRP075747/SRR35899$&#123;i&#125;/SRR35899$&#123;i&#125;.sra</span></span><br><span class="line"><span class="comment">#echo $i </span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># https:<span class="comment">//www.ncbi.nlm.nih.gov/gquery/?term=GSE81916</span></span><br><span class="line"># esearch -<span class="keyword">db</span> sra -<span class="keyword">query</span> PRJNA299273  | efetch -<span class="keyword">format</span> runinfo &gt; runinfo.txt # 这个命令是把所有的结果放到一个文件里，也可以通过 https:<span class="comment">//trace.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA323422下载SRR的编号</span></span><br><span class="line"># <span class="keyword">cat</span> runinfo.txt | cut -f 1 -<span class="keyword">d</span> ',' | grep SRR &gt; sra.ids</span><br><span class="line"># ~/biosoft/sratoolkit.2.8.2-1-centos_linux64/bin/prefetch --option-<span class="keyword">file</span> sra.ids # 数据存在/home/shenmy/ncbi/public/sra这个文件下面，找了半天</span><br><span class="line"><span class="keyword">mkdir</span> /mnt/<span class="keyword">d</span>/rna_seq/data  &amp;&amp; <span class="keyword">cd</span> /mnt/<span class="keyword">d</span>/rna_seq/data</span><br><span class="line">perl -lne '<span class="variable">$id</span>=<span class="built_in">substr</span>(<span class="variable">$_</span>,0,6);<span class="keyword">print</span> <span class="string">"axel ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR/$id/$_/$_.sra"</span>' SRR_Acc_List.txt &gt;sra_down.<span class="keyword">sh</span></span><br><span class="line">bash sra_down.<span class="keyword">sh</span></span><br><span class="line"># 改成用axel下是因为prefetch下载总是不成功</span><br><span class="line"><span class="keyword">ls</span> *.sra|<span class="keyword">while</span> <span class="keyword">read</span> id;<span class="keyword">do</span>(/mnt/<span class="keyword">d</span>/Software/Biosoft/sratoolkit/sratoolkit.2.8.2-1-ubuntu64/bin/fastq-dump --<span class="keyword">split</span>-3 <span class="variable">$id</span>);done</span><br><span class="line"><span class="keyword">rm</span> *.sra</span><br><span class="line">chmod <span class="keyword">u</span>-w *</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>使用Bioconda管理Linux系统中的生物信息软件</title>
      <link href="/hexo/2017/11/03/2017-11-03_Bioconda_software/"/>
      <url>/hexo/2017/11/03/2017-11-03_Bioconda_software/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://zhuanlan.zhihu.com/p/25085567" target="_blank" rel="noopener">原文</a></p><p>生物信息操作中必不可少的就是Linux系统中各种生物信息学软件的安装。不同软件有不同的安装方法，对系统环境的依赖不同也不同，对于新手来说，经常是一个软件的安装和配置就要折腾很长一段时间时间，大大增加了学习成本。</p><p>我自己有两个方法来尽量减少安装软件所消耗的时间：一是直接安装Bio-linux系统，这个系统已经内置了大部分生物信息分析所需要的软件，非常适合新手直接学习分析技术，绕过软件安装和环境配置的麻烦问题。二是使用Bioconda安装和管理各种软件。Bio-linux系统和常用的服务器系统还是有差别的，如果想在学习生物信息分析的同时掌握一些Linux系统的操作甚至维护的技术，配置一台CentOS系统的计算机就很有必要了。这个时候Bioconda就非常有用了。</p><p>本文参考知乎专栏以及基因课相关课程 (<a href="http://genek.tv/dirlist/index/id/65" target="_blank" rel="noopener">http://genek.tv/dirlist/index/id/65</a>) 对Bioconda的安装和使用做简单介绍。</p><h1 id="Bioconda介绍"><a href="#Bioconda介绍" class="headerlink" title="Bioconda介绍"></a>Bioconda介绍</h1><p>Bioconda是conda上一个分发生物信息的频道。而conda是最初为管理python包而建立的。以下是相关介绍：</p><p>“Conda is a portable package manager primarily for python and precompiled binaries. Miniconda is the base system of conda. It includes a standard python and a few required dependencies such as readline and sqlite. In conda, a channel contains a set of software typically managed by the same group.Bioconda is a channel of conda focusing on bioinformatics software. ”</p><p>Bioconda主页：Using bioconda - Bioconda documentation</p><p>anaconda、miniconda和conda的区别：FAQs - Bioconda documentation</p><p>简单说来：“conda is a package manager, Miniconda is the conda installer, and Anaconda is a scientific Python distribution that also includes conda.”</p><p>Bioconda的优点是安装简单，各个软件依赖的环境一同打包且相互隔离，非常适合在服务器中建立自己的生物信息分析环境。</p><h1 id="Bioconda的下载与安装"><a href="#Bioconda的下载与安装" class="headerlink" title="Bioconda的下载与安装"></a>Bioconda的下载与安装</h1><p>1.下载和安装miniconda</p><p>bioconda的使用首先需要安装miniconda(<a href="http://conda.pydata.org/miniconda.html" target="_blank" rel="noopener">http://conda.pydata.org/miniconda.html</a>) 。选择linux的64位的python2.7版本（共提供win、Mac、linux三种系统，同时支持python3和python2），直接点击下载。或者复制链接后，用wget下载。下载完成后，在终端键入bash命令进行安装. 之后按照提示点击回车，输入要安装的位置，或者输入yes.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.<span class="keyword">sh</span></span><br><span class="line">bash Miniconda2-latest-Linux-x86_64.<span class="keyword">sh</span></span><br><span class="line">##输入yes后，还没有完成最后安装，还需要<span class="keyword">source</span>一下</span><br><span class="line"><span class="keyword">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>这时miniconda就安装好了，输入“conda”会显示相应的信息：</p><p>2.添加channels</p><p>输入“conda list”来查看已经安装的软件：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda<span class="built_in"> config </span>--<span class="builtin-name">add</span> channels conda-forge</span><br><span class="line">conda<span class="built_in"> config </span>--<span class="builtin-name">add</span> channels defaults</span><br><span class="line">conda<span class="built_in"> config </span>--<span class="builtin-name">add</span> channels r</span><br><span class="line">conda<span class="built_in"> config </span>--<span class="builtin-name">add</span> channels bioconda</span><br></pre></td></tr></table></figure></p><p>查看已经添加的channels：</p><p>conda config —get channels</p><p>3.更新miniconda</p><p>conda update conda</p><p>4.卸载miniconda  删除miniconda的整个文件夹：</p><p>rm -rf ~/miniconda</p><p>从环境变量中去掉miniconda：打开~/.bash_profile文件，删掉其中miniconda的路径，关闭并保存</p><p>删除隐藏的.condarc 、.conda以及.continuum文件</p><h1 id="利用Bioconda安装生物信息软件"><a href="#利用Bioconda安装生物信息软件" class="headerlink" title="利用Bioconda安装生物信息软件"></a>利用Bioconda安装生物信息软件</h1><p>要通过conda安装软件，首先从这里<a href="https://bioconda.github.io/recipes" target="_blank" rel="noopener">Available packages</a>查找该软件是否被conda支持。如果支持，只需输入以下命令即可安装：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="keyword">install </span>fastqc（软件名）</span><br><span class="line"></span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span>samtools=<span class="number">1</span>.<span class="number">5</span></span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span>htseq=<span class="number">0</span>.<span class="number">7</span>.<span class="number">2</span></span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span>hisat2=<span class="number">2</span>.<span class="number">1</span>.<span class="number">0</span></span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span>fastqc=<span class="number">0</span>.<span class="number">11</span>.<span class="number">5</span></span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">jfear </span><span class="keyword">sratoolkit=2.8.1</span></span><br></pre></td></tr></table></figure></p><p>安装完成后，可以用“which 软件名”来查看该软件安装的位置：</p><p>conda默认安装软件的最新版本，如果想安装指定版本的某个软件，可以先用“conda search 软件名”搜索软件版本</p><p>星号标记的表示是已经安装的版本。要安装其他版本，输入：</p><p>conda install 软件名=版本号<br>这时conda会先卸载已安装版本，然后重新安装指定版本。</p><p><strong>查看已安装软件</strong>：conda list</p><p><strong>更新指定软件</strong>：conda update 软件名</p><p><strong>卸载指定软件</strong>：conda remove 软件名</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>生物信息学常见1000个软件的安装代码</title>
      <link href="/hexo/2017/11/03/2017-11-03_1000software/"/>
      <url>/hexo/2017/11/03/2017-11-03_1000software/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>引自Jiangming Zeng<a href="http://mp.weixin.qq.com/s?__biz=MzAxMDkxODM1Ng==&amp;mid=2247484870&amp;idx=1&amp;sn=d336ed1951b5cff14c591201084622fd&amp;chksm=9b48457dac3fcc6bb25bdb2a0e744013a3c11d0b7b8cc8b9f274560260618c07bdf438611752&amp;mpshare=1&amp;scene=1&amp;srcid=08174RqFPmfWUyO1PO1Xh9Uz#rd" target="_blank" rel="noopener">原文</a></p><h1 id="分析软件"><a href="#分析软件" class="headerlink" title="分析软件"></a>分析软件</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## annovar and GATK </span></span><br><span class="line"><span class="comment">## Download and install sratoolkit</span></span><br><span class="line"><span class="comment">## http://www.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=software</span></span><br><span class="line"><span class="comment">## http://www.ncbi.nlm.nih.gov/books/NBK158900/</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir sratoolkit &amp;&amp;  cd sratoolkit</span><br><span class="line">wget http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/<span class="number">2.6</span><span class="number">.3</span>/sratoolkit.2.6.3-centos_linux64.tar.gz</span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">##  Length: 63453761 (61M) [application/x-gzip]</span></span><br><span class="line"><span class="comment">##  Saving to: "sratoolkit.2.6.3-centos_linux64.tar.gz"</span></span><br><span class="line">tar zxvf sratoolkit.2.6.3-centos_linux64.tar.gz</span><br><span class="line">~/biosoft/sratoolkit/sratoolkit.2.6.3-centos_linux64/bin/fastdump -h</span><br><span class="line">mkdir -p  ~/biosoft/myBin</span><br><span class="line">echo <span class="string">'export PATH=/home/jianmingzeng/biosoft/myBin/bin:$PATH'</span> &gt;&gt;~/.bashrc </span><br><span class="line"><span class="keyword">source</span> ~/.bashrc</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir cmake &amp;&amp;  cd cmake</span><br><span class="line">wget http://cmake.org/files/v3.3/cmake-<span class="number">3.3</span><span class="number">.2</span>.tar.gz</span><br><span class="line">tar xvfz cmake-<span class="number">3.3</span><span class="number">.2</span>.tar.gz</span><br><span class="line">cd cmake-<span class="number">3.3</span><span class="number">.2</span> </span><br><span class="line">./configure --prefix=/home/jianmingzeng/biosoft/myBin</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Download and install samtools</span></span><br><span class="line"><span class="comment">## http://samtools.sourceforge.net/</span></span><br><span class="line"><span class="comment">## http://www.htslib.org/doc/samtools.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##存放高通量测序比对结果的标准格式</span></span><br><span class="line"><span class="comment">##功能： Reading/writing/editing/indexing/viewing SAM/BAM/CRAM format</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir samtools &amp;&amp;  cd samtools</span><br><span class="line">wget https://github.com/samtools/samtools/releases/download/<span class="number">1.3</span><span class="number">.1</span>/samtools-<span class="number">1.3</span><span class="number">.1</span>.tar.bz2 </span><br><span class="line">tar xvfj samtools-<span class="number">1.3</span><span class="number">.1</span>.tar.bz2 </span><br><span class="line">cd samtools-<span class="number">1.3</span><span class="number">.1</span> </span><br><span class="line">./configure --prefix=/home/jianmingzeng/biosoft/myBin</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">~/biosoft/myBin/bin/samtools --help</span><br><span class="line">~/biosoft/myBin/bin/plot-bamstats --help</span><br><span class="line">cd htslib-<span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">./configure --prefix=/home/jianmingzeng/biosoft/myBin</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">~/biosoft/myBin/bin/tabix</span><br><span class="line"><span class="comment"># ## Download and install tabix </span></span><br><span class="line"><span class="comment"># cd ~/biosoft</span></span><br><span class="line"><span class="comment"># mkdir tabix &amp;&amp;  cd tabix</span></span><br><span class="line"><span class="comment"># # http://genometoolbox.blogspot.com/2013/11/installing-tabix-on-unix.html</span></span><br><span class="line"><span class="comment"># tar xvfj tabix-0.2.6.tar.bz2 </span></span><br><span class="line"><span class="comment"># cd tabix-0.2.6</span></span><br><span class="line"><span class="comment"># make</span></span><br><span class="line"><span class="comment"># cd ~/biosoft</span></span><br><span class="line"><span class="comment"># ## http://samtools.github.io/bcftools/</span></span><br><span class="line"><span class="comment"># mkdir htslib &amp;&amp;  cd htslib  </span></span><br><span class="line"><span class="comment"># git clone git://github.com/samtools/htslib.git </span></span><br><span class="line"><span class="comment"># cd htslib</span></span><br><span class="line"><span class="comment"># make </span></span><br><span class="line"><span class="comment">## Download and install bcftools</span></span><br><span class="line"><span class="comment">## http://www.htslib.org/download/</span></span><br><span class="line"><span class="comment">## http://www.htslib.org/doc/bcftools-1.0.html</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir bcftools &amp;&amp;  cd bcftools</span><br><span class="line">wget https://github.com/samtools/bcftools/releases/download/<span class="number">1.3</span><span class="number">.1</span>/bcftools-<span class="number">1.3</span><span class="number">.1</span>.tar.bz2</span><br><span class="line">tar xvfj bcftools-<span class="number">1.3</span><span class="number">.1</span>.tar.bz2</span><br><span class="line">cd bcftools-<span class="number">1.3</span><span class="number">.1</span> </span><br><span class="line">make</span><br><span class="line">cp bcftools /home/jianmingzeng/biosoft/myBin</span><br><span class="line">~/biosoft/myBin/bin/bcftools --help</span><br><span class="line"><span class="comment">## Download and install vcftools</span></span><br><span class="line"><span class="comment">## https://vcftools.github.io/index.html </span></span><br><span class="line"><span class="comment">## http://vcftools.sourceforge.net/specs.html</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir vcftools &amp;&amp;  cd vcftools</span><br><span class="line"><span class="comment"># wget https://codeload.github.com/vcftools/vcftools/legacy.zip/master -O  vcftools-vcftools-v0.1.14-24-gac1bfd5.zip </span></span><br><span class="line"><span class="comment"># unzip vcftools-vcftools-v0.1.14-24-gac1bfd5.zip </span></span><br><span class="line"><span class="comment"># mv vcftools-vcftools-ac1bfd5 vcftools-v0.1.14-24</span></span><br><span class="line"><span class="comment"># cd vcftools-v0.1.14-24</span></span><br><span class="line"><span class="comment"># export PERL5LIB=/home/jianmingzeng/biosoft/vcftools/vcftools-v0.1.14-24/src/perl/</span></span><br><span class="line"><span class="comment"># ./autogen.sh </span></span><br><span class="line"><span class="comment"># ./configure     --prefix=/home/jianmingzeng/biosoft/myBin</span></span><br><span class="line"><span class="comment"># make </span></span><br><span class="line"><span class="comment"># make install </span></span><br><span class="line"><span class="comment"># ~/biosoft/myBin/bin/vcftools --help</span></span><br><span class="line">wget https://sourceforge.net/projects/vcftools/files/vcftools_0.1.13.tar.gz </span><br><span class="line">tar zxvf vcftools_0.1.13.tar.gz</span><br><span class="line">cd  vcftools_0.1.13</span><br><span class="line">make</span><br><span class="line"><span class="comment">## Download and install ANNOVAR  </span></span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># The latest version of ANNOVAR (2016Feb01) can be downloaded here (registration required)</span></span><br><span class="line"><span class="comment"># http://www.openbioinformatics.org/annovar/annovar_download_form.php </span></span><br><span class="line">mkdir ANNOVAR  &amp;&amp;  cd ANNOVAR  </span><br><span class="line"><span class="comment">## Download and install samstat</span></span><br><span class="line"><span class="comment">## http://samstat.sourceforge.net/</span></span><br><span class="line"><span class="comment">## http://www.htslib.org/doc/samtools.html</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir samstat &amp;&amp;  cd samstat</span><br><span class="line">wget http://liquidtelecom.dl.sourceforge.net/project/samstat/samstat-<span class="number">1.5</span>.tar.gz</span><br><span class="line">tar zxvf  samstat-<span class="number">1.5</span>.tar.gz </span><br><span class="line">cd samstat-<span class="number">1.5</span> </span><br><span class="line">./configure --prefix=/home/jianmingzeng/biosoft/myBin</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">~/biosoft/myBin/bin/samstat --help</span><br><span class="line"><span class="comment">## Download and install picardtools</span></span><br><span class="line"><span class="comment">## https://sourceforge.net/projects/picard/</span></span><br><span class="line"><span class="comment">## https://github.com/broadinstitute/picard</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir picardtools &amp;&amp;  cd picardtools</span><br><span class="line">wget http://ncu.dl.sourceforge.net/project/picard/picard-tools/<span class="number">1.119</span>/picard-tools-<span class="number">1.119</span>.zip</span><br><span class="line">unzip picard-tools-<span class="number">1.119</span>.zip </span><br><span class="line"><span class="comment">## Download and install freebayes</span></span><br><span class="line"><span class="comment">## https://github.com/ekg/freebayes</span></span><br><span class="line"><span class="comment">## http://clavius.bc.edu/~erik/CSHL-advanced-sequencing/freebayes-tutorial.html</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir freebayes &amp;&amp;  cd freebayes</span><br><span class="line"><span class="comment">## wget -O freebayes-master.zip  https://codeload.github.com/ekg/freebayes/zip/master</span></span><br><span class="line"><span class="comment">## unzip freebayes-master.zip</span></span><br><span class="line">wget http://clavius.bc.edu/~erik/freebayes/freebayes-5d5b8ac0.tar.gz</span><br><span class="line">tar xzvf freebayes-5d5b8ac0.tar.gz</span><br><span class="line">cd freebayes</span><br><span class="line">make</span><br><span class="line"> ~/biosoft/freebayes/freebayes/bin/freebayes</span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment">## https://sourceforge.net/projects/varscan/files/</span></span><br><span class="line"><span class="comment">## http://varscan.sourceforge.net/index.html</span></span><br><span class="line">mkdir VarScan  &amp;&amp;  cd VarScan  </span><br><span class="line">wget https://sourceforge.net/projects/varscan/files/VarScan.v2.3.9.jar </span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir SnpEff &amp;&amp;  cd SnpEff</span><br><span class="line"><span class="comment">##  http://snpeff.sourceforge.net/</span></span><br><span class="line"><span class="comment">##  http://snpeff.sourceforge.net/SnpSift.html </span></span><br><span class="line"><span class="comment">##  http://snpeff.sourceforge.net/SnpEff_manual.html</span></span><br><span class="line">wget http://sourceforge.net/projects/snpeff/files/snpEff_latest_core.zip </span><br><span class="line"><span class="comment">## java -jar snpEff.jar download GRCh37.75</span></span><br><span class="line"><span class="comment">## java -Xmx4G -jar snpEff.jar -i vcf -o vcf GRCh37.75 example.vcf &gt; example_snpeff.vcf</span></span><br><span class="line">unzip snpEff_latest_core.zip</span><br><span class="line"><span class="comment">## https://github.com/najoshi/sickle</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir sickle &amp;&amp; cd sickle</span><br><span class="line">wget https://codeload.github.com/najoshi/sickle/zip/master -O sickle.zip</span><br><span class="line">unzip sickle.zip</span><br><span class="line">cd sickle-master</span><br><span class="line">make</span><br><span class="line">~/biosoft/sickle/sickle-master/sickle -h</span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment">## http://www.usadellab.org/cms/?page=trimmomatic</span></span><br><span class="line"><span class="comment">## http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/TrimmomaticManual_V0.32.pdf</span></span><br><span class="line">mkdir Trimmomatic &amp;&amp; cd Trimmomatic</span><br><span class="line">wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-<span class="number">0.36</span>.zip </span><br><span class="line">unzip Trimmomatic-<span class="number">0.36</span>.zip </span><br><span class="line">java -jar ~/biosoft/Trimmomatic/Trimmomatic-<span class="number">0.36</span>/trimmomatic-<span class="number">0.36</span>.jar -h</span><br><span class="line"><span class="comment">## Download and install bedtools</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir bedtools &amp;&amp;  cd bedtools</span><br><span class="line">wget https://github.com/arq5x/bedtools2/releases/download/v2.25.0/bedtools-<span class="number">2.25</span><span class="number">.0</span>.tar.gz</span><br><span class="line"><span class="comment">## Length: 19581105 (19M) [application/octet-stream] </span></span><br><span class="line">tar -zxvf bedtools-<span class="number">2.25</span><span class="number">.0</span>.tar.gz</span><br><span class="line">cd bedtools2</span><br><span class="line">make</span><br><span class="line"><span class="comment">#~/biosoft/bedtools/bedtools2/bin/</span></span><br><span class="line"><span class="comment">## Download and install PeakRanger</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir PeakRanger &amp;&amp;  cd PeakRanger</span><br><span class="line">wget https://sourceforge.net/projects/ranger/files/PeakRanger-<span class="number">1.18</span>-Linux-x86_64.zip </span><br><span class="line"><span class="comment">## Length: 1517587 (1.4M) [application/octet-stream]</span></span><br><span class="line">unzip PeakRanger-<span class="number">1.18</span>-Linux-x86_64.zip</span><br><span class="line">~/biosoft/PeakRanger/bin/peakranger -h</span><br><span class="line"><span class="comment">## Download and install bowtie</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir bowtie &amp;&amp;  cd bowtie</span><br><span class="line">wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/<span class="number">2.2</span><span class="number">.9</span>/bowtie2-<span class="number">2.2</span><span class="number">.9</span>-linux-x86_64.zip </span><br><span class="line"><span class="comment">#Length: 27073243 (26M) [application/octet-stream]</span></span><br><span class="line"><span class="comment">#Saving to: "download"   ## I made a mistake here for downloading the bowtie2 </span></span><br><span class="line">mv download  bowtie2-<span class="number">2.2</span><span class="number">.9</span>-linux-x86_64.zip</span><br><span class="line">unzip bowtie2-<span class="number">2.2</span><span class="number">.9</span>-linux-x86_64.zip</span><br><span class="line"><span class="comment">## Download and install BWA</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir bwa &amp;&amp;  cd bwa</span><br><span class="line"><span class="comment">#http://sourceforge.net/projects/bio-bwa/files/</span></span><br><span class="line">wget https://sourceforge.net/projects/bio-bwa/files/bwa-<span class="number">0.7</span><span class="number">.15</span>.tar.bz2 </span><br><span class="line">tar xvfj bwa-<span class="number">0.7</span><span class="number">.15</span>.tar.bz2 <span class="comment"># x extracts, v is verbose (details of what it is doing), f skips prompting for each individual file, and j tells it to unzip .bz2 files</span></span><br><span class="line">cd bwa-<span class="number">0.7</span><span class="number">.15</span></span><br><span class="line">make</span><br><span class="line"><span class="comment">#export PATH=$PATH:/path/to/bwa-0.7.15 # Add bwa to your PATH by editing ~/.bashrc file (or .bash_profile or .profile file)</span></span><br><span class="line"><span class="comment"># /path/to/ is an placeholder. Replace with real path to BWA on your machine</span></span><br><span class="line"><span class="comment">#source ~/.bashrc</span></span><br><span class="line"><span class="comment">## Download and install macs2  </span></span><br><span class="line"><span class="comment">## // https://pypi.python.org/pypi/MACS2/</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir macs2 &amp;&amp;  cd macs2</span><br><span class="line"><span class="comment">## just stick to PyPI release: https://pypi.python.org/pypi/MACS2</span></span><br><span class="line">wget https://pypi.python.org/packages/9f/<span class="number">99</span>/a8ac96b357f6b0a6f559fe0f5a81bcae12b98579551620ce07c5183aee2c/MACS2-<span class="number">2.1</span><span class="number">.1</span><span class="number">.20160309</span>.tar.gz -O MACS2-<span class="number">2.1</span><span class="number">.1</span>.tar.gz </span><br><span class="line">tar zxvf  MACS2-<span class="number">2.1</span><span class="number">.1</span>.tar.gz </span><br><span class="line">cd  MACS2-<span class="number">2.1</span><span class="number">.1</span><span class="number">.20160309</span>/</span><br><span class="line">python setup.py install --user </span><br><span class="line"><span class="comment">## https://docs.python.org/2/install/</span></span><br><span class="line">~/.local/bin/macs2 --help</span><br><span class="line"><span class="comment">#wget https://codeload.github.com/taoliu/MACS/zip/master -O MACS-master.zip</span></span><br><span class="line"><span class="comment">#unzip MACS-master.zip</span></span><br><span class="line"><span class="comment">#cd MACS-master </span></span><br><span class="line"><span class="comment">## So you can't just pull github snapshot then run setup.py to install MACS2. Instead</span></span><br><span class="line"><span class="comment"># ImageMagick</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir ImageMagick &amp;&amp;  cd ImageMagick</span><br><span class="line"><span class="comment">## http://www.imagemagick.org/ </span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir weblogo &amp;&amp;  cd weblogo</span><br><span class="line"><span class="comment">## http://weblogo.berkeley.edu/</span></span><br><span class="line">wget http://weblogo.berkeley.edu/release/weblogo.2.8.2.tar.gz</span><br><span class="line">tar zxvf weblogo.2.8.2.tar.gz</span><br><span class="line">cd weblogo</span><br><span class="line">export PATH=$PATH:/home/jianmingzeng/biosoft/weblogo/weblogo</span><br><span class="line"><span class="keyword">source</span> ~/.bashrc</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir Ghostscript &amp;&amp;  cd Ghostscript</span><br><span class="line"><span class="comment"># http://www.ghostscript.com/download/gsdnld.html</span></span><br><span class="line"><span class="comment"># http://www.ghostscript.com/doc/9.20/Readme.htm</span></span><br><span class="line">wget https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs920/ghostscript-<span class="number">9.20</span>-linux-x86_64.tgz </span><br><span class="line">tar zxvf ghostscript-<span class="number">9.20</span>-linux-x86_64.tgz</span><br><span class="line">cp ghostscript-<span class="number">9.20</span>-linux-x86_64/gs-<span class="number">920</span>-linux_x86_64  ~/biosoft/myBin/bin/gs</span><br><span class="line"><span class="comment">## make sure the "gs" program is executable </span></span><br><span class="line"><span class="comment">## Download and install homer (Hypergeometric Optimization of Motif EnRichment)</span></span><br><span class="line"><span class="comment">## // http://homer.salk.edu/homer/</span></span><br><span class="line"><span class="comment">## // http://blog.qiubio.com:8080/archives/3024 </span></span><br><span class="line"><span class="comment">## The commands gs, seqlogo, blat, and samtools should now work from the command line</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir homer &amp;&amp;  cd homer</span><br><span class="line">wget http://homer.salk.edu/homer/configureHomer.pl </span><br><span class="line">perl configureHomer.pl -install</span><br><span class="line">perl configureHomer.pl -install hg19</span><br><span class="line"><span class="comment">## Download and install SWEMBL</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir SWEMBL &amp;&amp;  cd SWEMBL</span><br><span class="line"><span class="comment">#### readme: http://www.ebi.ac.uk/~swilder/SWEMBL/beginners.html</span></span><br><span class="line">wget http://www.ebi.ac.uk/~swilder/SWEMBL/SWEMBL.3.3.1.tar.bz2 </span><br><span class="line">tar xvfj SWEMBL.3.3.1.tar.bz2</span><br><span class="line">cd SWEMBL.3.3.1/</span><br><span class="line">make</span><br><span class="line"><span class="comment">## error </span></span><br><span class="line"><span class="comment">## Download and install SISSRs</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir SISSRs &amp;&amp;  cd SISSRs</span><br><span class="line"><span class="comment">#### readme: https://dir.nhlbi.nih.gov/papers/lmi/epigenomes/sissrs/SISSRs-Manual.pdf</span></span><br><span class="line">wget http://dir.nhlbi.nih.gov/papers/lmi/epigenomes/sissrs/sissrs_v1.4.tar.gz</span><br><span class="line">tar xzvf sissrs_v1.4.tar.gz</span><br><span class="line">~/biosoft/SISSRs/sissrs.pl</span><br><span class="line"><span class="comment">## Download and install SISSRs</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir QuEST &amp;&amp;  cd QuEST</span><br><span class="line"><span class="comment">#### http://mendel.stanford.edu/SidowLab/downloads/quest/</span></span><br><span class="line">wget http://mendel.stanford.edu/SidowLab/downloads/quest/QuEST_2.4.tar.gz</span><br><span class="line">tar xzvf QuEST_2.4.tar.gz</span><br><span class="line">cd QuEST_2.4</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Download and install fastqc</span></span><br><span class="line"><span class="comment">##可视化展示二代测序数据质量</span></span><br><span class="line"><span class="comment">##http://www.bioinformatics.babraham.ac.uk/projects/fastqc/</span></span><br><span class="line"></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir fastqc &amp;&amp;  cd fastqc</span><br><span class="line">wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip</span><br><span class="line">unzip fastqc_v0.11.5.zip</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Download and install CEAS    </span></span><br><span class="line"><span class="comment">## http://liulab.dfci.harvard.edu/CEAS/download.html</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir CEAS  &amp;&amp;  cd CEAS </span><br><span class="line">wget  http://liulab.dfci.harvard.edu/CEAS/src/CEAS-Package-<span class="number">1.0</span><span class="number">.2</span>.tar.gz</span><br><span class="line">tar zxvf CEAS-Package-<span class="number">1.0</span><span class="number">.2</span>.tar.gz</span><br><span class="line">cd  CEAS-Package-<span class="number">1.0</span><span class="number">.2</span></span><br><span class="line">python setup.py install --user </span><br><span class="line"><span class="comment">## http://liulab.dfci.harvard.edu/CEAS/usermanual.html</span></span><br><span class="line"> ~/.local/bin/ceas --help  </span><br><span class="line">mkdir annotation  &amp;&amp;  cd annotation  </span><br><span class="line">wget http://liulab.dfci.harvard.edu/CEAS/src/hg19.refGene.gz ; gunzip hg19.refGene.gz </span><br><span class="line"><span class="comment"># http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refGene.txt.gz ##  gunzip refGene.txt.gz ; mv refGene.txt  hg19refGene.txt</span></span><br><span class="line"><span class="comment">## Download and install CEAS    </span></span><br><span class="line"><span class="comment">## http://liulab.dfci.harvard.edu/CEAS/download.html</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir crossmap  &amp;&amp;  cd crossmap </span><br><span class="line">pip install CrossMap --user</span><br><span class="line"><span class="comment">## http://crossmap.sourceforge.net/#use-pip-to-install-crossmap</span></span><br><span class="line">mkdir chain_files  &amp;&amp;  cd chain_files  </span><br><span class="line">wget http://hgdownload.soe.ucsc.edu/goldenPath/mm10/liftOver/mm10ToMm9.over.chain.gz</span><br><span class="line">wget http://hgdownload.soe.ucsc.edu/goldenPath/mm9/liftOver/mm9ToMm10.over.chain.gz </span><br><span class="line">wget http://hgdownload.soe.ucsc.edu/goldenPath/hg38/liftOver/hg38ToHg19.over.chain.gz </span><br><span class="line">wget http://hgdownload.soe.ucsc.edu/goldenPath/hg38/liftOver/hg38ToHg19.over.chain.gz </span><br><span class="line"><span class="comment"># http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refGene.txt.gz ##  gunzip refGene.txt.gz ; mv refGene.txt  hg19refGene.txt</span></span><br><span class="line"><span class="comment"># Usage: CrossMap.py bed ~/biosoft/crossmap/chain_files/mm9ToMm10.over.chain.gz  test.mm9.bed3</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># http://www.broadinstitute.org/cancer/cga/rnaseqc_run</span></span><br><span class="line"><span class="comment"># http://www.broadinstitute.org/cancer/cga/rnaseqc_download</span></span><br><span class="line">mkdir RNA-SeQC  &amp;&amp;  cd RNA-SeQC </span><br><span class="line"><span class="comment">#### readme: http://www.broadinstitute.org/cancer/cga/sites/default/files/data/tools/rnaseqc/RNA-SeQC_Help_v1.1.2.pdf</span></span><br><span class="line">wget http://www.broadinstitute.org/cancer/cga/tools/rnaseqc/RNA-SeQC_v1.1.8.jar </span><br><span class="line"><span class="comment">#TopHat+Cufflinks+ pipeline</span></span><br><span class="line"><span class="comment">## Download and install TopHat </span></span><br><span class="line"><span class="comment"># https://ccb.jhu.edu/software/tophat/index.shtml</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir TopHat  &amp;&amp;  cd TopHat </span><br><span class="line"><span class="comment">#### readme: https://ccb.jhu.edu/software/tophat/manual.shtml</span></span><br><span class="line">wget https://ccb.jhu.edu/software/tophat/downloads/tophat-<span class="number">2.1</span><span class="number">.1</span>.Linux_x86_64.tar.gz</span><br><span class="line">tar xzvf tophat-<span class="number">2.1</span><span class="number">.1</span>.Linux_x86_64.tar.gz </span><br><span class="line">ln -s tophat-<span class="number">2.1</span><span class="number">.1</span>.Linux_x86_64 current </span><br><span class="line"><span class="comment"># ~/biosoft/TopHat/current/tophat2</span></span><br><span class="line"><span class="comment">## Download and install Cufflinks </span></span><br><span class="line"><span class="comment">#  http://cole-trapnell-lab.github.io/cufflinks/</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir Cufflinks  &amp;&amp;  cd Cufflinks </span><br><span class="line"><span class="comment">#### readme: http://cole-trapnell-lab.github.io/cufflinks/manual/</span></span><br><span class="line"><span class="comment">#### install:http://cole-trapnell-lab.github.io/cufflinks/install/</span></span><br><span class="line">wget http://cole-trapnell-lab.github.io/cufflinks/assets/downloads/cufflinks-<span class="number">2.2</span><span class="number">.1</span>.Linux_x86_64.tar.gz</span><br><span class="line">tar xzvf cufflinks-<span class="number">2.2</span><span class="number">.1</span>.Linux_x86_64.tar.gz </span><br><span class="line">ln -s cufflinks-<span class="number">2.2</span><span class="number">.1</span>.Linux_x86_64 current</span><br><span class="line">~/biosoft/Cufflinks/current/cufflinks</span><br><span class="line"></span><br><span class="line"><span class="comment">#HISAT-Stringtie2-Ballgown pipeline</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Download and install HISAT </span></span><br><span class="line"><span class="comment">##https://ccb.jhu.edu/software/hisat2/index.shtml</span></span><br><span class="line"><span class="comment">##功能： 将测序结果比对到参考基因组上</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir HISAT  &amp;&amp;  cd HISAT </span><br><span class="line"><span class="comment">#### readme: https://ccb.jhu.edu/software/hisat2/manual.shtml</span></span><br><span class="line">wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-<span class="number">2.0</span><span class="number">.4</span>-Linux_x86_64.zip</span><br><span class="line">unzip hisat2-<span class="number">2.0</span><span class="number">.4</span>-Linux_x86_64.zip</span><br><span class="line">ln -s hisat2-<span class="number">2.0</span><span class="number">.4</span>  current </span><br><span class="line"><span class="comment">## ~/biosoft/HISAT/current/hisat2-build</span></span><br><span class="line"><span class="comment">## ~/biosoft/HISAT/current/hisat2  </span></span><br><span class="line"><span class="comment">## Download and install StringTie</span></span><br><span class="line"><span class="comment">## https://ccb.jhu.edu/software/stringtie/  ## https://ccb.jhu.edu/software/stringtie/index.shtml?t=manual</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir StringTie &amp;&amp;  cd StringTie </span><br><span class="line">wget http://ccb.jhu.edu/software/stringtie/dl/stringtie-<span class="number">1.2</span><span class="number">.3</span>.Linux_x86_64.tar.gz </span><br><span class="line">tar zxvf  stringtie-<span class="number">1.2</span><span class="number">.3</span>.Linux_x86_64.tar.gz</span><br><span class="line">ln -s stringtie-<span class="number">1.2</span><span class="number">.3</span>.Linux_x86_64 current</span><br><span class="line"><span class="comment"># ~/biosoft/StringTie/current/stringtie</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir RSEM &amp;&amp;  cd RSEM </span><br><span class="line">wget https://codeload.github.com/deweylab/RSEM/tar.gz/v1.2.31</span><br><span class="line">mv v1.2.31  RSEM.v1.2.31.tar.gz </span><br><span class="line">tar zxvf RSEM.v1.2.31.tar.gz  </span><br><span class="line"><span class="comment">## Download and install HTSeq  </span></span><br><span class="line"><span class="comment">## http://www-huber.embl.de/users/anders/HTSeq/doc/overview.html</span></span><br><span class="line"><span class="comment">## https://pypi.python.org/pypi/HTSeq</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir HTSeq &amp;&amp;  cd HTSeq</span><br><span class="line">wget  https://pypi.python.org/packages/<span class="number">72</span>/0f/566afae6c149762af301a19686cd5fd1876deb2b48d09546dbd5caebbb78/HTSeq-<span class="number">0.6</span><span class="number">.1</span>.tar.gz </span><br><span class="line">tar zxvf HTSeq-<span class="number">0.6</span><span class="number">.1</span>.tar.gz</span><br><span class="line">cd HTSeq-<span class="number">0.6</span><span class="number">.1</span></span><br><span class="line">python setup.py install --user </span><br><span class="line">~/.local/bin/htseq-count  --help</span><br><span class="line"><span class="comment">## ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_mouse/release_M1/</span></span><br><span class="line"><span class="comment">## http://hgdownload-test.cse.ucsc.edu/goldenPath/mm10/liftOver/</span></span><br><span class="line"><span class="comment">## GRCm38/mm10 (Dec, 2011) </span></span><br><span class="line"><span class="comment">## ls *bam |while read id;do ( ~/.local/bin/htseq-count  -f bam  $id   genecode/mm9/gencode.vM1.annotation.gtf.gz  1&gt;$&#123;id%%.*&#125;.gene.counts ) ;done </span></span><br><span class="line"><span class="comment">## ls *bam |while read id;do ( ~/.local/bin/htseq-count  -f bam -i exon_id  $id   genecode/mm9/gencode.vM1.annotation.gtf.gz  1&gt;$&#123;id%%.*&#125;.exon.counts ) ;done</span></span><br><span class="line"><span class="comment">## Download and install kallisto</span></span><br><span class="line"><span class="comment">## https://pachterlab.github.io/kallisto/starting</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir kallisto &amp;&amp;  cd kallisto </span><br><span class="line">wget https://github.com/pachterlab/kallisto/releases/download/v0.43.0/kallisto_linux-v0.43.0.tar.gz</span><br><span class="line"><span class="comment">#tar zxvf  </span></span><br><span class="line"><span class="comment">## Download and install Sailfish</span></span><br><span class="line"><span class="comment">## http://www.cs.cmu.edu/~ckingsf/software/sailfish/  ## </span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir Sailfish &amp;&amp;  cd Sailfish </span><br><span class="line">wget   https://github.com/kingsfordgroup/sailfish/releases/download/v0.9.2/SailfishBeta-<span class="number">0.9</span>.2_DebianSqueeze.tar.gz </span><br><span class="line"><span class="comment">#tar zxvf  </span></span><br><span class="line"><span class="comment">## Download and install salmon</span></span><br><span class="line"><span class="comment">## http://salmon.readthedocs.io/en/latest/salmon.html ## </span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir salmon &amp;&amp;  cd salmon </span><br><span class="line"><span class="comment">## https://github.com/COMBINE-lab/salmon</span></span><br><span class="line"><span class="comment">#tar zxvf  </span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir GDC  &amp;&amp;  cd GDC  </span><br><span class="line"><span class="comment"># https://gdc.cancer.gov/access-data/gdc-data-transfer-tool</span></span><br><span class="line"><span class="comment"># http://gdc-docs.nci.nih.gov/Data_Transfer_Tool/Users_Guide/Getting_Started/</span></span><br><span class="line">wget https://gdc.nci.nih.gov/files/public/file/gdc-client_v1.2.0_Ubuntu14.04_x64.zip </span><br><span class="line">unzip gdc-client_v1.2.0_Ubuntu14.04_x64.zip</span><br><span class="line">cd ~/biosoft/myBin/bin</span><br><span class="line"><span class="comment">## http://hgdownload.cse.ucsc.edu/admin/exe/</span></span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bedSort</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/fetchChromSizes</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/wigToBigWig</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/liftOver</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bigWigToBedGraph</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bigBedToBed</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/blat/blat</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/blat/gfClient</span><br><span class="line">wget http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/blat/gfServer</span><br><span class="line"><span class="comment">## Download and install variationtoolkit</span></span><br><span class="line"><span class="comment">## https://code.google.com/archive/p/variationtoolkit/downloads </span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir variationtoolkit &amp;&amp;  cd variationtoolkit  </span><br><span class="line">wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/variationtoolkit/archive.tar.gz</span><br><span class="line">tar zxvf archive.tar.gz </span><br><span class="line">cd variationtoolkit</span><br><span class="line">make</span><br><span class="line"><span class="comment">## Download and install transvar</span></span><br><span class="line"><span class="comment"># http://bioinformatics.mdanderson.org/main/Transvar</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># https://bitbucket.org/wanding/transvar</span></span><br><span class="line">mkdir transvar &amp;&amp;  cd transvar  </span><br><span class="line">wget https://bitbucket.org/wanding/transvar/get/v2.1.19.20160221.zip </span><br><span class="line">unzip v2.1.19.20160221.zip </span><br><span class="line">cd wanding-transvar-5dd8a7366999 </span><br><span class="line">python setup.py install --user </span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># http://kobas.cbi.pku.edu.cn/download.php </span></span><br><span class="line">mkdir kobas &amp;&amp;  cd kobas  </span><br><span class="line"><span class="comment"># wget http://kobas.cbi.pku.edu.cn/download_file.php?type=seq_pep&amp;filename=hsa.pep.fasta.gz </span></span><br><span class="line"><span class="comment"># wget http://kobas.cbi.pku.edu.cn/download_file.php?type=sqlite3&amp;filename=hsa.db.gz </span></span><br><span class="line">wget http://kobas.cbi.pku.edu.cn/kobas-<span class="number">2.1</span><span class="number">.1</span>/kobas-<span class="number">2.1</span><span class="number">.1</span>.tar.gz </span><br><span class="line">tar zxvf kobas-<span class="number">2.1</span><span class="number">.1</span>.tar.gz </span><br><span class="line">cd kobas-<span class="number">2.1</span>.1_<span class="number">20160822</span></span><br><span class="line"><span class="comment"># * Download the KOBAS organism data package (organism.db.gz) from KOBAS Backend databases download website</span></span><br><span class="line"><span class="comment"># * Download the KOBAS specific species data package from KOBAS Backend databases download website (for example, hsa.db.gz)</span></span><br><span class="line"><span class="comment"># * Download the specific sequence file from KOBAS sequence files download website (for example, hsa.pep.fasta.gz)</span></span><br><span class="line"><span class="comment"># * `gunzip organism.db.gz`</span></span><br><span class="line"><span class="comment"># * `gunzip hsa.db.gz`</span></span><br><span class="line"><span class="comment"># * Move all databases into $&#123;kobas_home&#125;/sqlite3/ (for example, organism.db, hsa.db)</span></span><br><span class="line"><span class="comment"># * `gunzip hsa.pep.fasta.gz`</span></span><br><span class="line"><span class="comment"># * Move the fasta sequence file into $&#123;kobas_home&#125;/seq_pep/</span></span><br><span class="line"><span class="comment"># * `makeblastdb -in hsa.pep.fasta -dbtype prot`</span></span><br><span class="line">pip install RPy2 --user </span><br><span class="line">pip install Numpy --user </span><br><span class="line">pip install Pandas --user </span><br><span class="line">pip install BioPython --user </span><br><span class="line">pip install matplotlib --user </span><br><span class="line">pip install PySQLite --user </span><br><span class="line"><span class="keyword">source</span>(<span class="string">"http://bioconductor.org/biocLite.R"</span>)</span><br><span class="line">biocLite(<span class="string">"qvalue"</span>)</span><br><span class="line"><span class="comment">## Download and install bamtools</span></span><br><span class="line"><span class="comment">## https://github.com/pezmaster31/bamtools/wiki/Building-and-installing</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir bamtools &amp;&amp;  cd bamtools  </span><br><span class="line">git clone git://github.com/pezmaster31/bamtools.git </span><br><span class="line">cd bamtools</span><br><span class="line">cmake --version  <span class="comment">## BamTools requires CMake (version &gt;= 2.6.4).</span></span><br><span class="line">mkdir build &amp;&amp;  cd build </span><br><span class="line">cmake ../ </span><br><span class="line">make</span><br><span class="line">~/biosoft/bamtools/bamtools/bin/bamtools</span><br><span class="line"><span class="comment">## Download and install BAMStats</span></span><br><span class="line"><span class="comment">## http://bamstats.sourceforge.net/</span></span><br><span class="line"><span class="comment">## https://sourceforge.net/projects/bamstats/files/</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir BAMStats &amp;&amp;  cd BAMStats  </span><br><span class="line">wget https://nchc.dl.sourceforge.net/project/bamstats/BAMStats-<span class="number">1.25</span>.zip </span><br><span class="line">unzip BAMStats-<span class="number">1.25</span>.zip</span><br><span class="line"><span class="comment">#java -jar  ~/biosoft/BAMStats/BAMStats-1.25/BAMStats-1.25.jar  --help</span></span><br><span class="line"><span class="comment">## Download and install Qualimap </span></span><br><span class="line"><span class="comment">## http://qualimap.bioinfo.cipf.es/</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir Qualimap &amp;&amp;  cd Qualimap  </span><br><span class="line">wget https://bitbucket.org/kokonech/qualimap/downloads/qualimap_v2.2.1.zip </span><br><span class="line"><span class="comment">## readme  http://qualimap.bioinfo.cipf.es/doc_html/index.html</span></span><br><span class="line"><span class="comment">## example results :http://kokonech.github.io/qualimap/HG00096.chr20_bamqc/qualimapReport.html </span></span><br><span class="line">unzip qualimap_v2.2.1.zip </span><br><span class="line">~/biosoft/bamtools/bamtools/bin/bamtools</span><br><span class="line">~/biosoft/Qualimap/qualimap_v2.2.1/qualimap --help <span class="comment">## --java-mem-size=4G</span></span><br><span class="line"><span class="comment">## modify ~/.bashrc by adding PATH=$PATH:~/.local/bin/</span></span><br><span class="line"><span class="comment">## Download and install deepTools</span></span><br><span class="line"><span class="comment">## https://github.com/fidelram/deepTools</span></span><br><span class="line"><span class="comment">## http://deeptools.readthedocs.io/en/latest/content/example_usage.html</span></span><br><span class="line">pip install pyBigWig --user </span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir deepTools &amp;&amp;  cd deepTools  </span><br><span class="line">git clone https://github.com/fidelram/deepTools <span class="comment">## 130M,</span></span><br><span class="line">cd deepTools</span><br><span class="line">python setup.py install --user</span><br><span class="line"><span class="comment">## 17 tools in ~/.local/bin/</span></span><br><span class="line">~/.local/bin/deeptools</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir ngsplot &amp;&amp;  cd ngsplot  </span><br><span class="line"><span class="comment">## download by yourself :https://drive.google.com/drive/folders/0B1PVLadG_dCKN1liNFY0MVM1Ulk  </span></span><br><span class="line">tar -zxvf ngsplot-<span class="number">2.61</span>.tar.gz</span><br><span class="line">tar zxvf ngsplot.eg.bam.tar.gz</span><br><span class="line">echo <span class="string">'export PATH=/home/jianmingzeng/biosoft/ngsplot/ngsplot/bin:$PATH'</span> &gt;&gt;~/.bashrc  </span><br><span class="line">echo <span class="string">'export NGSPLOT=/home/jianmingzeng/biosoft/ngsplot/ngsplot'</span> &gt;&gt;~/.bashrc </span><br><span class="line"><span class="keyword">source</span> ~/.bashrc</span><br><span class="line">install.packages(<span class="string">"doMC"</span>, dep=<span class="literal">T</span>)</span><br><span class="line">install.packages(<span class="string">"caTools"</span>, dep=<span class="literal">T</span>)</span><br><span class="line">install.packages(<span class="string">"utils"</span>, dep=<span class="literal">T</span>)</span><br><span class="line"><span class="keyword">source</span>(<span class="string">"http://bioconductor.org/biocLite.R"</span>)</span><br><span class="line">biocLite( <span class="string">"BSgenome"</span> )</span><br><span class="line">biocLite( <span class="string">"Rsamtools"</span> )</span><br><span class="line">biocLite( <span class="string">"ShortRead"</span> )</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir breakdancer &amp;&amp;  cd breakdancer  </span><br><span class="line"><span class="comment"># http://breakdancer.sourceforge.net/</span></span><br><span class="line"><span class="comment"># you need to install 2 perl module by yourself : http://breakdancer.sourceforge.net/moreperl.html</span></span><br><span class="line">wget https://sourceforge.net/projects/breakdancer/files/breakdancer-<span class="number">1.1</span>.2_2013_03_<span class="number">08.</span>zip </span><br><span class="line">unzip breakdancer-<span class="number">1.1</span>.2_2013_03_<span class="number">08.</span>zip </span><br><span class="line">cd breakdancer-<span class="number">1.1</span><span class="number">.2</span>/cpp</span><br><span class="line">make  <span class="comment">##something wrong !</span></span><br><span class="line"><span class="comment">## usage: http://breakdancer.sourceforge.net/pipeline.html</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># http://boevalab.com/FREEC/</span></span><br><span class="line">mkdir Control-FREEC &amp;&amp; cd Control-FREEC</span><br><span class="line"><span class="comment"># https://github.com/BoevaLab/FREEC/releases</span></span><br><span class="line">wget https://github.com/BoevaLab/FREEC/archive/v10.3.zip </span><br><span class="line">unzip v10.3.zip </span><br><span class="line"><span class="comment"># https://www.ncbi.nlm.nih.gov/pubmed/22155870</span></span><br><span class="line"><span class="comment"># http://boevalab.com/FREEC/tutorial.html</span></span><br><span class="line"><span class="comment"># http://samtools.sourceforge.net/pileup.shtml</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># https://github.com/dellytools/delly</span></span><br><span class="line">mkdir delly &amp;&amp; cd delly </span><br><span class="line"><span class="comment"># git clone --recursive https://github.com/dellytools/delly.git</span></span><br><span class="line"><span class="comment"># cd delly </span></span><br><span class="line"><span class="comment"># make all</span></span><br><span class="line"><span class="comment"># make PARALLEL=1 -B src/delly</span></span><br><span class="line">wget https://github.com/dellytools/delly/releases/download/v0.7.6/delly_v0.7.6_linux_x86_64bit </span><br><span class="line">chmod <span class="number">777</span> delly_v0.7.6_linux_x86_64bit </span><br><span class="line">~/biosoft/delly/delly_v0.7.6_linux_x86_64bit  --help </span><br><span class="line"><span class="comment">## delly call -t DEL -g hg19.fa -o s1.bcf -x hg19.excl sample1.bam</span></span><br><span class="line"><span class="comment">## ./delly/src/bcftools/bcftools view delly.bcf &gt; delly.vcf</span></span><br><span class="line"><span class="comment">## The SV type can be DEL, DUP, INV, TRA, or INS for deletions, tandem duplications, inversions, translocations and small insertions, respectively.</span></span><br><span class="line"><span class="comment">## In addition, you can filter input reads more stringently using -q 20 and -s 15.</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># https://www.cog-genomics.org/plink2/data#merge_list</span></span><br><span class="line">mkdir PLINK &amp;&amp; cd PLINK </span><br><span class="line">wget https://www.cog-genomics.org/static/bin/plink170113/plink_linux_x86_64.zip </span><br><span class="line">unzip plink_linux_x86_64.zip</span><br><span class="line">~/biosoft/PLINK/plink</span><br><span class="line"><span class="comment">## Download and install Scalpel</span></span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir Scalpel &amp;&amp;  cd Scalpel</span><br><span class="line">wget https://downloads.sourceforge.net/project/scalpel/scalpel-<span class="number">0.5</span><span class="number">.3</span>.tar.gz  </span><br><span class="line">tar zxvf scalpel-<span class="number">0.5</span><span class="number">.3</span>.tar.gz</span><br><span class="line">cd scalpel-<span class="number">0.5</span><span class="number">.3</span></span><br><span class="line">make</span><br><span class="line">~/biosoft/Scalpel/scalpel-<span class="number">0.5</span><span class="number">.3</span>/scalpel-discovery  --help</span><br><span class="line">~/biosoft/Scalpel/scalpel-<span class="number">0.5</span><span class="number">.3</span>/scalpel-export  --help</span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># https://www.cog-genomics.org/plink2/data#merge_list</span></span><br><span class="line">mkdir firehose &amp;&amp; cd firehose </span><br><span class="line">wget http://gdac.broadinstitute.org/runs/code/firehose_get_latest.zip</span><br><span class="line">unzip firehose_get_latest.zip </span><br><span class="line">~/biosoft/firehose/firehose_get</span><br><span class="line">~/biosoft/firehose/firehose_get -tasks clinical analyses latest brca </span><br><span class="line">cd ~/biosoft</span><br><span class="line"><span class="comment"># https://www.cog-genomics.org/plink2/data#merge_list</span></span><br><span class="line">mkdir fastpop &amp;&amp; cd fastpop </span><br><span class="line">wget https://sourceforge.net/projects/fastpop/files/FastPop.tar.gz </span><br><span class="line">wget https://jaist.dl.sourceforge.net/project/fastpop/FastPop_Instruction.pdf</span><br><span class="line">tar zxvf FastPop.tar.gz  </span><br><span class="line">pip install cnvkit --user</span><br></pre></td></tr></table></figure><h1 id="转录组-de-novo分析流程的软件全代码"><a href="#转录组-de-novo分析流程的软件全代码" class="headerlink" title="转录组 de novo分析流程的软件全代码"></a>转录组 de novo分析流程的软件全代码</h1><p>Trinotate/Trinity/TransDecoder/sqlite/NCBI BLAST+/HMMER/PFAM signalP v4 /tmhmm v2 /RNAMMER 有些软件需要教育邮箱注册才行哦~~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">## Trinotate/Trinity/TransDecoder/sqlite/NCBI BLAST+/HMMER/PFAM </span><br><span class="line">## signalP v4 /tmhmm v2 /RNAMMER</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir hmmer &amp;&amp;  cd hmmer</span><br><span class="line">wget http://eddylab.org/software/hmmer/2.3/hmmer-2.3.tar.gz </span><br><span class="line">tar zxvf hmmer-2.3.tar.gz</span><br><span class="line">cd hmmer-2.3</span><br><span class="line">./configure --prefix=/home/jmzeng/my-bin</span><br><span class="line">#./configure --prefix=/home/jianmingzeng/biosoft/myBin</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">#for file in hmmalign hmmbuild hmmcalibrate hmmconvert hmmemit hmmfetch hmmindex hmmpfam hmmsearch ; do\</span><br><span class="line">#      cp src/$file /home/jmzeng/my-bin/bin/;\</span><br><span class="line">#   done</span><br><span class="line">#for file in hmmer hmmalign hmmbuild hmmcalibrate hmmconvert hmmemit hmmfetch hmmindex hmmpfam hmmsearch; do\</span><br><span class="line">#      cp documentation/man/$file.man /home/jmzeng/my-bin/man/man1/$file.1;\</span><br><span class="line">#   done</span><br><span class="line">cp /home/jmzeng/my-bin/bin/hmmsearch /home/jmzeng/my-bin/bin/hmmsearch2</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir CBS &amp;&amp;  cd CBS</span><br><span class="line">#   signalP v4 (free academic download) http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?signalp</span><br><span class="line">#   tmhmm v2 (free academic download) http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?tmhmm</span><br><span class="line">#   RNAMMER (free academic download) http://www.cbs.dtu.dk/cgi-bin/sw_request?rnammer</span><br><span class="line">mkdir signalp-4.1</span><br><span class="line">mkdir rnammer-1.2</span><br><span class="line">## be sure to untar it in a new directory</span><br><span class="line">## it&apos;s a perl script, we need to modify it according to readme http://trinotate.github.io/#SoftwareRequired</span><br><span class="line">## vi ~/biosoft/CBS/signalp-4.1/signalp</span><br><span class="line">tar zxvf signalp-4.1e.Linux.tar.gz </span><br><span class="line">tar zxvf rnammer-1.2.src.tar.Z </span><br><span class="line">tar zxvf tmhmm-2.0c.Linux.tar.gz </span><br><span class="line">## it&apos;s a perl script, we need to modify it according to readme http://trinotate.github.io/#SoftwareRequired</span><br><span class="line">## vi ~/biosoft/CBS/tmhmm-2.0c/bin/tmhmm </span><br><span class="line">## vi ~/biosoft/CBS/tmhmm-2.0c/bin/tmhmmformat.pl</span><br><span class="line">which perl  ## /usr/bin/perl</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir blastPlus &amp;&amp;  cd blastPlus</span><br><span class="line">#   ftp://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST</span><br><span class="line">wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/ncbi-blast-2.5.0+-x64-linux.tar.gz</span><br><span class="line">blastBinFolder=~/biosoft/blastPlus/ncbi-blast-2.5.0+/bin</span><br><span class="line">$blastBinFolder/makeblastdb -help</span><br><span class="line">#   http://www.cbs.dtu.dk/services/doc/signalp-4.1.readme</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir TransDecoder &amp;&amp;  cd TransDecoder</span><br><span class="line">#   https://transdecoder.github.io/</span><br><span class="line"># https://github.com/TransDecoder/TransDecoder/releases</span><br><span class="line">wget https://github.com/TransDecoder/TransDecoder/archive/v3.0.0.tar.gz  -O TransDecoder.v3.0.0.tar.gz </span><br><span class="line">tar zxvf TransDecoder.v3.0.0.tar.gz </span><br><span class="line">cd TransDecoder-3.0.0 </span><br><span class="line">make</span><br><span class="line">~/biosoft/TransDecoder/TransDecoder-3.0.0/TransDecoder.LongOrfs -h</span><br><span class="line">~/biosoft/TransDecoder/TransDecoder-3.0.0/TransDecoder.Predict -h</span><br><span class="line">## sqlite3  --help</span><br><span class="line">cd ~/biosoft</span><br><span class="line">mkdir Trinotate &amp;&amp;  cd Trinotate</span><br><span class="line">#   http://trinotate.github.io/</span><br><span class="line">#   https://github.com/Trinotate/Trinotate/releases</span><br><span class="line">wget https://github.com/Trinotate/Trinotate/archive/v3.0.1.tar.gz  -O Trinotate.v3.0.1.tar.gz </span><br><span class="line">tar zxvf Trinotate.v3.0.1.tar.gz</span><br><span class="line">~/biosoft/Trinotate/Trinotate-3.0.1/Trinotate -h</span><br><span class="line">wget https://data.broadinstitute.org/Trinity/Trinotate_v3_RESOURCES/Pfam-A.hmm.gz</span><br><span class="line">wget https://data.broadinstitute.org/Trinity/Trinotate_v3_RESOURCES/uniprot_sprot.pep.gz</span><br><span class="line">wget https://data.broadinstitute.org/Trinity/Trinotate_v3_RESOURCES/Trinotate_v3.sqlite.gz  -O Trinotate.sqlite.gz</span><br><span class="line">gunzip Trinotate.sqlite.gz</span><br><span class="line">gunzip uniprot_sprot.pep.gz</span><br><span class="line">makeblastdb -in uniprot_sprot.pep -dbtype prot</span><br><span class="line">gunzip Pfam-A.hmm.gz</span><br><span class="line">hmmpress Pfam-A.hmm</span><br></pre></td></tr></table></figure><h1 id="基因组，gtf，bed，注释"><a href="#基因组，gtf，bed，注释" class="headerlink" title="基因组，gtf，bed，注释"></a>基因组，gtf，bed，注释</h1><p>前面既然把我多年累积的软件安装代码共享了，就顺便把我最近做直播我的基因组的一些数据下载代码共享吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line">cd ~/reference</span><br><span class="line">mkdir -p genome/hg19  &amp;&amp; cd genome/hg19 </span><br><span class="line">nohup wget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz &amp;</span><br><span class="line">tar zvfx chromFa.tar.gz</span><br><span class="line">cat *.fa &gt; hg19.fa</span><br><span class="line">rm chr*.fa</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cd ~/reference</span><br><span class="line">mkdir -p genome/hg38  &amp;&amp; cd genome/hg38 </span><br><span class="line">nohup wget http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz  &amp;</span><br><span class="line"> </span><br><span class="line">cd ~/reference</span><br><span class="line">mkdir -p  genome/mm10  &amp;&amp; cd genome/mm10 </span><br><span class="line">nohup wget http://hgdownload.cse.ucsc.edu/goldenPath/mm10/bigZips/chromFa.tar.gz  &amp;</span><br><span class="line">tar zvfx chromFa.tar.gz</span><br><span class="line">cat *.fa &gt; mm10.fa</span><br><span class="line">rm chr*.fa</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cd ~/biosoft/RNA-SeQC</span><br><span class="line">wget http://www.broadinstitute.org/cancer/cga/sites/default/files/data/tools/rnaseqc/ThousandReads.bam</span><br><span class="line">wget http://www.broadinstitute.org/cancer/cga/sites/default/files/data/tools/rnaseqc/gencode.v7.annotation_goodContig.gtf.gz</span><br><span class="line">wget http://www.broadinstitute.org/cancer/cga/sites/default/files/data/tools/rnaseqc/Homo_sapiens_assembly19.fasta.gz</span><br><span class="line">wget http://www.broadinstitute.org/cancer/cga/sites/default/files/data/tools/rnaseqc/Homo_sapiens_assembly19.other.tar.gz</span><br><span class="line">wget http://www.broadinstitute.org/cancer/cga/sites/default/files/data/tools/rnaseqc/gencode.v7.gc.txt</span><br><span class="line">wget http://www.broadinstitute.org/cancer/cga/sites/default/files/data/tools/rnaseqc/rRNA.tar.gz</span><br><span class="line"> </span><br><span class="line">cd ~/reference</span><br><span class="line">mkdir -p index/bowtie &amp;&amp; cd index/bowtie </span><br><span class="line">nohup time ~/biosoft/bowtie/bowtie2-2.2.9/bowtie2-build  ~/reference/genome/hg19/hg19.fa  ~/reference/index/bowtie/hg19 1&gt;hg19.bowtie_index.log 2&gt;&amp;1 &amp;</span><br><span class="line">nohup time ~/biosoft/bowtie/bowtie2-2.2.9/bowtie2-build  ~/reference/genome/hg38/hg38.fa  ~/reference/index/bowtie/hg38 1&gt;hg38.bowtie_index.log 2&gt;&amp;1 &amp;</span><br><span class="line">nohup time ~/biosoft/bowtie/bowtie2-2.2.9/bowtie2-build  ~/reference/genome/mm10/mm10.fa  ~/reference/index/bowtie/mm10 1&gt;mm10.bowtie_index.log 2&gt;&amp;1 &amp;</span><br><span class="line">  </span><br><span class="line">cd ~/reference</span><br><span class="line">mkdir -p index/bwa &amp;&amp; cd index/bwa </span><br><span class="line">nohup time ~/biosoft/bwa/bwa-0.7.15/bwa index   -a bwtsw   -p ~/reference/index/bwa/hg19  ~/reference/genome/hg19/hg19.fa 1&gt;hg19.bwa_index.log 2&gt;&amp;1   &amp;</span><br><span class="line">nohup time ~/biosoft/bwa/bwa-0.7.15/bwa index   -a bwtsw   -p ~/reference/index/bwa/hg38  ~/reference/genome/hg38/hg38.fa 1&gt;hg38.bwa_index.log 2&gt;&amp;1   &amp;</span><br><span class="line">nohup time ~/biosoft/bwa/bwa-0.7.15/bwa index   -a bwtsw   -p ~/reference/index/bwa/mm10  ~/reference/genome/mm10/mm10.fa 1&gt;mm10.bwa_index.log 2&gt;&amp;1   &amp;</span><br><span class="line">  </span><br><span class="line">cd ~/reference</span><br><span class="line">mkdir -p index/hisat &amp;&amp; cd index/hisat </span><br><span class="line">nohup wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/hg19.tar.gz  &amp;</span><br><span class="line">nohup wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/hg38.tar.gz  &amp;</span><br><span class="line">nohup wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grcm38.tar.gz &amp;</span><br><span class="line">nohup wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/mm10.tar.gz  &amp;</span><br><span class="line">tar zxvf hg19.tar.gz</span><br><span class="line">tar zxvf grcm38.tar.gz</span><br><span class="line">tar zxvf hg38.tar.gz</span><br><span class="line">tar zxvf mm10.tar.gz </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">mkdir -p ~/annotation/variation/human/ExAC</span><br><span class="line">cd ~/annotation/variation/human/ExAC</span><br><span class="line">## http://exac.broadinstitute.org/</span><br><span class="line">## ftp://ftp.broadinstitute.org/pub/ExAC_release/current</span><br><span class="line">wget ftp://ftp.broadinstitute.org/pub/ExAC_release/current/ExAC.r0.3.1.sites.vep.vcf.gz.tbi </span><br><span class="line">nohup wget ftp://ftp.broadinstitute.org/pub/ExAC_release/current/ExAC.r0.3.1.sites.vep.vcf.gz &amp;</span><br><span class="line">wget ftp://ftp.broadinstitute.org/pub/ExAC_release/current/cnv/exac-final-cnv.gene.scores071316 </span><br><span class="line">wget ftp://ftp.broadinstitute.org/pub/ExAC_release/current/cnv/exac-final.autosome-1pct-sq60-qc-prot-coding.cnv.bed</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/dbSNP</span><br><span class="line">cd ~/annotation/variation/human/dbSNP</span><br><span class="line">## https://www.ncbi.nlm.nih.gov/projects/SNP/</span><br><span class="line">## ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b147_GRCh38p2/</span><br><span class="line">## ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b147_GRCh37p13/</span><br><span class="line">nohup wget ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b147_GRCh37p13/VCF/All_20160601.vcf.gz &amp;</span><br><span class="line">wget ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b147_GRCh37p13/VCF/All_20160601.vcf.gz.tbi </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/1000genomes</span><br><span class="line">cd ~/annotation/variation/human/1000genomes </span><br><span class="line">## ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ </span><br><span class="line">nohup wget  -c -r -nd -np -k -L -p  ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502 &amp;</span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/cosmic</span><br><span class="line">cd ~/annotation/variation/human/cosmic</span><br><span class="line">## we need to register before we can download this file. </span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/ESP6500</span><br><span class="line">cd ~/annotation/variation/human/ESP6500</span><br><span class="line"># http://evs.gs.washington.edu/EVS/</span><br><span class="line">nohup wget http://evs.gs.washington.edu/evs_bulk_data/ESP6500SI-V2-SSA137.GRCh38-liftover.snps_indels.vcf.tar.gz &amp; </span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/UK10K</span><br><span class="line">cd ~/annotation/variation/human/UK10K</span><br><span class="line"># http://www.uk10k.org/</span><br><span class="line">nohup wget ftp://ngs.sanger.ac.uk/production/uk10k/UK10K_COHORT/REL-2012-06-02/UK10K_COHORT.20160215.sites.vcf.gz &amp; </span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/gonl</span><br><span class="line">cd ~/annotation/variation/human/gonl</span><br><span class="line">## http://www.nlgenome.nl/search/</span><br><span class="line">## https://molgenis26.target.rug.nl/downloads/gonl_public/variants/release5/</span><br><span class="line">nohup wget  -c -r -nd -np -k -L -p  https://molgenis26.target.rug.nl/downloads/gonl_public/variants/release5  &amp;</span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/omin</span><br><span class="line">cd ~/annotation/variation/human/omin</span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/GWAS</span><br><span class="line">cd ~/annotation/variation/human/GWAS</span><br><span class="line"> </span><br><span class="line">mkdir -p ~/annotation/variation/human/hapmap</span><br><span class="line">cd ~/annotation/variation/human/hapmap</span><br><span class="line"># ftp://ftp.ncbi.nlm.nih.gov/hapmap/</span><br><span class="line">wget ftp://ftp.ncbi.nlm.nih.gov/hapmap/phase_3/relationships_w_pops_051208.txt </span><br><span class="line">nohup wget -c -r -np -k -L -p  -nd -A.gz ftp://ftp.ncbi.nlm.nih.gov/hapmap/phase_3/hapmap3_reformatted &amp;</span><br><span class="line"># ftp://ftp.hgsc.bcm.tmc.edu/pub/data/HapMap3-ENCODE/ENCODE3/ENCODE3v1/</span><br><span class="line">wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/HapMap3-ENCODE/ENCODE3/ENCODE3v1/bcm-encode3-QC.txt </span><br><span class="line">wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/HapMap3-ENCODE/ENCODE3/ENCODE3v1/bcm-encode3-submission.txt.gz</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">## 1 million single nucleotide polymorphisms (SNPs) for DNA samples from each of the three ethnic groups in Singapore – Chinese, Malays and Indians.</span><br><span class="line">## The Affymetrix Genome-Wide Human SNP Array 6.0   &amp;&amp; The Illumina Human1M single BeadChip </span><br><span class="line">## http://www.statgen.nus.edu.sg/~SGVP/</span><br><span class="line">## http://www.statgen.nus.edu.sg/~SGVP/singhap/files-website/samples-information.txt</span><br><span class="line"># http://www.statgen.nus.edu.sg/~SGVP/singhap/files-website/genotypes/2009-01-30/QC/</span><br><span class="line"> </span><br><span class="line">## Singapore Sequencing Malay Project (SSMP) </span><br><span class="line">mkdir -p ~/annotation/variation/human/SSMP</span><br><span class="line">cd ~/annotation/variation/human/SSMP</span><br><span class="line">## http://www.statgen.nus.edu.sg/~SSMP/</span><br><span class="line">## http://www.statgen.nus.edu.sg/~SSMP/download/vcf/2012_05 </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">## Singapore Sequencing Indian Project (SSIP) </span><br><span class="line">mkdir -p ~/annotation/variation/human/SSIP</span><br><span class="line">cd ~/annotation/variation/human/SSIP</span><br><span class="line"># http://www.statgen.nus.edu.sg/~SSIP/</span><br><span class="line">## http://www.statgen.nus.edu.sg/~SSIP/download/vcf/dataFreeze_Feb2013</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">wget ftp://ftp.ensembl.org/pub/release-75/gtf/homo_sapiens/Homo_sapiens.GRCh37.75.gtf.gz </span><br><span class="line">wget ftp://ftp.ensembl.org/pub/release-86/gtf/homo_sapiens/Homo_sapiens.GRCh38.86.chr.gtf.gz </span><br><span class="line"> </span><br><span class="line">mkdir -p ~/reference/gtf/gencode</span><br><span class="line">cd  ~/reference/gtf/gencode</span><br><span class="line">## https://www.gencodegenes.org/releases/current.html</span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.2wayconspseudos.gtf.gz</span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.long_noncoding_RNAs.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.polyAs.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/gencode.v25.annotation.gtf.gz </span><br><span class="line">## https://www.gencodegenes.org/releases/25lift37.html </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.annotation.gtf.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.HGNC.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.EntrezGene.gz </span><br><span class="line">wget ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_25/GRCh37_mapping/gencode.v25lift37.metadata.RefSeq.gz </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">mkdir -p ~/reference/gtf/ensembl/homo_sapiens_86</span><br><span class="line">cd  ~/reference/gtf/ensembl/homo_sapiens_86</span><br><span class="line">## http://asia.ensembl.org/info/data/ftp/index.html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cd ~/reference</span><br><span class="line">mkdir -p  genome/human_g1k_v37  &amp;&amp; cd genome/human_g1k_v37</span><br><span class="line"># http://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/ </span><br><span class="line">nohup wget http://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/human_g1k_v37.fasta.gz  &amp;</span><br><span class="line">gunzip human_g1k_v37.fasta.gz</span><br><span class="line">wget http://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/human_g1k_v37.fasta.fai</span><br><span class="line">wget http://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/README.human_g1k_v37.fasta.txt</span><br><span class="line">java -jar ~/biosoft/picardtools/picard-tools-1.119/CreateSequenceDictionary.jar R=human_g1k_v37.fasta O=human_g1k_v37.dict</span><br><span class="line"> </span><br><span class="line">## ftp://ftp.broadinstitute.org/bundle/b37/</span><br><span class="line">mkdir -p ~/annotation/GATK</span><br><span class="line">cd ~/annotation/variation/GATK</span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/1000G_phase1.snps.high_confidence.b37.vcf.gz </span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/dbsnp_138.b37.vcf.gz</span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/human_g1k_v37.fasta.gz </span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/NA12878.HiSeq.WGS.bwa.cleaned.raw.subset.b37.sites.vcf.gz</span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/Mills_and_1000G_gold_standard.indels.b37.vcf.gz </span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/hapmap_3.3.b37.vcf.gz</span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/1000G_phase1.indels.b37.vcf.gz </span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/1000G_phase1.indels.b37.vcf.idx.gz</span><br><span class="line">gunzip 1000G_phase1.indels.b37.vcf.idx.gz</span><br><span class="line">gunzip 1000G_phase1.indels.b37.vcf.gz</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">mkdir -p  ~/institute/ENSEMBL/gtf</span><br><span class="line">cd  ~/institute/ENSEMBL/gtf</span><br><span class="line">wget ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.chr.gtf.gz </span><br><span class="line">wget ftp://ftp.ensembl.org/pub/release-87/gtf/mus_musculus/Mus_musculus.GRCm38.87.chr.gtf.gz</span><br><span class="line">wget ftp://ftp.ensembl.org/pub/release-87/gtf/danio_rerio/Danio_rerio.GRCz10.87.chr.gtf.gz</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">cd ~/institute/TCGA/firehose</span><br><span class="line">## https://gdac.broadinstitute.org/</span><br><span class="line">wget http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/gdac.broadinstitute.org_ACC.Merge_snp__genome_wide_snp_6__broad_mit_edu__Level_3__segmented_scna_minus_germline_cnv_hg19__seg.Level_3.2016012800.0.0.tar.gz  -O ACC.gistic.seg.tar.gz</span><br><span class="line">wget http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/gdac.broadinstitute.org_ACC.Merge_snp__genome_wide_snp_6__broad_mit_edu__Level_3__segmented_scna_hg19__seg.Level_3.2016012800.0.0.tar.gz  -O ACC.raw.seg.tar.gz </span><br><span class="line">wget http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/gdac.broadinstitute.org_ACC.Mutation_Packager_Calls.Level_3.2016012800.0.0.tar.gz -O ACC.maf.tar.gz</span><br><span class="line">wget http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/gdac.broadinstitute.org_ACC.Mutation_Packager_Oncotated_Calls.Level_3.2016012800.0.0.tar.gz -O ACC.maf.anno.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>一致性指数Concordance index(CI, C-index)</title>
      <link href="/hexo/2017/10/15/2017-10-15_Concordanceindex/"/>
      <url>/hexo/2017/10/15/2017-10-15_Concordanceindex/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://mp.weixin.qq.com/s?__biz=MzAxNjM2MDI2MQ==&amp;mid=205481962&amp;idx=1&amp;sn=f09dd122f7282be8d26b803d0039a195#rd" target="_blank" rel="noopener">原文</a></p><p>所谓C-index，英文名全称<strong>concordance index</strong>，最早是由范德堡大学（Vanderbilt University）生物统计教教授Frank E Harrell Jr 1996年提出，主要用于计算生存分析中的COX模型预测值与真实之间的区分度（discrimination）；现阶段用的最多的是肿瘤患者预后模型的预测精度。</p><p>一般评价模型的好坏主要有两个方面，</p><ul><li><p>一是模型的拟合优度（Goodness of Fit),常见的评价指标主要有R方，-2logL,AIC,BIC等等；</p></li><li><p>另外一个是模型的预测精度，主要就是模型的真实值与预测值之间的差的大小，均方误差，相对误差等。</p></li></ul><p>从临床应用的角度来说，我们更注重后者，即统计建模主要是用于预测，而从C-index的概念大家看出它属于模型评价指标的后者，这一指标比前面提到的几个指标看起来更高大上，一般文献中用的也比较多。</p><p>C-index本质上是估计了预测结果与实际观察到的结果相一致的概率，即资料所有病人对子中预测结果与实际结果一致的对子所占的比例。有点类似于ROC曲线下面积。</p><font color="red">**C-index的计算方法是:把所研究的资料中的所有研究对象随机地两两组成对子。以生存分析为例,对于一对病人,如果生存时间较长的一位,其预测生存时间长于生存时间较短的一位,或预测的生存概率高的一位的生存时间长于生存概率低的另一位,则称之为预测结果与实际结果一致。**</font><p>C-index的计算步骤为:</p><ul><li><p>(1)产生所有的病例配对。若有n个观察个体,则所有的对子数应为Cn2(组合数).</p></li><li><p>(2)排除下面两种对子:对子中具有较小观察时间的个体没有达到观察终点及对子中两个个体都没达到观察终点。剩余的为有用对子。</p></li><li><p>(3)计算有用对子中,预测结果和实际相一致的对子数,即具有较坏预测结果个体的实际观察时间较短。</p></li><li><p>(4)计算。C= 一致对子数/有用对子数。</p></li></ul><p><strong>C-index在0.5-1之间。0.5为完全不一致,说明该模型没有预测作用,1为完全一致,说明该模型预测结果与实际完全一致。</strong></p><p>在实际应用中,很难找到完全一致的预测模型,既往研究认为,C-index</p><ul><li><p>在0.50-0.70为较低准确度,</p></li><li><p>在0.71-0.90之间为中等准确度;</p></li><li><p>而高于0.90则为高准确度。</p></li></ul><p>当C-index检验由同一样本建成的模型时易造成偏倚,因此再采用重抽样技术(Bootstrap)可以几乎无偏倚的检验预测模型的准确度。Bootstrap是非参数统计中一种重要的估计统计量方差进而进行区间估计的统计方法,是现代统计应用较为广泛的一种统计方法。</p><p>Bootstrap方法核心思想和基本步骤如下:</p><ul><li><p>(1)采用重抽样技术从原始样本中抽取一定数量的样本,此过程允许重复抽样。</p></li><li><p>(2)根据抽出的样本计算给定的统计量T。</p></li><li><p>(3)重复上述N次(一般大于1000),得到N个统计量T。</p></li><li><p>(4)计算上述N个统计量T的样木方差,得到统计量的方差。</p></li></ul><p>Bootstarap方法只是对单一样本且样本量较小的资料，如果数据集很大可以按照不同的比例将数据集拆分，一部分用于建模一部分用于验证。关于交叉验证（Cross-validation），由于篇幅有限，留作下次探讨。</p><h1 id="R软件实现："><a href="#R软件实现：" class="headerlink" title="R软件实现："></a>R软件实现：</h1><font color="red">Note: 在生存分析中一般直接有c-index输出，直接采用就ok.</font><p>C-index的R软件计算实现有两种实现方法，一种是用到Harrell本人的的R包Hmisc package；另一种是Le Kang, Weijie Chen 2014年12月18日发布的R compareC Package</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">############################</span><br><span class="line">#### Method <span class="number">1.</span>Hmisc <span class="keyword">code</span> ###</span><br><span class="line">############################</span><br><span class="line">data &lt;- read.csv(<span class="string">"survivaldta.csv"</span>)</span><br><span class="line">library(Hmisc) </span><br><span class="line">library(survival) ###加载survival包，主要用于建立模型###</span><br><span class="line">f &lt;- cph(Surv(time,death)~x1+x2+x3，data=survivldata) ###拟合cox模型</span><br><span class="line">fp &lt;- predict(f)###模型的预测值</span><br><span class="line">cindex.orig=<span class="number">1</span>-rcorr.cens(fp,Surv(time,death)) [[<span class="number">1</span>]]###计算出的C-index</span><br><span class="line"></span><br><span class="line">###############################</span><br><span class="line">#### Method <span class="number">2.</span>compareC <span class="keyword">code</span> ###</span><br><span class="line">###############################</span><br><span class="line">data &lt;- read.csv(<span class="string">"survivaldta.csv"</span>) </span><br><span class="line">library(compareC) </span><br><span class="line">library(survival) </span><br><span class="line">cindex &lt;- cindex(Surv(time,death) ~ x1+x2+x3,data=survivldata)###计算出的C-index</span><br><span class="line"></span><br><span class="line">###############################</span><br><span class="line">#### Bootstrap <span class="keyword">code</span> ###</span><br><span class="line">###############################</span><br><span class="line">bootit=<span class="number">200</span></span><br><span class="line">for(i <span class="keyword">in</span> <span class="number">1</span>:bootit)&#123;</span><br><span class="line"><span class="keyword">case</span>=noNA[group==<span class="string">"long"</span>,] </span><br><span class="line">control=noNA[group==<span class="string">"&lt;24"</span>,]</span><br><span class="line">bootindex.<span class="keyword">case</span>=sample(<span class="number">1</span>:nrow(<span class="keyword">case</span>),replace=T)</span><br><span class="line">boot.<span class="keyword">case</span>.data=<span class="keyword">case</span>[bootindex.<span class="keyword">case</span>,]</span><br><span class="line">bootindex.control=sample(<span class="number">1</span>:nrow(control),replace=T)</span><br><span class="line">boot.control.data=control[bootindex.control,]</span><br><span class="line">boot.data=rbind(boot.<span class="keyword">case</span>.data,boot.control.data)</span><br><span class="line">dstr.boot=svydesign(id=~<span class="number">1</span>, prob=~inv_weight, fpc=~ssize, data=boot.data)</span><br><span class="line">boot.fit=svycoxph(Surv(survival,surv_cens) ~x1+x2+x3,data=boot.data,x=TRUE,design=dstr.boot)</span><br><span class="line">cindex.train=<span class="number">1</span>-rcorr.cens(lp.boot,Surv(boot.data$survival, boot.data$surv_cens))[[<span class="number">1</span>]]</span><br><span class="line">cindex.test=<span class="number">1</span>-rcorr.cens(lp_=.test,Surv(noNA$survival,noNA$surv_cens))[[<span class="number">1</span>]]</span><br><span class="line">bias=rep(<span class="number">1</span>,bootit)</span><br><span class="line">bias[i]=abs(cindex.train-cindex.test) &#125;</span><br></pre></td></tr></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>Harrell FE, Califf RM, Pryor DB, Lee KL, and Rosati RA. (1982) Evaluating the yield of medical tests. The Journal of the American Medical Association, 247(18), 2543–2546</p><p>Pencina MJ and D’Agostino RB. (2004) Overall C as a measure of discrimination in survival analysis: model specific population value and confidence interval estimation. Statistics in Medicine, 23(13), 2109–2123</p><p>Kang L, Chen W, Petrick NA, and Gallas BD. (2014) Comparing two correlated C indices with right-censored survival outcome: a one-shot nonparametric approach. Statistics in Medicine, 34(4), 685–703, doi: 10.1002/sim.6370</p><p>Hmisc Reference manual：<a href="http://cran.r-project.org/web/packages/Hmisc/Hmisc.pdf" target="_blank" rel="noopener">http://cran.r-project.org/web/packages/Hmisc/Hmisc.pdf</a></p><p>compareC Reference manual: <a href="http://cran.r-project.org/web/packages/compareC/compareC.pdf" target="_blank" rel="noopener">http://cran.r-project.org/web/packages/compareC/compareC.pdf</a></p><p>Frank.Harrell :<a href="http://biostat.mc.vanderbilt.edu/wiki/Main/FrankHarrell" target="_blank" rel="noopener">http://biostat.mc.vanderbilt.edu/wiki/Main/FrankHarrell</a></p><h1 id="5-Ways-to-Estimate-Concordance-Index-for-Cox-Models-in-R"><a href="#5-Ways-to-Estimate-Concordance-Index-for-Cox-Models-in-R" class="headerlink" title="5 Ways to Estimate Concordance Index for Cox Models in R"></a>5 Ways to Estimate Concordance Index for Cox Models in R</h1><p>Why Results Aren’t Identical?</p><p>Harrell’s concordance index (c-index) can be used to evaluate the discriminatory power and the predictive accuracy of Cox models. An easy way out as a surrogate for ROC analysis. </p><h2 id="Approach-1"><a href="#Approach-1" class="headerlink" title="Approach 1"></a>Approach 1</h2><p>Use function “rcorrcens” in package “Hmisc”</p><p>Limitations:</p><ul><li><p>Can only handle un-censored data</p></li><li><p>Roughly handle categorical predictor with more than 2 categories</p></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="selector-tag">code</span>:</span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(survival)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(Hmisc)</span></span></span><br><span class="line"><span class="function"><span class="title">attach</span><span class="params">(sample.data)</span></span></span><br><span class="line">surv &lt;- Surv(survival, censor)</span><br><span class="line"><span class="function"><span class="title">rcorrcens</span><span class="params">(surv ~ group)</span></span></span><br></pre></td></tr></table></figure><h2 id="Approach-2"><a href="#Approach-2" class="headerlink" title="Approach 2"></a>Approach 2</h2><p>Direct output from coxph<br>Require higher version of R, say R 2.15, didn’t test with older versions</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="selector-tag">code</span>:</span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(survival)</span></span></span><br><span class="line"><span class="function"><span class="title">attach</span><span class="params">(sample.data)</span></span></span><br><span class="line">surv &lt;- Surv(survival, censor)</span><br><span class="line">sum<span class="selector-class">.surv</span> &lt;- summary(coxph(surv ~ group))</span><br><span class="line">c_index &lt;- sum.surv<span class="variable">$concordance</span></span><br></pre></td></tr></table></figure><h2 id="Approach-3"><a href="#Approach-3" class="headerlink" title="Approach 3"></a>Approach 3</h2><p>Use function “survConcordance”<br>Result is the same as in Approach 2<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="selector-tag">code</span>:</span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(survival)</span></span></span><br><span class="line"><span class="function"><span class="title">attach</span><span class="params">(sample.data)</span></span></span><br><span class="line">surv &lt;- Surv(survival, censor)</span><br><span class="line">fit &lt;- coxph( surv ~ group)</span><br><span class="line"><span class="function"><span class="title">survConcordance</span><span class="params">(surv ~ predict(fit)</span></span>)</span><br></pre></td></tr></table></figure></p><h2 id="Approach-4"><a href="#Approach-4" class="headerlink" title="Approach 4"></a>Approach 4</h2><p>Use package “survcomp” in bioconductor</p><p>Different result from Approach 2/3</p><p>The disparity is due to two different estimation approaches that are used to handle tied risks (i.e. cases when  two observations have the same survival with the same x). The method that approaches 4/5 use ignores the tied risks,  the other method (approaches 2/3) takes into consideration of the tied risks. In terms of formulation/symbol (for illustration only):</p><p>Approaches 4/5 used:</p><p>Concordance = #all concordant pairs/#total pairs ignoring ties.</p><p>Approaches 2/3 used:</p><p>Concordance = (#all concordant pairs + #tied pairs/2)/(#total pairs including ties).<br>Those #s can be obtained in the output of Approach 3.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="selector-tag">code</span>:</span><br><span class="line"><span class="function"><span class="title">source</span><span class="params">(<span class="string">"http://bioconductor.org/biocLite.R"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">biocLite</span><span class="params">(<span class="string">"survcomp"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(survcomp)</span></span></span><br><span class="line">surv &lt;- Surv(survival, censor) </span><br><span class="line">fit &lt;- coxph(surv ~ group, data= sample.data)</span><br><span class="line">coxPredict &lt;- predict(fit, data=sample<span class="selector-class">.data</span>, type=<span class="string">"risk"</span>)  </span><br><span class="line">concordance.index(x=coxPredict, surv.time=survival, surv.event=censor, method=<span class="string">"noether"</span>)</span><br></pre></td></tr></table></figure><h2 id="Approach-5"><a href="#Approach-5" class="headerlink" title="Approach 5"></a>Approach 5</h2><p>Use function “cph” in package “rms”<br>Provide both un-adjusted and bias adjusted c-index<br>Un-adjusted c-index is the same as the one from Approach 4<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sample code: </span><br><span class="line">library(rms)</span><br><span class="line">surv &lt;- Surv(survival, censor) </span><br><span class="line">set.seed(1)</span><br><span class="line">fit.cph &lt;- cph(surv ~ group, data= sample.data, <span class="attribute">x</span>=<span class="literal">TRUE</span>, <span class="attribute">y</span>=<span class="literal">TRUE</span>, <span class="attribute">surv</span>=<span class="literal">TRUE</span>)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># Get the Dxy</span></span><br><span class="line">v &lt;- validate.cph(fit.cph, <span class="attribute">dxy</span>=<span class="literal">TRUE</span>, <span class="attribute">B</span>=1000)</span><br><span class="line">Dxy = v[rownames(v)==<span class="string">"Dxy"</span>, colnames(v)==<span class="string">"index.corrected"</span>]</span><br><span class="line">orig_Dxy = v[rownames(v)==<span class="string">"Dxy"</span>, colnames(v)==<span class="string">"index.orig"</span>]</span><br><span class="line"><span class="comment"># The c-statistic according to Dxy=2(c-0.5)</span></span><br><span class="line">bias_corrected_c_index  &lt;- abs(Dxy)/2+0.5</span><br><span class="line">orig_c_index &lt;- abs(Orig.Dxy)/2+0.5</span><br></pre></td></tr></table></figure></p><h2 id="Combining-Approaches-2-3-amp-4-5-and-Calculate-p-value-for-Testing-Two-C-indices-for-Both-Estimation-Methods"><a href="#Combining-Approaches-2-3-amp-4-5-and-Calculate-p-value-for-Testing-Two-C-indices-for-Both-Estimation-Methods" class="headerlink" title="Combining Approaches 2/3 &amp; 4/5 and Calculate p-value for Testing Two C-indices for Both Estimation Methods"></a>Combining Approaches 2/3 &amp; 4/5 and Calculate p-value for Testing Two C-indices for Both Estimation Methods</h2><p>Did not find it elsewhere online. Hope someone could find this helpful.<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Sample code:</span><br><span class="line">surv &lt;- Surv(survival, censor)</span><br><span class="line">c_index &lt;- function(group, <span class="attribute">ties</span>=<span class="literal">TRUE</span>)&#123;</span><br><span class="line">  fit &lt;- coxph(surv ~ group, <span class="attribute">data</span>=sample.data)</span><br><span class="line">  coxPredict &lt;- predict(fit, <span class="attribute">data</span>=sample.data, <span class="attribute">type</span>=<span class="string">"risk"</span>)  </span><br><span class="line">  </span><br><span class="line">  # Approaches 4/5</span><br><span class="line">  <span class="keyword">if</span> (<span class="attribute">ties</span>==F) &#123;</span><br><span class="line">  concordance.index(<span class="attribute">x</span>=coxPredict, surv.<span class="attribute">time</span>=survival, surv.<span class="attribute">event</span>=censor, <span class="attribute">method</span>=<span class="string">"noether"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  # Approaches 2/3</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (<span class="attribute">ties</span>==T) &#123;</span><br><span class="line">  survConcordance(surv ~ coxPredict, <span class="attribute">data</span>=sample.data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">c_index_ties1 &lt;- c_index(<span class="attribute">group</span>=group1, <span class="attribute">ties</span>=<span class="literal">TRUE</span>)</span><br><span class="line">c_index_ties2 &lt;- c_index(<span class="attribute">group</span>=group2, <span class="attribute">ties</span>=<span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line">c_index_no_ties1 &lt;- c_index_ties(<span class="attribute">group</span>=group1, <span class="attribute">ties</span>=F)</span><br><span class="line">c_index_no_ties2 &lt;- c_index_ties(<span class="attribute">group</span>=group2, <span class="attribute">ties</span>=F)</span><br><span class="line"></span><br><span class="line"><span class="comment"># p-value of testing two c-indices ignoring ties</span></span><br><span class="line">round(cindex.comp(c_index_no_ties1, c_index_no_ties2)<span class="variable">$p</span>.value,3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function for p-value of testing two c-indices accounting for ties</span></span><br><span class="line"><span class="comment"># t-test for dependent variables is used for significance </span></span><br><span class="line"><span class="comment"># Input variables are objects obtained from the first function</span></span><br><span class="line"></span><br><span class="line">cindex.p.ties &lt;- function(c_index_ties1, c_index_ties2, c_index_no_ties1, c_index_no_ties2) &#123;</span><br><span class="line">    eps &lt;- 1E-15</span><br><span class="line">    n &lt;- c_index_no_ties1<span class="variable">$n</span></span><br><span class="line">    r &lt;- cor(c_index_no_ties1<span class="variable">$data</span><span class="variable">$x</span>, c_index_no_ties2<span class="variable">$data</span><span class="variable">$x</span>, <span class="attribute">use</span>=<span class="string">"complete.obs"</span>, <span class="attribute">method</span>=<span class="string">"spearman"</span>)</span><br><span class="line">    <span class="keyword">if</span> ((1 - abs(r)) &gt; eps) &#123;</span><br><span class="line">      t.stat &lt;- (c_index_ties1<span class="variable">$concordance</span> - c_index_ties2<span class="variable">$concordance</span>) / sqrt(c_index_ties1<span class="variable">$std</span>.err^2 + c_index_ties2<span class="variable">$std</span>.err^2 - 2 * r * c_index_ties1<span class="variable">$std</span>.err * c_index_ties2<span class="variable">$std</span>.err)</span><br><span class="line">      diff.ci.p &lt;- pt(<span class="attribute">q</span>=t.stat, <span class="attribute">df</span>=n - 1, lower.<span class="attribute">tail</span>=<span class="literal">FALSE</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; diff.ci.p &lt;- 1 &#125;</span><br><span class="line">    return(list(<span class="string">"p.value"</span>=diff.ci.p))</span><br><span class="line">  &#125;</span><br><span class="line">cindex.p.ties(<span class="attribute">c_index_ties1</span>=c_index_ties1, <span class="attribute">c_index_ties2</span>=c_index_ties2, <span class="attribute">c_index_no_ties1</span>=c_index_no_ties1, <span class="attribute">c_index_no_ties2</span>=c_index_no_ties2)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R统计分析-假设检验 </title>
      <link href="/hexo/2017/10/13/2017-10-13-statistics/"/>
      <url>/hexo/2017/10/13/2017-10-13-statistics/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><p>图片来源于 <strong>R语言与数据分析实战</strong>  [韩] 徐珉久 著  人民邮电出版社 2017</p><h1 id="概率分布"><a href="#概率分布" class="headerlink" title="概率分布"></a>概率分布</h1><p><img src="https://taoshengxu.github.io/DocumentGit/img/R_probility.jpg" alt=""></p><h1 id="样本抽样"><a href="#样本抽样" class="headerlink" title="样本抽样"></a>样本抽样</h1><h4 id="1-简单随机抽样"><a href="#1-简单随机抽样" class="headerlink" title="1. 简单随机抽样"></a>1. 简单随机抽样</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sample(x,size,<span class="built_in">replace</span>=<span class="literal">FALSE</span>,</span><br><span class="line">       prob <span class="comment">#数据被抽取的权重值)</span></span><br></pre></td></tr></table></figure><h4 id="2-按权重的样本抽样"><a href="#2-按权重的样本抽样" class="headerlink" title="2. 按权重的样本抽样"></a>2. 按权重的样本抽样</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sample(1:10,5,<span class="attribute">replace</span>=<span class="literal">TRUE</span>,prob=1:10)</span><br></pre></td></tr></table></figure><h4 id="3-分层随机抽样"><a href="#3-分层随机抽样" class="headerlink" title="3. 分层随机抽样"></a>3. 分层随机抽样</h4><p>例如：男性占20%，女性占80%，如果通过抽样来统计组群的平均身高，性别不同会对统计结果有直接影响，因此可以根据男女性别比例采用分层抽样。</p><p>分层抽样的好处是可以根据每层分别抽样不同数量的样本</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strata(data, stratanames=NULL, size, <span class="function"><span class="keyword">method</span>=<span class="title">c</span><span class="params">("srswor","srswr","poisson",</span></span></span><br><span class="line"><span class="function"><span class="params">"systematic")</span>, <span class="title">pik</span>,<span class="title">description</span>=<span class="title">FALSE</span>)</span></span><br></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library(<span class="string">"sampling"</span>)</span><br><span class="line">x= strata(<span class="name">data=iris</span>,c(<span class="string">"Species"</span>),size=c(<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>),method=<span class="string">"srswor"</span>)</span><br><span class="line">getdata(<span class="name">iris</span>,x)</span><br></pre></td></tr></table></figure><h4 id="4-系统抽样"><a href="#4-系统抽样" class="headerlink" title="4. 系统抽样"></a>4. 系统抽样</h4><p>例如：要对从全天经过某一路口的车辆号牌进行抽样调查，如果采用简单随机抽样，早、晚高峰的经过的车辆会被过多抽取。</p><p><strong>系统抽样：</strong>将样本总体从1~N编号，然后随机确定抽样起点，以固定间隔k=N/n进行等间隔抽样。因此如果整体数据呈现有序排列形式，系统抽样会获得更好的结果，但是周期数据将会导致偏向性。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">library</span><span class="params">(<span class="string">"doBy"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">sampleBy</span><span class="params">(~<span class="number">1</span>,frac=.<span class="number">3</span>,data=x,systematic=TRUE)</span></span></span><br></pre></td></tr></table></figure><h1 id="列联表"><a href="#列联表" class="headerlink" title="列联表"></a>列联表</h1><p><strong>列联表：</strong>以表格形式记录分类变量的频数。卡方独立性检验考察变量之间是否存在依存关系。</p><div class="table-container"><table><thead><tr><th>—</th><th>预测-垃圾邮件</th><th>预测-非垃圾邮件</th></tr></thead><tbody><tr><td>实际-垃圾邮件</td><td>a</td><td>b</td></tr><tr><td>实际-非垃圾邮件</td><td>c</td><td>d </td></tr></tbody></table></div><h4 id="创建列联表"><a href="#创建列联表" class="headerlink" title="创建列联表"></a>创建列联表</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">d=data.frame(x=c(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"2"</span>,<span class="string">"1"</span>)),</span><br><span class="line">             y=c(<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>,<span class="string">"B"</span>),</span><br><span class="line">             num=c(<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">7</span>)</span><br><span class="line">xt=xtabs(num ~ x + y,data=d)</span><br><span class="line"></span><br><span class="line"><span class="comment">##边际量</span></span><br><span class="line">margin.table(xt) </span><br><span class="line">margin.table(xt,<span class="number">1</span>)<span class="comment">#行</span></span><br><span class="line">margin.table(xt,<span class="number">2</span>)<span class="comment">#列</span></span><br><span class="line"><span class="comment">##边际百分比</span></span><br><span class="line">prop.table(xt)</span><br><span class="line">prop.table(xt,<span class="number">1</span>)<span class="comment">#行</span></span><br><span class="line">prop.table(xt,<span class="number">2</span>)<span class="comment">#列</span></span><br></pre></td></tr></table></figure><h1 id="独立性检验"><a href="#独立性检验" class="headerlink" title="独立性检验"></a>独立性检验</h1><div class="table-container"><table><thead><tr><th>—</th><th>A-TRUE</th><th>A-FALSE</th></tr></thead><tbody><tr><td>B-TURE</td><td>a</td><td>b</td></tr><tr><td>B-FALSE</td><td>c</td><td>d </td></tr></tbody></table></div><p>假设A 与 B 独立，则P(AB)=P(A)*P(B).</p><p><strong>1. 卡方检验</strong></p><p>对两个变量的独立性进行检验，统计量如下：</p><script type="math/tex; mode=display">\sum\_{i=1}^{r}\sum\_{j=1}^{c}\frac{(O\_{ij}-E\_{ij})^2}{E\_{ij}} \backsim {\chi}^2(r-1)(c-1)</script><p>其中，\(O_{ij}\)为列联表中（i,j）的记录值，\(E_{ij}=N <em> P(i)</em> P(j)\)为两变量相互独立时单元的期望值。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">"MASS"</span>)</span><br><span class="line">data(survey)</span><br><span class="line">xtabs(~Sex + Exer,data=survey)<span class="comment">##性别和运动的列联表</span></span><br><span class="line"><span class="comment">##              Exer</span></span><br><span class="line"><span class="comment">##Sex      Freq None Some</span></span><br><span class="line"><span class="comment">##Female   49   11   58</span></span><br><span class="line"><span class="comment">##Male     65   13   40</span></span><br><span class="line"></span><br><span class="line">chisq.test(xtabs(~Sex + Exer,data=survey))</span><br><span class="line"><span class="comment">##Pearson's Chi-squared test</span></span><br><span class="line"><span class="comment">##data:  xtabs(~Sex + Exer, data = survey)</span></span><br><span class="line"><span class="comment">##X-squared = 5.7184, df = 2, p-value = 0.05731</span></span><br></pre></td></tr></table></figure><p>结果：p值不具有显著性，因此不能推翻原假设H0（性别与运动独立），接受H0(原假设不是小概率事件).</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/pvalue1.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/pvalue2.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/pvalue3.jpg" alt=""></p><p><strong>2. Fisher检验</strong></p><p>针对列联表中样本数量较少，或者样本分布过分倾向某个单元，卡方检验的结果可能不准确。chisq.test()进行检验会显示警告信息。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">xtabs(~W.Hnd + Clap,data=survey)</span><br><span class="line"><span class="comment">##       Clap</span></span><br><span class="line"><span class="comment">##W.Hnd   Left Neither Right</span></span><br><span class="line"><span class="comment">##Left     9       5     4</span></span><br><span class="line"><span class="comment">##Right   29      45   143</span></span><br><span class="line">chisq.test(xtabs(~W.Hnd + Clap,data=survey))</span><br><span class="line"><span class="comment">##Pearson's Chi-squared test</span></span><br><span class="line"><span class="comment">##data:  xtabs(~W.Hnd + Clap, data = survey)</span></span><br><span class="line"><span class="comment">##X-squared = 19.252, df = 2, p-value = 6.598e-05</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##Warning message:</span></span><br><span class="line"><span class="comment">##In chisq.test(xtabs(~W.Hnd + Clap, data = survey)) :</span></span><br><span class="line"><span class="comment">##  Chi-squared近似算法有可能不准</span></span><br><span class="line"></span><br><span class="line">fisher.test(xtabs(~W.Hnd + Clap,data=survey))</span><br><span class="line"><span class="comment">##Fisher's Exact Test for Count Data</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##data:  xtabs(~W.Hnd + Clap, data = survey)</span></span><br><span class="line"><span class="comment">##p-value = 0.0001413</span></span><br><span class="line"><span class="comment">##alternative hypothesis: two.sided</span></span><br></pre></td></tr></table></figure><p>结果：显示P值具有显著性，推翻原假设【用于写字的手与鼓掌时放在上面的手独立】（原假设为小概率事件），接受两者之间有关系。</p><p><strong>3. McNemar检验</strong></p><p>McNemar检验检验事件发生前后被调查者的反应变化，比如推行罚款政策后系安全带人数的变化。在事件之前进行问卷调查Test1,事件发生之后问卷调查Test2.</p><div class="table-container"><table><thead><tr><th>—</th><th>Test 2-TRUE</th><th>Test 2-FALSE</th></tr></thead><tbody><tr><td>Test 1</td><td>a</td><td>b</td></tr><tr><td>Test 1</td><td>c</td><td>d</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th></th><th>Test 2-TRUE</th><th>Test 2-FALSE</th></tr></thead><tbody><tr><td>Test 1</td><td>a</td><td>b</td></tr><tr><td>Test 1</td><td>c</td><td>d</td></tr></tbody></table></div><p>假设事件发生前后参与调查的人数未发生变化，a+b=a+c。只要检验b=c是否成立，即可知道事件发生前后人们心理趋向是否发生变化。若b=c成立，则b服从二项分布。</p><script type="math/tex; mode=display">b \backsim B(b+c,\frac{1}{2})</script><p>二项分布B(n,p)中当n (列联表中b+c)较大时，可以近视视作正态分布。</p><script type="math/tex; mode=display">b \backsim N(\frac{b+c}{2},\frac{b+c}{4})</script><p>将b标准化，使之服从N(0,1),并用连续校正，得到</p><script type="math/tex; mode=display">\frac{(\|b-c\|-1)^2}{b+c} \backsim \chi^2(1)</script><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">performance=matrix(c(<span class="number">794</span>,<span class="number">86</span>,<span class="number">150</span>,<span class="number">570</span>),nrow=<span class="number">2</span>,dimnames=list(</span><br><span class="line">                          <span class="string">"1st survey"</span>=c(<span class="string">"Approve"</span>,<span class="string">"Disapprove"</span>),</span><br><span class="line">                          <span class="string">"2st survey"</span>=c(<span class="string">"Approve"</span>,<span class="string">"Disapprove"</span>)))</span><br><span class="line">                          </span><br><span class="line">mcnemar.test(performance)</span><br><span class="line"></span><br><span class="line"><span class="meta">##McNemar's Chi-squared test with continuity correction</span></span><br><span class="line"><span class="meta">##data:  performance</span></span><br><span class="line"><span class="meta">##McNemar's chi-squared = 16.818, df = 1, p-value = 4.115e-05</span></span><br></pre></td></tr></table></figure><p>结果：P值结果具有显著性，原假设为小概率事件，推翻原假设，事件发生前后，”Approve”和”Disapprove”比率发生变化。</p><p><strong>4.Wilcoxon-Mann-Whitney秩和检验（rank sum test（或test U））</strong></p><p><code>目的：</code><strong>比较不满足总体为Gaussian正态分布的两个独立样本群组的平均值</strong></p><p>例如：你想要看看两个足球队在一年进球数均值是否一样。以下为每个队在一年6场比赛中的进球数：</p><p>Team A: 6, 8, 2, 4, 4, 5<br>Team B: 7, 10, 4, 3, 5, 6</p><p><code>R语言实现</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = c(<span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="selector-tag">b</span> = c(<span class="number">7</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">wilcox.test(<span class="selector-tag">a</span>,<span class="selector-tag">b</span>, correct=FALSE)</span><br><span class="line"> </span><br><span class="line">Wilcoxon rank sum test</span><br><span class="line">data: <span class="selector-tag">a</span> and b</span><br><span class="line">W = <span class="number">14</span>, p-value = <span class="number">0.5174</span></span><br><span class="line">alternative hypothesis: true location shift is not equal to <span class="number">0</span></span><br><span class="line"></span><br><span class="line">##或者</span><br><span class="line"><span class="selector-tag">a</span> = c(<span class="number">6</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="selector-tag">b</span> = c(<span class="number">7</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">wilcox.test(<span class="selector-tag">b</span>,<span class="selector-tag">a</span>, correct=FALSE)</span><br><span class="line"> </span><br><span class="line">Wilcoxon rank sum test</span><br><span class="line">data: <span class="selector-tag">b</span> and a</span><br><span class="line">W = <span class="number">22</span>, p-value = <span class="number">0.5174</span></span><br><span class="line">alternative hypothesis: true location shift is not equal to <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>p-value大于0.05，因此我们可接受null hypothesis H0，即两个群组的均值统计相等。</strong></p><p>值W的计算如下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sum<span class="selector-class">.rank</span><span class="selector-class">.a</span> = sum(rank(c(<span class="selector-tag">a</span>,b))[<span class="number">1</span>:<span class="number">6</span>]) <span class="selector-id">#sum</span> of ranks assigned to the group a</span><br><span class="line"> W = sum<span class="selector-class">.rank</span><span class="selector-class">.a</span> – (length(a)*(length(a)+<span class="number">1</span>)) / <span class="number">2</span></span><br><span class="line"> W</span><br><span class="line">[<span class="number">1</span>] <span class="number">14</span></span><br><span class="line"> </span><br><span class="line">sum<span class="selector-class">.rank</span><span class="selector-class">.b</span> = sum(rank(c(<span class="selector-tag">a</span>,b))[<span class="number">7</span>:<span class="number">12</span>]) <span class="selector-id">#sum</span> of ranks assigned to the group b</span><br><span class="line"> W = sum<span class="selector-class">.rank</span><span class="selector-class">.b</span> – (length(b)*(length(b)+<span class="number">1</span>)) / <span class="number">2</span> </span><br><span class="line"> W</span><br><span class="line">[<span class="number">1</span>] <span class="number">22</span></span><br></pre></td></tr></table></figure><h1 id="拟合优度检验"><a href="#拟合优度检验" class="headerlink" title="拟合优度检验"></a>拟合优度检验</h1><p>统计分析中，常常假设数据服从某种分布，特别是数据量超过一定数值时，一般假设数据服从正态分布。</p><p><strong>1. 卡方检验</strong></p><p><code>为了验证数据是否服从某种特定分布(需要检验者自己给出)，通常先要创建列联表。</code></p><p>例如：分析用左手写字的人数与用右手写字的人数比率是否为30%：70%。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">"MASS"</span>)</span><br><span class="line">data(survey)</span><br><span class="line">table(survey$W.Hnd)</span><br><span class="line">chisq.test(table(survey$W.Hnd),p=c(<span class="number">0.3</span>,<span class="number">0.7</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#Chi-squared test for given probabilities</span></span><br><span class="line"><span class="comment">#data:  table(survey$W.Hnd)</span></span><br><span class="line"><span class="comment">#X-squared = 56.252, df = 1, p-value = 6.376e-14</span></span><br><span class="line"><span class="comment">#结果：p值显著，原假设为小概率事件，拒绝原假设，左手写字的人数与用右手写字的人数比率为30%：70%不成立。</span></span><br></pre></td></tr></table></figure><p><strong>2. Shapiro-Wilk（夏皮罗-威尔克）检验</strong></p><p><code>检验样本是否来源于正态分布的总体（样本是否从正态分布的数据中抽取的）</code></p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> shapiro.test(rnorm(<span class="number">1000</span>))</span><br><span class="line"><span class="comment">## Shapiro-Wilk normality test</span></span><br><span class="line"><span class="comment">##data:  rnorm(1000)</span></span><br><span class="line"><span class="comment">##W = 0.99883, p-value = 0.7749</span></span><br><span class="line"><span class="comment">#结果：p值不显著，原假设不为小概率事件，接受原假设，肯定样本来源于正态分布整体。</span></span><br></pre></td></tr></table></figure><p><strong>3. Kolmogorov-smirnov test（柯尔莫哥-斯米诺夫 K-S test）检验</strong></p><p><code>检验两个经验分布是否不同或一个经验分布与另一个理想分布是否不同</code>。将数据的累积分布函数与要比较的分布的累积分布函数之间的<strong>最大距离</strong>作为统计量。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/KS_test.jpg" alt=""></p><p>例如： 检验两组正态分布的随机数据之间是否拥有相同的分布。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ks.test(rnorm(100),rnorm(100))</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">Two-sample Kolmogorov-Smirnov <span class="built_in">test</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">data:  rnorm(100) and rnorm(100)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">D = 0.1, p-value = 0.6994</span></span><br><span class="line"><span class="meta">#</span><span class="bash">alternative hypothesis: two-sided</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#p值不显著，原假设不为小概率事件，接受原假设，两组样本具有相同分布。</span></span></span><br><span class="line"></span><br><span class="line">ks.test(rnorm(100),runif(100))</span><br><span class="line"><span class="meta">#</span><span class="bash">Two-sample Kolmogorov-Smirnov <span class="built_in">test</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">data:  rnorm(100) and runif(100)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">D = 0.54, p-value = 4.335e-13</span></span><br><span class="line"><span class="meta">#</span><span class="bash">alternative hypothesis: two-sided</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#p值显著，原假设为小概率事件，拒绝原假设，两组样本不具有相同分布。</span></span></span><br></pre></td></tr></table></figure><p><strong>4. Q-Q（Quantile-Quantile）图</strong></p><p><strong>Q-Q图</strong>是一种检验数据是否服从某种特定分布的可视化方法。</p><p>例如：要检验X是否服从正态分布。若\(X \backsim N(\mu,\delta^2)\),则</p><script type="math/tex; mode=display">Z=\frac{X-\mu}{\delta} \backsim N(0,1)</script><script type="math/tex; mode=display">X=\mu + \delta Z</script><p>若将(X,Z)绘制到坐标平面，则为一条直线。X是待检验的已知数据，Z为标准正态分布数据，因此找到与X对应的Z即可，可以通过分位数完成。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=rnorm(<span class="number">1000</span>,mean=<span class="number">10</span>,sd=<span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="title">qqnorm</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="title">qqline</span><span class="params">(x,lty=<span class="number">2</span>)</span></span></span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/Q-Qplot1.jpeg" alt=""></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=runif(<span class="number">1000</span>)</span><br><span class="line"><span class="function"><span class="title">qqnorm</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="title">qqline</span><span class="params">(x,lty=<span class="number">2</span>)</span></span></span><br></pre></td></tr></table></figure><h1 id="假设检验提纲"><a href="#假设检验提纲" class="headerlink" title="假设检验提纲"></a>假设检验提纲</h1><h3 id="1-参数检验"><a href="#1-参数检验" class="headerlink" title="1.参数检验"></a>1.参数检验</h3><h4 id="1-单正态总体参数的检验"><a href="#1-单正态总体参数的检验" class="headerlink" title="1.  单正态总体参数的检验"></a>1.  单正态总体参数的检验</h4><ul><li>均值µ的假设检验</li><li>方差σ 2 的检验: χ 2 检验.<h4 id="2-两正态总体参数的检验"><a href="#2-两正态总体参数的检验" class="headerlink" title="2.两正态总体参数的检验"></a>2.两正态总体参数的检验</h4></li><li>均值的比较: t检验 </li><li><p>方差的比较: F检验</p><h4 id="3-成对数据的t检验"><a href="#3-成对数据的t检验" class="headerlink" title="3.成对数据的t检验"></a>3.成对数据的t检验</h4><h4 id="4-单样本比率的检验"><a href="#4-单样本比率的检验" class="headerlink" title="4.单样本比率的检验"></a>4.单样本比率的检验</h4></li><li><p>比率p的精确检验</p></li><li>比率p的近似检验</li></ul><h4 id="5-两样本比率的检验"><a href="#5-两样本比率的检验" class="headerlink" title="5.两样本比率的检验"></a>5.两样本比率的检验</h4><h3 id="2-非参数检验"><a href="#2-非参数检验" class="headerlink" title="2. 非参数检验"></a>2. 非参数检验</h3><h4 id="1-单总体位置参数的检验"><a href="#1-单总体位置参数的检验" class="headerlink" title="1.单总体位置参数的检验"></a>1.单总体位置参数的检验</h4><ul><li>7.1.1 中位数的符号检验</li><li>7.1.2 Wilcoxon符号秩检验</li></ul><h4 id="2-分布的一致性检验：χ-2"><a href="#2-分布的一致性检验：χ-2" class="headerlink" title="2.分布的一致性检验：χ 2"></a>2.分布的一致性检验：χ 2</h4><h4 id="3-两总体的比较与检验"><a href="#3-两总体的比较与检验" class="headerlink" title="3. 两总体的比较与检验"></a>3. 两总体的比较与检验</h4><p>  7.3.1 χ 2 独立性检验<br>  7.3.2 Fisher精确检验<br>  7.3.3 Wilcoxon秩和检验法和Mann-Whitney U检验<br>  7.3.4 Mood检验</p><h4 id="4-多总体的比较与检验"><a href="#4-多总体的比较与检验" class="headerlink" title="4 多总体的比较与检验"></a>4 多总体的比较与检验</h4><p>  7.4.1 位置参数的Kruskal-Wallis秩和检验<br>  7.4.2 尺度参数的Ansari-Bradley检验<br>  7.4.3 尺度参数的Fligner-Killeen检验</p><h1 id="相关分析"><a href="#相关分析" class="headerlink" title="相关分析"></a>相关分析</h1><p><strong>1.Pearson（皮尔逊）相关系数</strong></p><p><img src="https://taoshengxu.github.io/DocumentGit/Pearsoncorrelation.gif" alt=""></p><p>当两个变量的标准差都不为零时，相关系数才有定义，皮尔逊相关系数适用于：</p><ol><li>两个变量之间是线性关系，都是连续数据。</li><li>两个变量的总体是正态分布，或接近正态的单峰分布。</li><li>两个变量的观测值是成对的，每对观测值之间相互独立。</li></ol><p><strong>2.Spearman Rank(斯皮尔曼等级)相关系数</strong></p><p>斯皮尔曼等级相关系数用来估计两个变量X、Y之间的相关性，其中变量间的相关性可以使用单调函数来描述。如果两个变量取值的两个集合中均不存在相同的两个元素，那么，当其中一个变量可以表示为另一个变量的很好的单调函数时（即两个变量的变化趋势相同），两个变量之间的ρ可以达到+1或-1。</p><p>假设两个随机变量分别为X、Y（也可以看做两个集合），它们的元素个数均为N，两个随机变量取的第i（1&lt;=i&lt;=N）个值分别用Xi、Yi表示。对X、Y进行排序（同时为升序或降序），得到两个元素排行集合x、y，其中元素xi、yi分别为Xi在X中的排行以及Yi在Y中的排行。将集合x、y中的元素对应相减得到一个排行差分集合d，其中di=xi-yi，1&lt;=i&lt;=N。随机变量X、Y之间的斯皮尔曼等级相关系数可以由x、y或者d计算得到，其计算方式如下所示：</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/SpearmanRank1.gif" alt=""></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/SpearmanRank2.gif" alt=""></p><p><strong>3.Kendall Rank（肯德尔等级）相关系数</strong></p><p>xxx</p><p><strong>4.相关系数检验</strong></p><p>*原假设：相关系数为0</p><p>*备选假设： 相关系数不为0.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cor(iris$Sepal.Width,iris$Sepal.Length)</span><br><span class="line">cor(iris[,<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"><span class="keyword">library</span>(corrgram)<span class="comment">#可视化显示相关系数</span></span><br><span class="line">corrgram(iris,upper.panel=panel.conf)</span><br><span class="line"></span><br><span class="line">m=matrix(c(<span class="number">1</span>:<span class="number">10</span>),(<span class="number">1</span>:<span class="number">10</span>)^<span class="number">2</span>),ncol=<span class="number">2</span>))</span><br><span class="line">cor(m,method=<span class="string">"spearman"</span>)</span><br><span class="line"></span><br><span class="line">cor.test(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),c(<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),method=<span class="string">"pearson"</span>)</span><br><span class="line">cor.test(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),c(<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),method=<span class="string">"spearman"</span>)</span><br><span class="line">cor.test(c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),c(<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),method=<span class="string">"kendall"</span>)</span><br></pre></td></tr></table></figure><h1 id="估计与检验"><a href="#估计与检验" class="headerlink" title="估计与检验"></a>估计与检验</h1><p><strong>1.单样本均值</strong></p><script type="math/tex; mode=display">\frac{\overline{X}-\mu}{S/\sqrt{n}} \backsim t(n-1)</script><p>显著性水平为a时，关于整体均值的95%置信水平的置信区间为：</p><script type="math/tex; mode=display">(\overline{X} - t(n-1;\alpha/2) * S/\sqrt{n},\overline{X} + t(n-1;\alpha/2) * S/\sqrt{n}</script><p><img src="https://taoshengxu.github.io/DocumentGit/img/t_test.jpg" alt=""></p><p><strong>零假设</strong>：整体均值为mu.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">x=rnorm(30)</span><br><span class="line">t.test(x)</span><br><span class="line">t.test(x,mu=0)</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#One Sample t-test</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#data:  x</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#t = 0.052695, df = 29, p-value = 0.9583</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#alternative hypothesis: true mean is not equal to 0</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#95 percent confidence interval:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># -0.3502195  0.3687436</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#sample estimates:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#  mean of x </span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#0.009262058 </span></span></span><br><span class="line"></span><br><span class="line">y=rnorm(30,mean=10)</span><br><span class="line">t.test(y)</span><br><span class="line">t.test(y,mu=10)</span><br></pre></td></tr></table></figure><p>结果： 推断整体均值为0.009262058，总体均值95%置信区间为（-0.3502195,  0.3687436）。p值不显著，不能拒绝0假设，总体均值可以被视为0，0也在95%置信区间内。</p><p><strong>2.两独立样本均值</strong></p><p>从两个总体分别抽取样本，根据样本推断两个整体均值是否一致。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/twosample_test1.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/twosample_test2.jpg" alt=""></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sleep2=sleep[,-<span class="number">3</span>]</span><br><span class="line">tapply(sleep2$extra,sleep2$group,mean)</span><br><span class="line">var.test(extra ~ group,data = sleep2)<span class="comment">##首先检验两组样本方差是否一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##F test to compare two variances</span></span><br><span class="line"><span class="comment">##data:  extra by group</span></span><br><span class="line"><span class="comment">##F = 0.79834, num df = 9, denom df = 9, p-value = 0.7427</span></span><br><span class="line"><span class="comment">##alternative hypothesis: true ratio of variances is not equal to 1</span></span><br><span class="line"><span class="comment">##95 percent confidence interval:</span></span><br><span class="line"><span class="comment">##  0.198297 3.214123</span></span><br><span class="line"><span class="comment">##sample estimates:</span></span><br><span class="line"><span class="comment">##  ratio of variances </span></span><br><span class="line"><span class="comment">##0.7983426 </span></span><br><span class="line"><span class="comment">## 原假设：两者方差无差别。因此不能拒绝原假设。</span></span><br><span class="line"></span><br><span class="line">t.test(extra ~ group,data = sleep2,paired=<span class="literal">FALSE</span>,var.equal=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment">##Two Sample t-test</span></span><br><span class="line"><span class="comment">##data:  extra by group</span></span><br><span class="line"><span class="comment">##t = -1.8608, df = 18, p-value = 0.07919</span></span><br><span class="line"><span class="comment">##alternative hypothesis: true difference in means is not equal to 0</span></span><br><span class="line"><span class="comment">##95 percent confidence interval:</span></span><br><span class="line"><span class="comment">##  -3.363874  0.203874</span></span><br><span class="line"><span class="comment">##sample estimates:</span></span><br><span class="line"><span class="comment">##  mean in group 1 mean in group 2 </span></span><br><span class="line"><span class="comment">##0.75            2.33</span></span><br></pre></td></tr></table></figure><p>t.test中paired=FALSE表示两独立样本检验,TRUE表示配对样本检验，var.equal=TRUE表示两样本方差一致。</p><p>结果：P值不显著，不能推翻原假设，因此可以认为两组总体均值无差异。</p><p><strong>3.两配对样本均值</strong></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/twosample_test3.jpg" alt=""></p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(extra ~ <span class="keyword">group</span>,<span class="built_in">data</span> = sleep2,paired=<span class="literal">TRUE</span>,<span class="built_in">var</span>.equal=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><p>结果：P值显著，推翻原假设，服用两种安眠药后睡眠时间增加程度不同。</p><p><strong>4.两样本方差</strong></p><p>评估两独立总体的方差是否一致。两样本方差检验一般不独立使用，常配合其他检验使用，如在两独立样本检验中，如果两检验两总体方差一致，则将t.test()的var.equal设置为TRUE.</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/twosample_test4.jpg" alt=""></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/twosample_test5.jpg" alt=""></p><p><strong>5.单样本比率</strong></p><p><strong>5.两 样本比率</strong></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Logistic回归</title>
      <link href="/hexo/2017/10/12/2017-10-12-Logistic/"/>
      <url>/hexo/2017/10/12/2017-10-12-Logistic/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><p>原文 <a href="http://blog.csdn.net/ariessurfer/article/details/41310525" target="_blank" rel="noopener">http://blog.csdn.net/ariessurfer/article/details/41310525</a></p><p>Logistic回归为概率型非线性回归模型，是研究二分类观察结果 Y 与一些影响因素(x1,x2,..,xn)之间关系的一种多变量分析方法。通常的问题是，研究某些因素条件下某个结果是否发生，比如医学中根据病人的一些症状来判断它是否患有某种病。</p><h1 id="LR分类器-Logistic-Regression-Classifier"><a href="#LR分类器-Logistic-Regression-Classifier" class="headerlink" title="LR分类器: Logistic Regression Classifier"></a>LR分类器: Logistic Regression Classifier</h1><p>在分类情形下，经过学习后的LR分类器是一组权值\(W=(w_0,w_1,…,w_n)\)，当测试样本的数据输入时，这组权值与测试数据按照线性加和得到:</p><script type="math/tex; mode=display">x=w\_0+ w\_1x\_1+...+w\_nx\_n</script><p>之后按照<strong>Logistic(sigmoid函数)</strong>的形式求出</p><script type="math/tex; mode=display">f(x)=\frac{1}{1+e^x}</script><p>由于Logistic函数的定义域为(-inf,inf)，值域为(0,1)，因此最基本的LR分类器适合对两类目标进行分类。所以Logistic回归最关键的问题就是研究如何求得权值\(W=(w_0,w_1,…,w_n)\)。用极大似然估计。</p><h1 id="Logistic回归模型"><a href="#Logistic回归模型" class="headerlink" title="Logistic回归模型"></a>Logistic回归模型</h1><p>Logistic回归模型可以表示为</p><p>考虑具有个独立变量的向量\(X=(x_0,x_1,…,x_n)\)，</p><p>(1)在变量X条件下某事件发生的概率p为：</p><script type="math/tex; mode=display">P(y=1|x)=\pi(x)=\frac{1}{1+e^{-g(x)}}</script><p>其中\(g(x)=w_0+ w_1x_1+…+w_nx_n\)</p><p>(2)在变量X条件下不发生的概率1-p为:</p><script type="math/tex; mode=display">P(y=0|x)=1-P(y=1|x)= 1-\frac{1}{1+e^{-g(x)}} =\frac{1}{1+e^{g(x)}}</script><p>(3)事件的发生比（the odds of experiencing an event）:事件发生与不发生的概率之比odds</p><script type="math/tex; mode=display">\frac{P(y=1|x)}{P(y=0|x)}=\frac{p}{1-p} =e^{g(x)}</script><script type="math/tex; mode=display">ln(\frac{p}{1-p})=g(x)=w\_0+ w\_1x\_1+...+w\_nx\_n</script><h1 id="Logistic回归极大似然估计"><a href="#Logistic回归极大似然估计" class="headerlink" title="Logistic回归极大似然估计"></a>Logistic回归极大似然估计</h1><p>假设有m个观测样本\(X=(x_0,x_1,…,x_m)\)，观测值分别为\(Y=(y_0,y_1,…,y_m)\)，设给定条件下时间发生的概率\(p_i=P(y_i=1|x_i)\)，时间不发生的概率为\(P(y_i=0|x_i)=1-p_i\)。所以得到一个观测值的概率为</p><script type="math/tex; mode=display">P(y_i)=p\_i^{y\_i}(1-p\_i)^{1-y\_i}</script><p>因为各个观测样本之间相互独立，整体事件发生的概率为各边缘分布的乘积，得到似然函数为</p><script type="math/tex; mode=display">L(w)=\prod_{i=1}^{m}=\\{\pi(x\_i)\\}^{y\_i}\\{1-\pi(x\_i)\\}^{1-y\_i}</script><p>然后用极大似然估计求得权值\(W=(w_0,w_1,…,w_n)\)的估计。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R语言-线性回归-lm()</title>
      <link href="/hexo/2017/09/22/2017-09-22-R_function_regression/"/>
      <url>/hexo/2017/09/22/2017-09-22-R_function_regression/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><p>From <a href="http://blog.sina.com.cn/s/blog_6fbfcfb50102va2k.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_6fbfcfb50102va2k.html</a></p><h1 id="1-回归的多面性"><a href="#1-回归的多面性" class="headerlink" title="1. 回归的多面性"></a>1. 回归的多面性</h1><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">回归类型用途</span><br><span class="line">---</span><br><span class="line">简单线性个量化的解释变量来预测一个量化的响应变量（一个因变量、一个自变量）</span><br><span class="line">多项式  一个量化的解释变量预测一个量化的响应变量，模型的关系是n阶多项式（一个预测变量，但同时包含变量的幂）</span><br><span class="line">多元线性用两个或多个量化的解释变量预测一个量化的响应变量（不止一个预测变量）</span><br><span class="line">多变量   用一个或多个解释变量预测多个响应变量</span><br><span class="line">Logistic用一个或多个解释变量预测一个类别型变量</span><br><span class="line">泊松    用一个或多个解释变量预测一个代表频数的响应变量</span><br><span class="line">Cox     用一个或多个解释变量预测一个事件（死亡、失败或旧病复发）发生的时间</span><br><span class="line">时间序列  对误差项相关的时间序列数据建模</span><br><span class="line">非线性  用一个或多个量化的解释变量预测一个量化的响应变量，不过模型是非线性的</span><br><span class="line">非参数  用一个或多个量化的解释变量预测一个量化的响应变量，模型的形式源自数据形式，不事先设定</span><br><span class="line">稳健    用一个或多个量化的解释变量预测一个量化的响应变量，能抵御强影响点的干扰</span><br></pre></td></tr></table></figure><h1 id="2-用lm-拟合回归模型"><a href="#2-用lm-拟合回归模型" class="headerlink" title="2. 用lm()拟合回归模型"></a>2. 用lm()拟合回归模型</h1><p>myfit&lt;-lm(formula,data)</p><p>formula指要拟合的模型形式，data是一个数据框，包含了用于拟合模型的数据。</p><p>formula形式如下：Y~X1+X2+……+Xk （~左边为响应变量，右边为各个预测变量，预测变量之间用+符号分隔）。</p><p><strong>R表达式中常用的符号</strong><br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">符号 用途</span><br><span class="line">---</span><br><span class="line">~  | 分隔符号，左边为响应变量，右边为解释变量，eg：要通过<span class="keyword">x</span>、z和w预测y，代码为y~<span class="keyword">x</span>+z+w</span><br><span class="line">+  | 分隔预测变量</span><br><span class="line">： | 表示预测变量的交互项  eg：要通过<span class="keyword">x</span>、z及<span class="keyword">x</span>与z的交互项预测y，代码为y~<span class="keyword">x</span>+z+<span class="keyword">x</span>:z</span><br><span class="line">*  | 表示所有可能交互项的简洁方式，代码y~<span class="keyword">x</span>*z*w可展开为y~<span class="keyword">x</span>+z+w+<span class="keyword">x</span>:z+<span class="keyword">x</span>:w+z:w+<span class="keyword">x</span>:z:w</span><br><span class="line">^  | 表示交互项达到某个次数，代码y~(<span class="keyword">x</span>+z+w)^<span class="number">2</span>可展开为y~<span class="keyword">x</span>+z+w+<span class="keyword">x</span>:z+<span class="keyword">x</span>:w+z:w</span><br><span class="line">.  | 表示包含除因变量外的所有变量，eg：若一个数据框包含变量<span class="keyword">x</span>、y、z和w，代码y~.可展开为y~<span class="keyword">x</span>+z+w</span><br><span class="line">-  | 减号，表示从等式中移除某个变量，eg：y~(<span class="keyword">x</span>+z+w)^<span class="number">2</span>-<span class="keyword">x</span>:w可展开为y~<span class="keyword">x</span>+z+w+<span class="keyword">x</span>:z+z:w</span><br><span class="line"><span class="number">-1</span> | 删除截距项，eg：表示y~<span class="keyword">x</span><span class="number">-1</span>拟合y在<span class="keyword">x</span>上的回归，并强制直线通过原点</span><br><span class="line">I（） | 从算术的角度来解释括号中的元素。Eg：y~<span class="keyword">x</span>+(z+w)^<span class="number">2</span>将展开为y~<span class="keyword">x</span>+z+w+z:w。相反，代码y~<span class="keyword">x</span>+I((z+w)^<span class="number">2</span>)将展开为y~<span class="keyword">x</span>+h，h是一个由z和w的平方和创建的新变量</span><br><span class="line">function | 可以在表达式中用的数学函数，例如log(y)~<span class="keyword">x</span>+z+w表示通过<span class="keyword">x</span>、z和w来预测log(y)</span><br></pre></td></tr></table></figure></p><p><strong>交互项</strong>是指你的几个变量一块生成了一个新的影响，比如不同性别的不同专业可能会对成绩有不同的影响，性别影响成绩，专业影响成绩，但是性别和专业和在一起又产生新影响。这时候就需要交互项。具体用不用看你的方程,一般不用。</p><p><strong>对拟合线性模型非常有用的其他函数</strong><br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">函数 用途</span><br><span class="line">---</span><br><span class="line">Summary（）展示拟合的详细结果</span><br><span class="line">Coefficients（）列出拟合模型的模型参数（截距项和斜率）</span><br><span class="line">confint（） 提供模型参数的置信区间（默认95%）</span><br><span class="line">fitted（）列出拟合模型的预测值</span><br><span class="line">residuals（）列出拟合模型的残差值</span><br><span class="line">anova（）生成一个拟合模型的方差分析，或者比较两个或更多拟合模型的方差分析表</span><br><span class="line">deviance() 计算残差平和和</span><br><span class="line">vcov（）列出模型参数的协方差矩阵</span><br><span class="line">AIC（）输出赤池信息统计量</span><br><span class="line">plot（）生成评价拟合模型的诊断图</span><br><span class="line">predict（）用拟合模型对新的数据集预测响应变量值</span><br></pre></td></tr></table></figure></p><h1 id="3-R-语言示例lm"><a href="#3-R-语言示例lm" class="headerlink" title="3. R 语言示例lm()"></a>3. R 语言示例lm()</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">fit&lt;-lm(weight~height,data=women)  </span><br><span class="line"><span class="comment"># summary(fit)</span></span><br><span class="line"><span class="comment"># Call:</span></span><br><span class="line"><span class="comment"># lm(formula = weight ~ height, data = women)</span></span><br><span class="line"><span class="comment"># Residuals:</span></span><br><span class="line"><span class="comment">#     Min      1Q  Median      3Q     Max </span></span><br><span class="line"><span class="comment"># -1.7333 -1.1333 -0.3833  0.7417  3.1167 </span></span><br><span class="line"><span class="comment"># Coefficients:</span></span><br><span class="line"><span class="comment">#              Estimate Std. Error t value Pr(&gt;|t|)    </span></span><br><span class="line"><span class="comment"># (Intercept) -87.51667    5.93694  -14.74 1.71e-09 ***</span></span><br><span class="line"><span class="comment"># height        3.45000    0.09114   37.85 1.09e-14 ***</span></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"><span class="comment"># Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</span></span><br><span class="line"><span class="comment"># Residual standard error: 1.525 on 13 degrees of freedom</span></span><br><span class="line"><span class="comment"># Multiple R-squared:  0.991,Adjusted R-squared:  0.9903 </span></span><br><span class="line"><span class="comment"># F-statistic:  1433 on 1 and 13 DF,  p-value: 1.091e-14</span></span><br><span class="line">coef(fit)</span><br><span class="line"><span class="comment">#(Intercept)      height </span></span><br><span class="line"><span class="comment">#  -87.51667     3.45000 </span></span><br><span class="line">fitted(fit)<span class="comment">#拟合模型的预测值  </span></span><br><span class="line">residuals(fit)<span class="comment">#拟合模型的残差值 </span></span><br><span class="line">plot(women$height,women$weight,  </span><br><span class="line">     xlab=<span class="string">"Height （in inches）"</span>,  </span><br><span class="line">     ylab=<span class="string">"Weight（in pounds）"</span>)  </span><br><span class="line">abline(fit)</span><br></pre></td></tr></table></figure><p><strong>1.自变量评估</strong></p><p> 在Pr(&gt;|t|)栏，可以看到回归系数（3.45）或者截距项显著性&lt;0.05，拒绝原假设，表明身高每增加1英寸，体重将预期地增加3.45磅.</p><p>*原假设H0：系数（或截距）为0。</p><p>*备选假设H1：系数（或截距）不为0。</p><p><strong>2.判定系数和F统计量</strong></p><p><strong>残差的标准误(Residual standard error)</strong> 1.53 lbs则可认为模型用身高预测体重的平均误差.</p><p><strong>判定系数R^2</strong></p><script type="math/tex; mode=display">R^2= \frac{SSR}{SST}=\frac{\sum(\hat{Y\_i}-\overline{Y})^2}{\sum(Y_i-\overline{Y})^2}</script><p><strong>R^2的取值范围为[0,1],越接近1表示回归模型对数据的解释能力越强。</strong></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/lm_R2.jpg" alt=""></p><p> <strong>F统计量</strong>使用F分布检验MSR/MSE的比率，原假设：β1=0，备选假设：β1≠0. 检验简化模型\(dist=β0+\varepsilon\)与完整模型\(dist=β0+β1*x +\varepsilon\)之间的残差平方和差异的显著程度。</p><p> <strong>3.方差分析</strong></p><p> 线性回归中，<strong>方差分析用于评估模型或者进行模型间比较</strong>。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> m=lm(dist ~ speed, data=cars)</span><br><span class="line"> summary(m)</span><br><span class="line"><span class="meta">#</span><span class="bash">  Call:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> lm(formula = dist ~ speed, data = cars)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Residuals:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     Min      1Q  Median      3Q     Max </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -29.069  -9.525  -2.272   9.215  43.201 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Coefficients:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">             Estimate Std. Error t value Pr(&gt;|t|)    </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (Intercept) -17.5791     6.7584  -2.601   0.0123 *  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> speed         3.9324     0.4155   9.464 1.49e-12 ***</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Residual standard error: 15.38 on 48 degrees of freedom</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Multiple R-squared:  0.6511,Adjusted R-squared:  0.6438 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> F-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12</span></span><br><span class="line"></span><br><span class="line">anova(m)</span><br><span class="line"><span class="meta">#</span><span class="bash"> Analysis of Variance Table</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Response: dist</span></span><br><span class="line"><span class="meta">#</span><span class="bash">           Df Sum Sq Mean Sq F value   Pr(&gt;F)    </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> speed      1  21186 21185.5  89.567 1.49e-12 ***</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Residuals 48  11354   236.5                     </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</span></span><br><span class="line"></span><br><span class="line">reduced=lm(dist ~ 1, data=cars)  #没有自变量，仅有截距项的简化模型</span><br><span class="line">anova(reduced,m)</span><br><span class="line"><span class="meta">#</span><span class="bash"> Analysis of Variance Table</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Model 1: dist ~ 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Model 2: dist ~ speed</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Res.Df   RSS Df Sum of Sq      F   Pr(&gt;F)    </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1     49 32539                                 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2     48 11354  1     21186 89.567 1.49e-12 ***</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</span></span><br></pre></td></tr></table></figure><p>以上3组比较F统计量中p值都为1.49e-12。表面简化模型与完整模型之间存在显著差异，换言之，speed是有意义的解释变量。</p><p>  <strong>4.模型诊断图形</strong></p>  <figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(<span class="name">m</span>,which=c(<span class="number">1</span>:<span class="number">3</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/lm_figure.jpg" alt=""></p><ul><li><p>第一个图为预测值Y（X轴）与残差（Y轴），在线性回归中，由于假设误差服从均值为0，方差固定的正态分布，所以认为残差分布与预测的Y值无关，残差均值必须为0。斜率为0的直线是理想情形。</p></li><li><p>第二个图为正态QQ图，查看标准化的残差是否服从正态分布。</p></li><li><p>第三个图为预测值Y（X轴）与标准化残差（Y轴），斜率为0的直线是理想情形。若在特定点观察到距离0较远的值，说明该点不能很好的拟合原始值，这些点肯能成为异常点。</p></li><li><p>第四个图为杠杆值（X轴）与标准化残差（Y轴）。杠杆值表示解释变量向极端的偏斜程度。</p><p><strong>分类变量</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">m=lm(Sepal.Length ~ .,data=iris)</span><br><span class="line"> summary(m)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Call:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> lm(formula = Sepal.Length ~ ., data = iris)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Residuals:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">      Min       1Q   Median       3Q      Max </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -0.79424 -0.21874  0.00899  0.20255  0.73103 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Coefficients:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">                   Estimate Std. Error t value Pr(&gt;|t|)    </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (Intercept)        2.17127    0.27979   7.760 1.43e-12 ***</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Sepal.Width        0.49589    0.08607   5.761 4.87e-08 ***</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Petal.Length       0.82924    0.06853  12.101  &lt; 2e-16 ***</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Petal.Width       -0.31516    0.15120  -2.084  0.03889 *  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Speciesversicolor -0.72356    0.24017  -3.013  0.00306 ** </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Speciesvirginica  -1.02350    0.33373  -3.067  0.00258 ** </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ---</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Residual standard error: 0.3068 on 144 degrees of freedom</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Multiple R-squared:  0.8673,Adjusted R-squared:  0.8627 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> F-statistic: 188.3 on 5 and 144 DF,  p-value: &lt; 2.2e-16</span></span><br></pre></td></tr></table></figure></li></ul><p>其中Species为分类变量，有三种类别：setosa,versicolor,virginica.</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/lm_species.jpg" alt=""></p><h1 id="4-多项式回归"><a href="#4-多项式回归" class="headerlink" title="4.多项式回归"></a>4.多项式回归</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">fit2&lt;-lm(weight~height+I(height^<span class="number">2</span>),data=women)  </span><br><span class="line">summary(fit2)</span><br><span class="line">plot(women$height,women$weight,  </span><br><span class="line">     xlab=<span class="string">"Height（in inches）"</span>,  </span><br><span class="line">     ylab=<span class="string">"Weight（in lbs）"</span>)  </span><br><span class="line">lines(women$height,fitted(fit2)) </span><br><span class="line"></span><br><span class="line"><span class="comment">#一般来说，n次多项式生成一个n-1个弯曲的曲线</span></span><br><span class="line"><span class="comment">#car包中的scatterplot（）函数，可以很容易、方便地绘制二元关系图</span></span><br><span class="line"><span class="keyword">library</span>(car)</span><br><span class="line">scatterplot(weight~height,  </span><br><span class="line">            data=women,  </span><br><span class="line">            spread=<span class="literal">FALSE</span>,  </span><br><span class="line">            lty.smooth=<span class="number">2</span>,  </span><br><span class="line">            pch=<span class="number">19</span>,  </span><br><span class="line">            main=<span class="string">"Women Age 30-39"</span>,  </span><br><span class="line">            xlab=<span class="string">"Height (inches)"</span>,  </span><br><span class="line">            ylab=<span class="string">"Weight(lbs.)"</span>)</span><br></pre></td></tr></table></figure><h1 id="6-多元线性回归"><a href="#6-多元线性回归" class="headerlink" title="6.多元线性回归"></a>6.多元线性回归</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">states&lt;-as.data.frame(state.x77[,c(<span class="string">"Murder"</span>,<span class="string">"Population"</span>,<span class="string">"Illiteracy"</span>,<span class="string">"Income"</span>,<span class="string">"Frost"</span>)])</span><br><span class="line">cor(states)  </span><br><span class="line">scatterplotMatrix(states,spread=<span class="literal">FALSE</span>,lty.smooth=<span class="number">2</span>,main=<span class="string">"Scatter Plot Matrix"</span>)</span><br><span class="line"><span class="comment">#scatterplotMatrix（）函数默认在非对角线区域绘制变量间的散点图，并添加平滑（loess）和线性拟合曲线</span></span><br><span class="line"><span class="comment">#多元线性回归</span></span><br><span class="line">fit&lt;-lm(Murder~Population+Illiteracy+Income+Frost,data=states)  </span><br><span class="line">summary(fit)</span><br></pre></td></tr></table></figure><p>对于F统计量，原假设：所有系数β全为0。</p><h1 id="7-有交互项的多元线性回归"><a href="#7-有交互项的多元线性回归" class="headerlink" title="7.有交互项的多元线性回归"></a>7.有交互项的多元线性回归</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">fit&lt;-lm(mpg~hp+wt+hp:wt,data=mtcars)  </span><br><span class="line">summary(fit)  </span><br><span class="line"><span class="comment"># 通过effects包中的effect（）函数，可以用图形展示交互项的结果</span></span><br><span class="line">install.packages(<span class="string">"effects"</span>)  </span><br><span class="line"><span class="keyword">library</span>(effects)  </span><br><span class="line">plot(effect(<span class="string">"hp:wt"</span>,fit,  </span><br><span class="line">            list(wt=c(<span class="number">2.2</span>,<span class="number">3.2</span>,<span class="number">4.2</span>))),multiline=<span class="literal">TRUE</span>)</span><br><span class="line">            </span><br><span class="line"><span class="comment"># 二次拟合诊断图</span></span><br><span class="line">fit2&lt;-lm(weight~height+I(height^<span class="number">2</span>),data=women)  </span><br><span class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">2</span>))  </span><br><span class="line">plot(fit2)</span><br></pre></td></tr></table></figure><p><strong>I()</strong>防止对象解析或者转换，例如I(X^2)表示以X^2作为一个独立变量参与到回归，否者则解析为x+x+x:x交互作用。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/lm_interaction.jpg" alt=""></p><h1 id="异常值"><a href="#异常值" class="headerlink" title="异常值"></a>异常值</h1><p><strong>学生化残差</strong>： 残差与残差标准差的比值。</p><p><strong>外部学生化残差</strong>：计算第i个学生化残差时，先去掉i再计算标准差。一般用外部学生化残差评估异常点。</p><p>R中rstudent()计算外部学生化残差。外部学生化残差服从t分布，可以使用t-test来寻找rstudent()值过大或者过小的点。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">m</span>=lm(circumference~ age+I(age^2),<span class="attribute">data</span>=Orange)</span><br><span class="line">rstudent(m)</span><br><span class="line">car::outlierTest(m)</span><br><span class="line"></span><br><span class="line"><span class="comment"># No Studentized residuals with Bonferonni p &lt; 0.05</span></span><br><span class="line"><span class="comment"># Largest |rstudent|:</span></span><br><span class="line"><span class="comment">#    rstudent unadjusted p-value Bonferonni p</span></span><br><span class="line"><span class="comment"># 27 2.050328            0.04887           NA</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>R语言 逐步回归分析</title>
      <link href="/hexo/2017/09/22/2017-09-22-step_regression/"/>
      <url>/hexo/2017/09/22/2017-09-22-step_regression/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>From <a href="http://www.cnblogs.com/liuzezhuang/p/3724497.html" target="_blank" rel="noopener">http://www.cnblogs.com/liuzezhuang/p/3724497.html</a></p><p>逐步回归分析是以AIC信息统计量为准则，通过选择最小的AIC信息统计量，来达到删除或增加变量的目的。</p><p>R语言中用于逐步回归分析的函数 step()    drop1()     add1()</p><h1 id="1-载入数据"><a href="#1-载入数据" class="headerlink" title="1.载入数据"></a>1.载入数据</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先对数据进行多元线性回归分析</span></span><br><span class="line">tdata&lt;-data.frame(</span><br><span class="line">  x1=c( <span class="number">7</span>, <span class="number">1</span>,<span class="number">11</span>,<span class="number">11</span>, <span class="number">7</span>,<span class="number">11</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>,<span class="number">21</span>, <span class="number">1</span>,<span class="number">11</span>,<span class="number">10</span>),</span><br><span class="line">  x2=c(<span class="number">26</span>,<span class="number">29</span>,<span class="number">56</span>,<span class="number">31</span>,<span class="number">52</span>,<span class="number">55</span>,<span class="number">71</span>,<span class="number">31</span>,<span class="number">54</span>,<span class="number">47</span>,<span class="number">40</span>,<span class="number">66</span>,<span class="number">68</span>),</span><br><span class="line">  x3=c( <span class="number">6</span>,<span class="number">15</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">9</span>,<span class="number">17</span>,<span class="number">22</span>,<span class="number">18</span>, <span class="number">4</span>,<span class="number">23</span>, <span class="number">9</span>, <span class="number">8</span>),</span><br><span class="line">  x4=c(<span class="number">60</span>,<span class="number">52</span>,<span class="number">20</span>,<span class="number">47</span>,<span class="number">33</span>,<span class="number">22</span>, <span class="number">6</span>,<span class="number">44</span>,<span class="number">22</span>,<span class="number">26</span>,<span class="number">34</span>,<span class="number">12</span>,<span class="number">12</span>),</span><br><span class="line">  Y =c(<span class="number">78.5</span>,<span class="number">74.3</span>,<span class="number">104.3</span>,<span class="number">87.6</span>,<span class="number">95.9</span>,<span class="number">109.2</span>,<span class="number">102.7</span>,<span class="number">72.5</span>,</span><br><span class="line">       <span class="number">93.1</span>,<span class="number">115.9</span>,<span class="number">83.8</span>,<span class="number">113.3</span>,<span class="number">109.4</span>)</span><br><span class="line">)</span><br><span class="line">tlm&lt;-lm(Y~x1+x2+x3+x4,data=tdata)</span><br><span class="line">summary(tlm)</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/AIC1.jpg" alt=""></p><p>通过观察，回归方程的系数都没有通过显著性检验</p><h1 id="2-逐步回归分析"><a href="#2-逐步回归分析" class="headerlink" title="2.逐步回归分析"></a>2.逐步回归分析</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tstep&lt;-step(tlm)</span><br><span class="line">summary(tstep)</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/AIC2.jpg" alt=""></p><p>结果分析：</p><ul><li><p>当用x1 x2 x3 x4作为回归方程的系数时，AIC的值为26.94</p></li><li><p>去掉x3 回归方程的AIC值为24.974；去掉x4 回归方程的AIC值为25.011……</p></li><li><p>由于去x3可以使得AIC达到最小值，因此R会自动去掉x3;</p></li></ul><p>*去掉x3之后 AIC的值都增加 逐步回归分析终止,  得到当前最优的回归方程</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/AIC3.jpg" alt=""></p><p>回归系数的显著性水平有所提高 但是x2 x4的显著性水平仍然不理想</p><h1 id="3-逐步回归分析的优化"><a href="#3-逐步回归分析的优化" class="headerlink" title="3.逐步回归分析的优化"></a>3.逐步回归分析的优化</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop1(tstep)</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/AIC4.jpg" alt=""></p><h1 id="4-进一步进行多元回归分析"><a href="#4-进一步进行多元回归分析" class="headerlink" title="4.进一步进行多元回归分析"></a>4.进一步进行多元回归分析</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tlm&lt;-lm(Y~x1+x2,data=tdata)</span><br><span class="line">summary(tlm)</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/AIC5.jpg" alt=""></p><p>所有的检验均为显著</p><p>因此所得回归方程为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y=52.57735+ 1.46831x1+ 0.66225x2.</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>模型选择准则之AIC和BIC</title>
      <link href="/hexo/2017/09/22/2017-09-22-AIC_BIC/"/>
      <url>/hexo/2017/09/22/2017-09-22-AIC_BIC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>转自：<a href="http://blog.csdn.net/jteng/article/details/40823675" target="_blank" rel="noopener">http://blog.csdn.net/jteng/article/details/40823675</a></p><p>很多参数估计问题均采用似然函数作为目标函数，当训练数据足够多时，可以不断提高模型精度，但是以提高模型复杂度为代价的，同时带来一个机器学习中非常普遍的问题——过拟合。所以，模型选择问题在模型复杂度与模型对数据集描述能力（即似然函数）之间寻求最佳平衡。<br>人们提出许多信息准则，通过加入模型复杂度的惩罚项来避免过拟合问题，此处我们介绍一下常用的两个模型选择方法.</p><h1 id="赤池信息准则（Akaike-Information-Criterion，AIC）"><a href="#赤池信息准则（Akaike-Information-Criterion，AIC）" class="headerlink" title="赤池信息准则（Akaike Information Criterion，AIC）"></a>赤池信息准则（Akaike Information Criterion，AIC）</h1><p>AIC是衡量统计模型拟合优良性的一种标准，由日本统计学家赤池弘次在1974年提出，它建立在熵的概念上，提供了权衡估计模型复杂度和拟合数据优良性的标准。<br>通常情况下，AIC定义为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AIC=2k-2ln(L)</span><br></pre></td></tr></table></figure><p>其中k是模型参数个数，L是似然函数。从一组可供选择的模型中选择最佳模型时，通常选择AIC最小的模型。<br>当两个模型之间存在较大差异时，差异主要体现在似然函数项，当似然函数差异不显著时，上式第一项，即模型复杂度则起作用，从而参数个数少的模型是较好的选择。<br>一般而言，当模型复杂度提高（k增大）时，似然函数L也会增大，从而使AIC变小，但是k过大时，似然函数增速减缓，导致AIC增大，模型过于复杂容易造成过拟合现象。<strong>目标是选取AIC最小的模型</strong>，AIC不仅要提高模型拟合度（极大似然），而且引入了惩罚项，使模型参数尽可能少，有助于降低过拟合的可能性。</p><h1 id="贝叶斯信息准则（Bayesian-Information-Criterion，BIC）"><a href="#贝叶斯信息准则（Bayesian-Information-Criterion，BIC）" class="headerlink" title="贝叶斯信息准则（Bayesian Information Criterion，BIC）"></a>贝叶斯信息准则（Bayesian Information Criterion，BIC）</h1><p>BIC（Bayesian InformationCriterion）贝叶斯信息准则与AIC相似，用于模型选择,<strong>BIC越小，模型越优</strong>，1978年由Schwarz提出。训练模型时，增加参数数量，也就是增加模型复杂度，会增大似然函数，但是也会导致过拟合现象，针对该问题，AIC和BIC均引入了与模型参数个数相关的惩罚项，BIC的惩罚项比AIC的大，考虑了样本数量，样本数量过多时，可有效防止模型精度过高造成的模型复杂度过高。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BIC=kln(n)-2ln(L)</span><br></pre></td></tr></table></figure><p>其中，k为模型参数个数，n为样本数量，L为似然函数。kln(n)惩罚项在维数过大且训练样本数据相对较少的情况下，可以有效避免出现维度灾难现象。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>常见的机器学习&amp;数据挖掘知识点</title>
      <link href="/hexo/2017/09/22/2017-09-22-datamining_concepts/"/>
      <url>/hexo/2017/09/22/2017-09-22-datamining_concepts/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Basis-基础-："><a href="#Basis-基础-：" class="headerlink" title="Basis(基础)："></a>Basis(基础)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">SSE</span><span class="params">(Sum of Squared Error, 平方误差和)</span></span></span><br><span class="line"><span class="function"><span class="title">SAE</span><span class="params">(Sum of Absolute Error, 绝对误差和)</span></span></span><br><span class="line"><span class="function"><span class="title">SRE</span><span class="params">(Sum of Relative Error, 相对误差和)</span></span></span><br><span class="line"><span class="function"><span class="title">MSE</span><span class="params">(Mean Squared Error, 均方误差)</span></span></span><br><span class="line"><span class="function"><span class="title">RMSE</span><span class="params">(Root Mean Squared Error, 均方根误差)</span></span></span><br><span class="line"><span class="function"><span class="title">RRSE</span><span class="params">(Root Relative Squared Error, 相对平方根误差)</span></span></span><br><span class="line"><span class="function"><span class="title">MAE</span><span class="params">(Mean Absolute Error, 平均绝对误差)</span></span></span><br><span class="line"><span class="function"><span class="title">RAE</span><span class="params">(Root Absolute Error, 平均绝对误差平方根)</span></span></span><br><span class="line"><span class="function"><span class="title">MRSE</span><span class="params">(Mean Relative Square Error, 相对平均误差)</span></span></span><br><span class="line"><span class="function"><span class="title">RRSE</span><span class="params">(Root Relative Squared Error, 相对平方根误差)</span></span></span><br><span class="line"><span class="function"><span class="title">Expectation</span><span class="params">(期望)</span></span>&amp;Variance(方差)</span><br><span class="line">Standard Deviation(标准差，也称Root Mean Squared Error, 均方根误差)</span><br><span class="line"><span class="function"><span class="title">CP</span><span class="params">(Conditional Probability, 条件概率)</span></span></span><br><span class="line"><span class="function"><span class="title">JP</span><span class="params">(Joint Probability, 联合概率)</span></span></span><br><span class="line"><span class="function"><span class="title">MP</span><span class="params">(Marginal Probability, 边缘概率)</span></span></span><br><span class="line">Bayesian Formula(贝叶斯公式)</span><br><span class="line"><span class="function"><span class="title">CC</span><span class="params">(Correlation Coefficient, 相关系数)</span></span></span><br><span class="line">Quantile (分位数)</span><br><span class="line"><span class="function"><span class="title">Covariance</span><span class="params">(协方差矩阵)</span></span></span><br><span class="line"><span class="function"><span class="title">GD</span><span class="params">(Gradient Descent, 梯度下降)</span></span></span><br><span class="line"><span class="function"><span class="title">SGD</span><span class="params">(Stochastic Gradient Descent, 随机梯度下降)</span></span></span><br><span class="line"><span class="function"><span class="title">LMS</span><span class="params">(Least Mean Squared, 最小均方)</span></span></span><br><span class="line"><span class="function"><span class="title">LSM</span><span class="params">(Least Square Methods, 最小二乘法)</span></span></span><br><span class="line"><span class="function"><span class="title">NE</span><span class="params">(Normal Equation, 正规方程)</span></span></span><br><span class="line"><span class="function"><span class="title">MLE</span><span class="params">(Maximum Likelihood Estimation, 极大似然估计)</span></span></span><br><span class="line"><span class="function"><span class="title">QP</span><span class="params">(Quadratic Programming, 二次规划)</span></span></span><br><span class="line">L1 /L2 Regularization(L1/L2正则, 以及更多的, 现在比较火的L2.<span class="number">5</span>正则等)</span><br><span class="line"><span class="function"><span class="title">Eigenvalue</span><span class="params">(特征值)</span></span></span><br><span class="line"><span class="function"><span class="title">Eigenvector</span><span class="params">(特征向量)</span></span></span><br></pre></td></tr></table></figure><h1 id="Common-Distribution-常见分布-："><a href="#Common-Distribution-常见分布-：" class="headerlink" title="Common Distribution(常见分布)："></a>Common Distribution(常见分布)：</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Discrete </span><span class="keyword">Distribution(离散型分布)：</span></span><br><span class="line"><span class="keyword">Bernoulli </span><span class="keyword">Distribution/Binomial </span><span class="keyword">Distribution(贝努利分布/二项分布)</span></span><br><span class="line"><span class="keyword">Negative </span><span class="keyword">Binomial </span><span class="keyword">Distribution(负二项分布)</span></span><br><span class="line"><span class="keyword">Multinomial </span><span class="keyword">Distribution(多项分布)</span></span><br><span class="line"><span class="keyword">Geometric </span><span class="keyword">Distribution(几何分布)</span></span><br><span class="line"><span class="keyword">Hypergeometric </span><span class="keyword">Distribution(超几何分布)</span></span><br><span class="line"><span class="keyword">Poisson </span><span class="keyword">Distribution </span>(泊松分布)</span><br><span class="line">Continuous <span class="keyword">Distribution </span>(连续型分布)：</span><br><span class="line"></span><br><span class="line">Uniform <span class="keyword">Distribution(均匀分布)</span></span><br><span class="line"><span class="keyword">Normal </span><span class="keyword">Distribution/Gaussian </span><span class="keyword">Distribution(正态分布/高斯分布)</span></span><br><span class="line"><span class="keyword">Exponential </span><span class="keyword">Distribution(指数分布)</span></span><br><span class="line"><span class="keyword">Lognormal </span><span class="keyword">Distribution(对数正态分布)</span></span><br><span class="line"><span class="keyword">Gamma </span><span class="keyword">Distribution(Gamma分布)</span></span><br><span class="line"><span class="keyword">Beta </span><span class="keyword">Distribution(Beta分布)</span></span><br><span class="line"><span class="keyword">Dirichlet </span><span class="keyword">Distribution(狄利克雷分布)</span></span><br><span class="line"><span class="keyword">Rayleigh </span><span class="keyword">Distribution(瑞利分布)</span></span><br><span class="line"><span class="keyword">Cauchy </span><span class="keyword">Distribution(柯西分布)</span></span><br><span class="line"><span class="keyword">Weibull </span><span class="keyword">Distribution </span>(韦伯分布)</span><br><span class="line">Three Sampling <span class="keyword">Distribution(三大抽样分布)：</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">Chi-square </span><span class="keyword">Distribution(卡方分布)</span></span><br><span class="line"><span class="keyword">t-distribution(t-分布)</span></span><br><span class="line"><span class="keyword">F-distribution(F-分布)</span></span><br></pre></td></tr></table></figure><h1 id="Data-Pre-processing-数据预处理-："><a href="#Data-Pre-processing-数据预处理-：" class="headerlink" title="Data Pre-processing(数据预处理)："></a>Data Pre-processing(数据预处理)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Missing Value Imputation(缺失值填充)</span><br><span class="line"><span class="function"><span class="title">Discretization</span><span class="params">(离散化)</span></span></span><br><span class="line"><span class="function"><span class="title">Mapping</span><span class="params">(映射)</span></span></span><br><span class="line"><span class="function"><span class="title">Normalization</span><span class="params">(归一化/标准化)</span></span></span><br></pre></td></tr></table></figure><h1 id="Sampling-采样-："><a href="#Sampling-采样-：" class="headerlink" title="Sampling(采样)："></a>Sampling(采样)：</h1><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Simple Random Sampling(简单随机采样)</span><br><span class="line">Offline Sampling(离线等可能K采样)</span><br><span class="line">Online Sampling(在线等可能K采样)</span><br><span class="line">Ratio-based Sampling(等比例随机采样)</span><br><span class="line">Acceptance-rejection Sampling(接受-拒绝采样)</span><br><span class="line">Importance Sampling(重要性采样)</span><br><span class="line">MCMC(<span class="name">Markov</span> Chain MonteCarlo 马尔科夫蒙特卡罗采样算法：Metropolis-Hasting&amp; Gibbs)</span><br></pre></td></tr></table></figure><h1 id="Clustering-聚类-："><a href="#Clustering-聚类-：" class="headerlink" title="Clustering(聚类)："></a>Clustering(聚类)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">K-MeansK-Mediods</span><br><span class="line">二分K-Means</span><br><span class="line">FK-Means</span><br><span class="line">Canopy</span><br><span class="line"><span class="function"><span class="title">Spectral-KMeans</span><span class="params">(谱聚类)</span></span></span><br><span class="line"><span class="function"><span class="title">GMM-EM</span><span class="params">(混合高斯模型-期望最大化算法解决)</span></span></span><br><span class="line">K-Pototypes</span><br><span class="line"><span class="function"><span class="title">CLARANS</span><span class="params">(基于划分)</span></span></span><br><span class="line"><span class="function"><span class="title">BIRCH</span><span class="params">(基于层次)</span></span></span><br><span class="line"><span class="function"><span class="title">CURE</span><span class="params">(基于层次)</span></span></span><br><span class="line"><span class="function"><span class="title">STING</span><span class="params">(基于网格)</span></span></span><br><span class="line"><span class="function"><span class="title">CLIQUE</span><span class="params">(基于密度和基于网格)</span></span></span><br><span class="line"><span class="number">2014</span>年Science上的密度聚类算法等</span><br></pre></td></tr></table></figure><h1 id="Clustering-Effectiveness-Evaluation-聚类效果评估-："><a href="#Clustering-Effectiveness-Evaluation-聚类效果评估-：" class="headerlink" title="Clustering Effectiveness Evaluation(聚类效果评估)："></a>Clustering Effectiveness Evaluation(聚类效果评估)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Purity</span><span class="params">(纯度)</span></span></span><br><span class="line"><span class="function"><span class="title">RI</span><span class="params">(Rand Index, 芮氏指标)</span></span></span><br><span class="line"><span class="function"><span class="title">ARI</span><span class="params">(Adjusted Rand Index, 调整的芮氏指标)</span></span></span><br><span class="line"><span class="function"><span class="title">NMI</span><span class="params">(Normalized Mutual Information, 规范化互信息)</span></span></span><br><span class="line"><span class="function"><span class="title">F-meaure</span><span class="params">(F测量)</span></span></span><br></pre></td></tr></table></figure><h1 id="Classification-amp-Regression-分类-amp-回归-："><a href="#Classification-amp-Regression-分类-amp-回归-：" class="headerlink" title="Classification&amp;Regression(分类&amp;回归)："></a>Classification&amp;Regression(分类&amp;回归)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">LR</span><span class="params">(Linear Regression, 线性回归)</span></span></span><br><span class="line"><span class="function"><span class="title">LR</span><span class="params">(Logistic Regression, 逻辑回归)</span></span></span><br><span class="line"><span class="function"><span class="title">SR</span><span class="params">(Softmax Regression, 多分类逻辑回归)</span></span></span><br><span class="line"><span class="function"><span class="title">GLM</span><span class="params">(Generalized Linear Model, 广义线性模型)</span></span></span><br><span class="line"><span class="function"><span class="title">RR</span><span class="params">(Ridge Regression, 岭回归/L2正则最小二乘回归)</span></span>，LASSO(Least Absolute Shrinkage and Selectionator Operator , L1正则最小二乘回归)</span><br><span class="line"><span class="function"><span class="title">DT</span><span class="params">(Decision Tree决策树)</span></span></span><br><span class="line"><span class="function"><span class="title">RF</span><span class="params">(Random Forest, 随机森林)</span></span></span><br><span class="line"><span class="function"><span class="title">GBDT</span><span class="params">(Gradient Boosting Decision Tree, 梯度下降决策树)</span></span></span><br><span class="line"><span class="function"><span class="title">CART</span><span class="params">(Classification And Regression Tree 分类回归树)</span></span></span><br><span class="line"><span class="function"><span class="title">KNN</span><span class="params">(K-Nearest Neighbor, K近邻)</span></span></span><br><span class="line"><span class="function"><span class="title">SVM</span><span class="params">(Support Vector Machine, 支持向量机, 包括SVC(分类)</span></span>&amp;SVR(回归))</span><br><span class="line"><span class="function"><span class="title">CBA</span><span class="params">(Classification based on Association Rule, 基于关联规则的分类)</span></span></span><br><span class="line"><span class="function"><span class="title">KF</span><span class="params">(Kernel Function, 核函数)</span></span> </span><br><span class="line">Polynomial Kernel Function(多项式核函数)</span><br><span class="line">Guassian Kernel Function(高斯核函数)</span><br><span class="line">Radial Basis Function(RBF径向基函数)</span><br><span class="line">String Kernel Function 字符串核函数</span><br><span class="line"><span class="function"><span class="title">NB</span><span class="params">(Naive Bayesian,朴素贝叶斯)</span></span></span><br><span class="line"><span class="function"><span class="title">BN</span><span class="params">(Bayesian Network/Bayesian Belief Network/Belief Network 贝叶斯网络/贝叶斯信度网络/信念网络)</span></span></span><br><span class="line"><span class="function"><span class="title">LDA</span><span class="params">(Linear Discriminant Analysis/Fisher Linear Discriminant 线性判别分析/Fisher线性判别)</span></span></span><br><span class="line"><span class="function"><span class="title">EL</span><span class="params">(Ensemble Learning, 集成学习)</span></span> </span><br><span class="line">Boosting</span><br><span class="line">Bagging</span><br><span class="line">Stacking</span><br><span class="line"><span class="function"><span class="title">AdaBoost</span><span class="params">(Adaptive Boosting 自适应增强)</span></span></span><br><span class="line"><span class="function"><span class="title">MEM</span><span class="params">(Maximum Entropy Model, 最大熵模型)</span></span></span><br></pre></td></tr></table></figure><h1 id="Classification-EffectivenessEvaluation-分类效果评估-："><a href="#Classification-EffectivenessEvaluation-分类效果评估-：" class="headerlink" title="Classification EffectivenessEvaluation(分类效果评估)："></a>Classification EffectivenessEvaluation(分类效果评估)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Confusion Matrix(混淆矩阵)</span><br><span class="line"><span class="function"><span class="title">Precision</span><span class="params">(精确度)</span></span></span><br><span class="line"><span class="function"><span class="title">Recall</span><span class="params">(召回率)</span></span></span><br><span class="line"><span class="function"><span class="title">Accuracy</span><span class="params">(准确率)</span></span></span><br><span class="line"><span class="function"><span class="title">F-score</span><span class="params">(F得分)</span></span></span><br><span class="line">ROC Curve(ROC曲线)</span><br><span class="line"><span class="function"><span class="title">AUC</span><span class="params">(AUC面积)</span></span></span><br><span class="line">Lift Curve(Lift曲线)</span><br><span class="line">KS Curve(KS曲线)</span><br></pre></td></tr></table></figure><h1 id="PGM-Probabilistic-Graphical-Models-概率图模型-："><a href="#PGM-Probabilistic-Graphical-Models-概率图模型-：" class="headerlink" title="PGM(Probabilistic Graphical Models, 概率图模型)："></a>PGM(Probabilistic Graphical Models, 概率图模型)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">BN</span><span class="params">(BayesianNetwork/Bayesian Belief Network/ Belief Network , 贝叶斯网络/贝叶斯信度网络/信念网络)</span></span></span><br><span class="line"><span class="function"><span class="title">MC</span><span class="params">(Markov Chain, 马尔科夫链)</span></span></span><br><span class="line"><span class="function"><span class="title">MEM</span><span class="params">(Maximum Entropy Model, 最大熵模型)</span></span></span><br><span class="line"><span class="function"><span class="title">HMM</span><span class="params">(Hidden Markov Model, 马尔科夫模型)</span></span></span><br><span class="line"><span class="function"><span class="title">MEMM</span><span class="params">(Maximum Entropy Markov Model, 最大熵马尔科夫模型)</span></span></span><br><span class="line"><span class="function"><span class="title">CRF</span><span class="params">(Conditional Random Field,条件随机场)</span></span></span><br><span class="line"><span class="function"><span class="title">MRF</span><span class="params">(Markov Random Field, 马尔科夫随机场)</span></span></span><br><span class="line"><span class="function"><span class="title">Viterbi</span><span class="params">(维特比算法)</span></span></span><br><span class="line"><span class="function"><span class="title">NN</span><span class="params">(Neural Network, 神经网络)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">ANN</span><span class="params">(Artificial Neural Network, 人工神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">SNN</span><span class="params">(Static Neural Network, 静态神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">BP</span><span class="params">(Error Back Propagation, 误差反向传播)</span></span></span><br><span class="line"><span class="function"><span class="title">HN</span><span class="params">(Hopfield Network)</span></span></span><br><span class="line"><span class="function"><span class="title">DNN</span><span class="params">(Dynamic Neural Network, 动态神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">RNN</span><span class="params">(Recurrent Neural Network, 循环神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">SRN</span><span class="params">(Simple Recurrent Network, 简单的循环神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">ESN</span><span class="params">(Echo State Network, 回声状态网络)</span></span></span><br><span class="line"><span class="function"><span class="title">LSTM</span><span class="params">(Long Short Term Memory, 长短记忆神经网络)</span></span></span><br><span class="line">CW-RNN(Clockwork-Recurrent Neural Network, 时钟驱动循环神经网络, <span class="number">2014</span>ICML）等.</span><br></pre></td></tr></table></figure><h1 id="Deep-Learning-深度学习-："><a href="#Deep-Learning-深度学习-：" class="headerlink" title="Deep Learning(深度学习)："></a>Deep Learning(深度学习)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Auto-encoder</span><span class="params">(自动编码器)</span></span></span><br><span class="line"><span class="function"><span class="title">SAE</span><span class="params">(Stacked Auto-encoders堆叠自动编码器)</span></span> </span><br><span class="line">Sparse Auto-encoders(稀疏自动编码器)</span><br><span class="line">Denoising Auto-encoders(去噪自动编码器)</span><br><span class="line">Contractive Auto-encoders(收缩自动编码器)</span><br><span class="line"><span class="function"><span class="title">RBM</span><span class="params">(Restricted Boltzmann Machine, 受限玻尔兹曼机)</span></span></span><br><span class="line"><span class="function"><span class="title">DBN</span><span class="params">(Deep Belief Network, 深度信念网络)</span></span></span><br><span class="line"><span class="function"><span class="title">CNN</span><span class="params">(Convolutional Neural Network, 卷积神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">Word2Vec</span><span class="params">(词向量学习模型)</span></span></span><br></pre></td></tr></table></figure><h1 id="Dimensionality-Reduction-降维-："><a href="#Dimensionality-Reduction-降维-：" class="headerlink" title="Dimensionality Reduction(降维)："></a>Dimensionality Reduction(降维)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">LDA</span><span class="params">(Linear Discriminant Analysis/Fisher Linear Discriminant, 线性判别分析/Fish线性判别)</span></span></span><br><span class="line"><span class="function"><span class="title">PCA</span><span class="params">(Principal Component Analysis, 主成分分析)</span></span></span><br><span class="line"><span class="function"><span class="title">ICA</span><span class="params">(Independent Component Analysis, 独立成分分析)</span></span></span><br><span class="line"><span class="function"><span class="title">SVD</span><span class="params">(Singular Value Decomposition 奇异值分解)</span></span></span><br><span class="line"><span class="function"><span class="title">FA</span><span class="params">(Factor Analysis 因子分析法)</span></span></span><br><span class="line">Text Mining(文本挖掘)：</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">VSM</span><span class="params">(Vector Space Model, 向量空间模型)</span></span></span><br><span class="line"><span class="function"><span class="title">Word2Vec</span><span class="params">(词向量学习模型)</span></span></span><br><span class="line"><span class="function"><span class="title">TF</span><span class="params">(Term Frequency, 词频)</span></span></span><br><span class="line"><span class="function"><span class="title">TF-IDF</span><span class="params">(TermFrequency-Inverse Document Frequency, 词频-逆向文档频率)</span></span></span><br><span class="line"><span class="function"><span class="title">MI</span><span class="params">(Mutual Information, 互信息)</span></span></span><br><span class="line"><span class="function"><span class="title">ECE</span><span class="params">(Expected Cross Entropy, 期望交叉熵)</span></span></span><br><span class="line"><span class="function"><span class="title">QEMI</span><span class="params">(二次信息熵)</span></span></span><br><span class="line"><span class="function"><span class="title">IG</span><span class="params">(Information Gain, 信息增益)</span></span></span><br><span class="line"><span class="function"><span class="title">IGR</span><span class="params">(Information Gain Ratio, 信息增益率)</span></span></span><br><span class="line"><span class="function"><span class="title">Gini</span><span class="params">(基尼系数)</span></span></span><br><span class="line">x2 Statistic(x2统计量)</span><br><span class="line"><span class="function"><span class="title">TEW</span><span class="params">(Text Evidence Weight, 文本证据权)</span></span></span><br><span class="line"><span class="function"><span class="title">OR</span><span class="params">(Odds Ratio, 优势率)</span></span></span><br><span class="line">N-Gram Model</span><br><span class="line"><span class="function"><span class="title">LSA</span><span class="params">(Latent Semantic Analysis, 潜在语义分析)</span></span></span><br><span class="line"><span class="function"><span class="title">PLSA</span><span class="params">(Probabilistic Latent Semantic Analysis, 基于概率的潜在语义分析)</span></span></span><br><span class="line"><span class="function"><span class="title">LDA</span><span class="params">(Latent Dirichlet Allocation, 潜在狄利克雷模型)</span></span></span><br><span class="line"><span class="function"><span class="title">SLM</span><span class="params">(Statistical Language Model, 统计语言模型)</span></span></span><br><span class="line"><span class="function"><span class="title">NPLM</span><span class="params">(Neural Probabilistic Language Model, 神经概率语言模型)</span></span></span><br><span class="line"><span class="function"><span class="title">CBOW</span><span class="params">(Continuous Bag of Words Model, 连续词袋模型)</span></span></span><br><span class="line"><span class="function"><span class="title">Skip-gram</span><span class="params">(Skip-gram Model)</span></span></span><br></pre></td></tr></table></figure><h1 id="Association-Mining-关联挖掘-："><a href="#Association-Mining-关联挖掘-：" class="headerlink" title="Association Mining(关联挖掘)："></a>Association Mining(关联挖掘)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Apriori算法</span><br><span class="line"><span class="function"><span class="title">FP-growth</span><span class="params">(Frequency Pattern Tree Growth, 频繁模式树生长算法)</span></span></span><br><span class="line"><span class="function"><span class="title">MSApriori</span><span class="params">(Multi Support-based Apriori, 基于多支持度的Apriori算法)</span></span></span><br><span class="line"><span class="function"><span class="title">GSpan</span><span class="params">(Graph-based Substructure Pattern Mining, 频繁子图挖掘)</span></span></span><br><span class="line">Sequential Patterns Analysis(序列模式分析)</span><br><span class="line"></span><br><span class="line">AprioriAll</span><br><span class="line">Spade</span><br><span class="line"><span class="function"><span class="title">GSP</span><span class="params">(Generalized Sequential Patterns, 广义序列模式)</span></span></span><br><span class="line">PrefixSpan</span><br><span class="line"><span class="function"><span class="title">Forecast</span><span class="params">(预测)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">LR</span><span class="params">(Linear Regression, 线性回归)</span></span></span><br><span class="line"><span class="function"><span class="title">SVR</span><span class="params">(Support Vector Regression, 支持向量机回归)</span></span></span><br><span class="line"><span class="function"><span class="title">ARIMA</span><span class="params">(Autoregressive Integrated Moving Average Model, 自回归积分滑动平均模型)</span></span></span><br><span class="line"><span class="function"><span class="title">GM</span><span class="params">(Gray Model, 灰色模型)</span></span></span><br><span class="line"><span class="function"><span class="title">BPNN</span><span class="params">(BP Neural Network, 反向传播神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">SRN</span><span class="params">(Simple Recurrent Network, 简单循环神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">LSTM</span><span class="params">(Long Short Term Memory, 长短记忆神经网络)</span></span></span><br><span class="line"><span class="function"><span class="title">CW-RNN</span><span class="params">(Clockwork Recurrent Neural Network, 时钟驱动循环神经网络)</span></span></span><br><span class="line">……</span><br><span class="line">Linked Analysis(链接分析)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">HITS</span><span class="params">(Hyperlink-Induced Topic Search, 基于超链接的主题检索算法)</span></span></span><br><span class="line"><span class="function"><span class="title">PageRank</span><span class="params">(网页排名)</span></span></span><br></pre></td></tr></table></figure><h1 id="Recommendation-Engine-推荐引擎-："><a href="#Recommendation-Engine-推荐引擎-：" class="headerlink" title="Recommendation Engine(推荐引擎)："></a>Recommendation Engine(推荐引擎)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SVD</span><br><span class="line">Slope One</span><br><span class="line"><span class="function"><span class="title">DBR</span><span class="params">(Demographic-based Recommendation, 基于人口统计学的推荐)</span></span></span><br><span class="line"><span class="function"><span class="title">CBR</span><span class="params">(Context-based Recommendation, 基于内容的推荐)</span></span></span><br><span class="line"><span class="function"><span class="title">CF</span><span class="params">(Collaborative Filtering, 协同过滤)</span></span></span><br><span class="line"><span class="function"><span class="title">UCF</span><span class="params">(User-based Collaborative Filtering Recommendation, 基于用户的协同过滤推荐)</span></span></span><br><span class="line"><span class="function"><span class="title">ICF</span><span class="params">(Item-based Collaborative Filtering Recommendation, 基于项目的协同过滤推荐)</span></span></span><br></pre></td></tr></table></figure><h1 id="Similarity-Measure-amp-Distance-Measure-相似性与距离度量-："><a href="#Similarity-Measure-amp-Distance-Measure-相似性与距离度量-：" class="headerlink" title="Similarity Measure&amp;Distance Measure(相似性与距离度量)："></a>Similarity Measure&amp;Distance Measure(相似性与距离度量)：</h1><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">EuclideanDistance(欧式距离)</span><br><span class="line">Chebyshev Distance(切比雪夫距离)</span><br><span class="line">Minkowski Distance(闵可夫斯基距离)</span><br><span class="line">Standardized EuclideanDistance(标准化欧氏距离)</span><br><span class="line">Mahalanobis Distance(马氏距离)</span><br><span class="line">Cos(<span class="name">Cosine</span>, 余弦)</span><br><span class="line">Hamming Distance/Edit Distance(汉明距离/编辑距离)</span><br><span class="line">Jaccard Distance(杰卡德距离)</span><br><span class="line">Correlation Coefficient Distance(相关系数距离)</span><br><span class="line">Information Entropy(信息熵)</span><br><span class="line">KL(<span class="name">Kullback-Leibler</span> Divergence, KL散度/Relative Entropy, 相对熵)</span><br></pre></td></tr></table></figure><h1 id="Optimization-最优化-："><a href="#Optimization-最优化-：" class="headerlink" title="Optimization(最优化)："></a>Optimization(最优化)：</h1><h3 id="Non-constrained-Optimization-无约束优化-："><a href="#Non-constrained-Optimization-无约束优化-：" class="headerlink" title="Non-constrained Optimization(无约束优化)："></a>Non-constrained Optimization(无约束优化)：</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cyclic <span class="keyword">Variable</span> Methods(变量轮换法)</span><br><span class="line"><span class="keyword">Variable</span> <span class="comment">Simplex Methods(</span>可变单纯形法<span class="comment">)</span></span><br><span class="line">Newton <span class="comment">Methods(</span>牛顿法<span class="comment">)</span></span><br><span class="line">Quasi-Newton <span class="comment">Methods(</span>拟牛顿法<span class="comment">)</span></span><br><span class="line">Conjugate <span class="comment">Gradient Methods(</span>共轭梯度法<span class="comment">)</span>。</span><br></pre></td></tr></table></figure><h3 id="Constrained-Optimization-有约束优化-："><a href="#Constrained-Optimization-有约束优化-：" class="headerlink" title="Constrained Optimization(有约束优化)："></a>Constrained Optimization(有约束优化)：</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Approximation Programming Methods(近似规划法)</span><br><span class="line">Penalty Function Methods(罚函数法)</span><br><span class="line">Multiplier Methods(乘子法)。</span><br><span class="line">Heuristic Algorithm(启发式算法)</span><br><span class="line"><span class="function"><span class="title">SA</span><span class="params">(Simulated Annealing, 模拟退火算法)</span></span></span><br><span class="line"><span class="function"><span class="title">GA</span><span class="params">(Genetic Algorithm, 遗传算法)</span></span></span><br><span class="line"><span class="function"><span class="title">ACO</span><span class="params">(Ant Colony Optimization, 蚁群算法)</span></span></span><br></pre></td></tr></table></figure><h1 id="Feature-Selection-特征选择-："><a href="#Feature-Selection-特征选择-：" class="headerlink" title="Feature Selection(特征选择)："></a>Feature Selection(特征选择)：</h1><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Mutual</span> <span class="selector-tag">Information</span>(互信息)</span><br><span class="line"><span class="selector-tag">Document</span> <span class="selector-tag">Frequence</span>(文档频率)</span><br><span class="line"><span class="selector-tag">Information</span> <span class="selector-tag">Gain</span>(信息增益)</span><br><span class="line"><span class="selector-tag">Chi-squared</span> <span class="selector-tag">Test</span>(卡方检验)</span><br><span class="line"><span class="selector-tag">Gini</span>(基尼系数)</span><br></pre></td></tr></table></figure><h1 id="Outlier-Detection-异常点检测-："><a href="#Outlier-Detection-异常点检测-：" class="headerlink" title="Outlier Detection(异常点检测)："></a>Outlier Detection(异常点检测)：</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Statistic-based</span><span class="params">(基于统计)</span></span></span><br><span class="line"><span class="function"><span class="title">Density-based</span><span class="params">(基于密度)</span></span></span><br><span class="line"><span class="function"><span class="title">Clustering-based</span><span class="params">(基于聚类)</span></span>。</span><br></pre></td></tr></table></figure><h1 id="Learning-to-Rank-基于学习的排序-："><a href="#Learning-to-Rank-基于学习的排序-：" class="headerlink" title="Learning to Rank(基于学习的排序)："></a>Learning to Rank(基于学习的排序)：</h1><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Pointwise </span><br><span class="line">McRank</span><br><span class="line">Pairwise </span><br><span class="line">RankingSVM</span><br><span class="line">RankNet</span><br><span class="line">Frank</span><br><span class="line">RankBoost；</span><br><span class="line"><span class="built_in">Listwise</span> </span><br><span class="line">AdaRank</span><br><span class="line">SoftRank</span><br><span class="line">LamdaMART</span><br></pre></td></tr></table></figure><h1 id="Tool-工具-："><a href="#Tool-工具-：" class="headerlink" title="Tool(工具)："></a>Tool(工具)：</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MPI</span><br><span class="line">Hadoop生态圈</span><br><span class="line">Spark</span><br><span class="line">IGraph</span><br><span class="line"><span class="keyword">BSP</span></span><br><span class="line"><span class="keyword">Weka</span></span><br><span class="line"><span class="keyword">Mahout</span></span><br><span class="line"><span class="keyword">Scikit-learn</span></span><br><span class="line"><span class="keyword">PyBrain</span></span><br><span class="line"><span class="keyword">Theano</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>SSE, MSE, RMSE, R-square</title>
      <link href="/hexo/2017/09/22/2017-09-22-SSE_MSE_RMSE_R-square/"/>
      <url>/hexo/2017/09/22/2017-09-22-SSE_MSE_RMSE_R-square/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">SSE</span><span class="params">(和方差、误差平方和)</span></span>：The sum of squares due to error</span><br><span class="line"><span class="function"><span class="title">MSE</span><span class="params">(均方误、方差)</span></span>：Mean squared error</span><br><span class="line"><span class="function"><span class="title">RMSE</span><span class="params">(均方根、标准差)</span></span>：Root mean squared error</span><br><span class="line"><span class="function"><span class="title">R-square</span><span class="params">(确定系数)</span></span>：Coefficient of determination</span><br><span class="line">Adjusted R-square：Degree-of-freedom adjusted coefficient of determination</span><br></pre></td></tr></table></figure><h1 id="SSE-和方差、误差平方和"><a href="#SSE-和方差、误差平方和" class="headerlink" title="SSE(和方差、误差平方和)"></a>SSE(和方差、误差平方和)</h1><p>拟合数据和原始数据对应点的误差的平方和</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/SSE_SSE.gif" alt=""></p><p>SSE越接近于0，说明模型选择和拟合更好，数据预测也越成功。接下来的MSE和RMSE因为和SSE是同出一宗，所以效果一样。</p><h1 id="MSE-均方误"><a href="#MSE-均方误" class="headerlink" title="MSE(均方误)"></a>MSE(均方误)</h1><p>预测数据和原始数据对应点误差的平方和的均值，也就是SSE/n，和SSE没有太大的区别，<strong>最常用</strong>！</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/SSE_MSE.gif" alt=""></p><h1 id="RMSE-均方根"><a href="#RMSE-均方根" class="headerlink" title="RMSE(均方根)"></a>RMSE(均方根)</h1><p>回归系统的拟合标准差，是MSE的平方根，就算公式如下</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/SSE_RMSE.gif" alt=""></p><hr><p><strong>在这之前，我们所有的误差参数都是基于预测值(y_hat)和原始值(y)之间的误差(即点对点)。从下面开始是所有的误差都是相对原始数据平均值(y_ba)而展开的(即点对全)</strong></p><hr><h1 id="R-square-确定系数"><a href="#R-square-确定系数" class="headerlink" title="R-square(确定系数)"></a>R-square(确定系数)</h1><h4 id="1-SSR：Sum-of-squares-of-the-regression，即预测数据与原始数据均值之差的平方和"><a href="#1-SSR：Sum-of-squares-of-the-regression，即预测数据与原始数据均值之差的平方和" class="headerlink" title="(1)SSR：Sum of squares of the regression，即预测数据与原始数据均值之差的平方和"></a>(1)SSR：Sum of squares of the regression，即预测数据与原始数据均值之差的平方和</h4><p><img src="https://taoshengxu.github.io/DocumentGit/img/SSE_SSR.gif" alt=""></p><h4 id="2-SST：Total-sum-of-squares，即原始数据和均值之差的平方和"><a href="#2-SST：Total-sum-of-squares，即原始数据和均值之差的平方和" class="headerlink" title="(2)SST：Total sum of squares，即原始数据和均值之差的平方和"></a>(2)SST：Total sum of squares，即原始数据和均值之差的平方和</h4><p><img src="https://taoshengxu.github.io/DocumentGit/img/SSE_SST.gif" alt=""></p><p>SST=SSE+SSR</p><p>“确定系数”是定义为SSR和SST的比值</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/SSE_R2.gif" alt=""></p><p><strong>R-square是通过数据的变化来表征一个拟合的好坏。由上面的表达式可以知道“确定系数”的正常取值范围为[0 1]，越接近1，表明方程的变量对y的解释能力越强，这个模型对数据拟合的也较好。</strong></p><hr><p><img src="https://taoshengxu.github.io/DocumentGit/img/MSE_RMSE.jpg" alt=""></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/MAE.jpg" alt=""></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>线性回归-岭回归-Lasso-弹性网-多重共线性</title>
      <link href="/hexo/2017/09/22/2017-09-22-Ridge_Lasso_glmnet/"/>
      <url>/hexo/2017/09/22/2017-09-22-Ridge_Lasso_glmnet/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="http://f.dataguru.cn/thread-598486-1-1.html" target="_blank" rel="noopener">原文</a></p><h1 id="1-回归问题的数学描述"><a href="#1-回归问题的数学描述" class="headerlink" title="1. 回归问题的数学描述"></a>1. 回归问题的数学描述</h1><p>1.n个样本，p个变量，X，y已知。对数据中心化、标准化处理后，可以去掉截距项。<br><img src="https://taoshengxu.github.io/DocumentGit/img/GLM1.jpg" alt=""></p><p>2.矩阵形式的多元线性模型为:</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM2.png" alt=""></p><p>求解β，使得误差项ε能达到较低.</p><p>3.残差平方和RSS为</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM3.png" alt=""></p><p>4.多元线性回归问题变为求解β，从而使残差平方和极小值问题（关于系数向量β的二次函数极值问题）</p><p>5.几何意义</p><p>残差向量的几何意义：响应y向量到由p个x向量组成的超平面的距离向量。<br><br>残差平方和几何意义：残差向量长度的平方。</p><h1 id="2-最小二乘回归"><a href="#2-最小二乘回归" class="headerlink" title="2.最小二乘回归"></a>2.最小二乘回归</h1><p>使用最小二乘法拟合的普通线性回归是数据建模的基本方法。其建模要点在于误差项一般要求独立同分布（常假定为正态）零均值。t检验用来检验拟合的模型系数的显著性，F检验用来检验模型的显著性（方差分析）。如果正态性不成立，t检验和F检验就没有意义。</p><p>β的最小二乘估计为：</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM4.jpg" alt=""></p><p>在统计学上，可证明β的最小二乘解为无偏估计，即多次得到的采样值X而计算出来的多个系数估计值向量的平均值将无限接近于真实值向量β。</p><p>如果存在较强的共线性，即X中各列向量之间存在较强的相关性，会导致|X^T X|≈0, 从而引起对角线上的值很大(X^T X的逆矩阵不不存在)</p><hr><h4 id="问题：-X矩阵不存在广义逆（即奇异性）的情况。"><a href="#问题：-X矩阵不存在广义逆（即奇异性）的情况。" class="headerlink" title="问题： X矩阵不存在广义逆（即奇异性）的情况。"></a>问题： X矩阵不存在广义逆（即奇异性）的情况。</h4><ul><li><p>X本身存在线性相关关系（即多重共线性），即非满秩矩阵。当采样值误差造成本身线性相关的样本矩阵仍然可以求出逆阵时，此时的逆阵非常不稳定，所求的解也没有什么意义。</p></li><li><p>当变量比样本多，即p&gt;n时.回归系数会变得很大，无法求解。</p></li></ul><h5 id="对较复杂的数据建模（比如文本分类，图像去噪或者基因组研究）的时候，普通线性回归会有一些问题："><a href="#对较复杂的数据建模（比如文本分类，图像去噪或者基因组研究）的时候，普通线性回归会有一些问题：" class="headerlink" title="对较复杂的数据建模（比如文本分类，图像去噪或者基因组研究）的时候，普通线性回归会有一些问题："></a>对较复杂的数据建模（比如文本分类，图像去噪或者基因组研究）的时候，普通线性回归会有一些问题：</h5><p>（1）预测精度的问题 如果响应变量和预测变量之间有比较明显的线性关系，最小二乘回归会有很小的偏倚，特别是如果观测数量n远大于预测变量p时，最小二乘回归也会有较小的方差。但是如果n和p比较接近，则容易产生过拟合；如果n&lt;p，最小二乘回归得不到有意义的结果。</p><p>（2）模型解释能力的问题 包括在一个多元线性回归模型里的很多变量可能是和响应变量无关的；也有可能产生多重共线性的现象：即多个预测变量之间明显相关。这些情况都会增加模型的复杂程度，削弱模型的解释能力。这时候需要进行变量选择（特征选择）。</p><h4 id="针对OLS-ordinary-least-squares-的问题，在变量选择方面有三种扩展的方法："><a href="#针对OLS-ordinary-least-squares-的问题，在变量选择方面有三种扩展的方法：" class="headerlink" title="针对OLS (ordinary least squares)的问题，在变量选择方面有三种扩展的方法："></a>针对OLS (ordinary least squares)的问题，在变量选择方面有三种扩展的方法：</h4><ul><li><p>（1）子集选择 这是传统的方法，包括逐步回归和最优子集法等，对可能的部分子集拟合线性模型，利用判别准则 （如AIC,BIC,Cp,调整R2 等）决定最优的模型。</p></li><li><p>（2）收缩方法（shrinkage method） 收缩方法又称为<strong>正则化（regularization）</strong>。主要是岭回归（ridge regression）和lasso回归。通过对最小二乘估计加入罚约束，使某些系数的估计为0。 </p></li><li><p>(3)维数缩减 主成分回归（PCR）和偏最小二乘回归（PLS）的方法。把p个预测变量投影到m维空间（m&lt;p），利用投影得到的不相关的组合建立线性模型。</p></li></ul><h1 id="3-岭回归（Ridge-Regression，RR-1962）"><a href="#3-岭回归（Ridge-Regression，RR-1962）" class="headerlink" title="3.岭回归（Ridge Regression，RR, 1962）"></a>3.岭回归（Ridge Regression，RR, 1962）</h1><p>思路：在原先的β的最小二乘估计中加一个小扰动λI，是原先无法求广义逆的情况变成可以求出其广义逆，使得问题稳定并得以求解。</p><p>极值问题：<br><img src="https://taoshengxu.github.io/DocumentGit/img/GLM5.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/GLM6.jpg" alt=""></p><p>对上式用偏导数求极值，结果就是 </p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM7.jpg" alt=""></p><p>其中<img src="..." alt="">为惩罚函数，它保证了β值不会变的很大。岭参数λ不同，岭回归系数也会不同。</p><p>岭回归是回归参数β的有偏估计。它的结果是使得残差平和变大，但是会使系数检验变好，即R语言summary结果中变量后的*变多。</p><p>岭回归缺陷: </p><ul><li><p>1.主要靠目测选择岭参数</p></li><li><p>2.计算岭参数时，各种方法结果差异较大</p></li></ul><p>所以一般认为，岭迹图只能看多重共线性，却很难做变量筛选</p><h1 id="4-几何解释"><a href="#4-几何解释" class="headerlink" title="4.几何解释"></a>4.几何解释</h1><p>以两个变量为例，系数β1和β2已经经过标准化。残差平方和RSS可以表示为β1和β2的一个二次函数，数学上可以用一个抛物面表示。</p><ol><li>最小二乘法 </li></ol><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM9.jpg" alt=""></p><p>2.岭回归</p><p>约束项为 β1^2+β2^2≤t</p><p>对应着投影为β1和β2平面上的一个圆，即下图中的圆柱.</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM10.jpg" alt=""></p><p>该圆柱与抛物面的交点对应的β1、β2值，即为满足约束项条件下的能取得的最小的β1和β2.</p><p>从β1,β2平面理解，即为抛物面等高线在水平面的投影和圆的交点，如下图所示,可见岭回归解与原先的最小二乘解是有一定距离的。</p><p><img src="http://attachbak.dataguru.cn/attachments/forum/201603/03/GLM11.jpg" alt=""></p><p>3.岭回归性质</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/Ridge20170922104329.png" alt=""></p><p>4.岭迹图</p><p>岭迹图作用：</p><ul><li><p>1）观察λ较佳取值；</p></li><li><p>2）观察变量是否有多重共线性；</p></li></ul><p>是λ的函数，岭迹图的横坐标为λ，纵坐标为β(λ)。而β(λ)是一个向量，由β1(λ)、β2(λ)、…等很多分量组成，每一个分量都是λ的函数，将每一个分量分别用一条线。当不存在奇异性时，岭迹应是稳定地逐渐趋向于0。<br><img src="https://taoshengxu.github.io/DocumentGit/img/GLM12.jpg" alt=""></p><p>岭迹图比较</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/Ridge20170922154100.png" alt=""></p><p>通过岭迹的形状来判断我们是否要剔除掉该参数（例如：岭迹波动很大，说明该变量参数有共线性）</p><p>可见，在λ很小时，通常各β系数取值较大；而如果λ=0，则跟普通意义的多元线性回归的最小二乘解完全一样；当λ略有增大，则各β系数取值迅速减小，即从不稳定趋于稳定。上图类似喇叭形状的岭迹图，一般都存在多重共线性。</p><ul><li><p>λ的选择：一般通过观察，选取喇叭口附近的值，此时各β值已趋于稳定，但总的RSS又不是很大。</p></li><li><p>选择变量：删除那些β取值一直趋于0的变量。</p></li><li><p>注意：用岭迹图筛选变量并非十分靠谱。</p></li></ul><p>岭回归选择变量的原则（不靠谱，仅供参考）</p><ul><li><p>1）在岭回归中设计矩阵X已经中心化和标准化了，这样可以直接比较标准化岭回归系数癿大小。可以剔除掉标准化岭回归系数比较稳定且值很小癿自变量。</p></li><li><p>2）随着λ的增加，回归系数不稳定，震动趋于零的自变量也可以剔除。</p></li><li><p>3）如果依照上述去掉变量的原则，有若干个回归系数不稳定，究竟去掉几个，去掉哪几个，这幵无一般原则可循，这需根据去掉某个变量后重新进行岭回归分析的效果来确定。</p></li></ul><p>5.岭回归R语言分析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">library(MASS)#岭回归在MASS包中。</span><br><span class="line">longley #内置数据集，有关国民经济情况的数据，以多重共线性较强著称</span><br><span class="line">summary(fm1&lt;-lm(Employed~.,data=longley)) #最小二乘估计的多元线性回归</span><br><span class="line">#结果可见，R^2很高，但是系数检验不是非常理想</span><br><span class="line">names(longley)[1]&lt;-&quot;y&quot;  </span><br><span class="line">lm.ridge(y~.,longley)   #此时，仍为线性回归</span><br><span class="line">plot(lm.ridge(y~.,longley,lambda=seq(0,0.1,0.001)))  #加了参数lambda的描述后才画出响应的岭迹图</span><br><span class="line">#由于lambda趋于0时，出现了不稳定的情况，所以可以断定变量中存在多重共线性</span><br><span class="line">select(lm.ridge(y~.,longley,lambda=seq(0,0.1,0.001)))  #用select函数可算lambda值，结果给出了3种方法算的的lambda的估计值</span><br><span class="line"></span><br><span class="line">## modified HKB estimator is 0.006836982 </span><br><span class="line">## modified L-W estimator is 0.05267247 </span><br><span class="line">## smallest value of GCV  at 0.006 </span><br><span class="line"></span><br><span class="line">#以上结果通常取GCV估计，或者观察大多数方法趋近哪个值。</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM13.jpg" alt=""></p><h1 id="5-LASSO"><a href="#5-LASSO" class="headerlink" title="5. LASSO"></a>5. LASSO</h1><p>Tibshirani(1996)提出了Lasso(The Least Absolute Shrinkage and Selectionatoroperator)算法，这里  Absolute 指绝对值。Shrinkage收缩的含义：即系数收缩在一定区域内（比如圆内）。</p><p><strong>主要思想</strong>：<br>通过构造一个一阶惩罚函数获得一个精炼的模型；通过最终确定一些指标（变量）癿系数为零（岭回归估计系数等于0癿机会微乎其微，造成筛选变量困难），解释力很强。擅长处理具有多重共线性癿数据，筛选变量，与岭回归一样是有偏估计。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM14.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/GLM15.jpg" alt=""></p><p><strong>几何解释</strong></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM16.jpg" alt=""></p><p>由于方框的顶点更容易交于抛物面，也就是lasso更易求解，而该顶点对应的很多系数为0，也就是起到了筛选变量的目的。</p><p><strong>Lasso plot</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">set.seed(<span class="number">101</span>)</span><br><span class="line">x=matrix(rnorm(<span class="number">1000</span>),<span class="number">100</span>,<span class="number">10</span>)</span><br><span class="line">y=rnorm(<span class="number">100</span>)</span><br><span class="line">fit=glmnet(x,y)</span><br><span class="line"></span><br><span class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line"><span class="comment">#par(mar=c(4.5,4.5,1,4))</span></span><br><span class="line"><span class="comment">##plot1</span></span><br><span class="line">plot(fit)</span><br><span class="line">vnat=coef(fit)</span><br><span class="line">vnat=vnat[-<span class="number">1</span>,ncol(vnat)] <span class="comment"># remove the intercept, and get the coefficients at the end of the path</span></span><br><span class="line">axis(<span class="number">4</span>, at=vnat,line=-<span class="number">.5</span>,label=paste(<span class="string">"feature"</span>,<span class="number">1</span>:<span class="number">10</span>),las=<span class="number">1</span>,tick=<span class="literal">FALSE</span>, cex.axis=<span class="number">0.5</span>)</span><br><span class="line"><span class="comment">#plot2</span></span><br><span class="line">plot(fit, xvar = <span class="string">"lambda"</span>)</span><br><span class="line"><span class="comment"># plot3</span></span><br><span class="line">plot(fit, xvar = <span class="string">"dev"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://taoshengxu.github.io/DocumentGit/img/lasso201710112315.jpeg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/lasso201710112315.png" alt=""></p><h1 id="6-LASSO-vs-岭回归"><a href="#6-LASSO-vs-岭回归" class="headerlink" title="6.LASSO vs 岭回归"></a>6.LASSO vs 岭回归</h1><p>岭回归一方面可以将其变成一个最小二乘问题。另一方面可以将它解释成一个带约束项的系数优化问题。λ增大的过程就是t减小的过程，该图也说明了岭回归系数估计值为什么通常不为0，因为随着抛物面的扩展，它与约束圆的交点可能在圆周上的任意位置，除非交点恰好位于某个坐标轴或坐标平面上，否则大多数情况交点对应的系数值都不为零。再加上λ的选择应使椭球面和圆周的交点恰好在一个坐标平面上，更增加了求解λ的难度。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM17.jpg" alt=""></p><p>左图为岭回归，右图为lasso回归。横轴越往左，自由度越小（即圆或方框在收缩的过程），λ越大，系数（即纵轴）会越趋于0。但是岭回归没有系数真正为0，但lasso的不断有系数变为0.</p><h1 id="7-一般化的模型"><a href="#7-一般化的模型" class="headerlink" title="7.一般化的模型"></a>7.一般化的模型</h1><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM18.jpg" alt=""></p><p>不同q对应的约束域形状</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM19.jpg" alt=""></p><h1 id="8-弹性网模型"><a href="#8-弹性网模型" class="headerlink" title="8.弹性网模型"></a>8.弹性网模型</h1><p>Zouand Hastie (2005)提出elasticnet，介于岭回归和lasso回归之间，现在被认为是处理多重共线性和变量筛选较好的收缩方法，而且损失的精度不会太多。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM20.jpg" alt=""></p><h1 id="9-最小角回归-Least-Angel-Regression-是lasso-regression癿一种高效解法。"><a href="#9-最小角回归-Least-Angel-Regression-是lasso-regression癿一种高效解法。" class="headerlink" title="9.最小角回归(Least Angel Regression)是lasso regression癿一种高效解法。"></a>9.最小角回归(Least Angel Regression)是lasso regression癿一种高效解法。</h1><p>Lasso回归中表达式用偏导求极值时，存在部分点不可导的情况（如方框的尖点），如何解决？</p><p>Efron于2004年提出癿一种变量选择癿方法，<strong>类似于</strong>向前逐步回归(Forward Stepwise)的形式，最初用于解决传统的线性回归问题，有清晰的几何意义。</p><p>与向前逐步回归(Forward Stepwise)不同点在于，Forward Step wise 每次都是根据选择的变量子集，完全拟合出线性模型，计算出RSS，再设计统计量（如AIC）对较高癿模型复杂度作出惩罚，而LAR是每次先找出和因变量相关度较高的那个变量, 再沿着LSE的方向一点点调整这个predictor的系数，在这个过程中，这个变量和残差的相关系数会逐渐减小，等到这个相关性没那么显著的时候，就要选进新的相关性较高的变量，然后重新沿着LSE的方向进行变动。而到最后，所有变量都被选中，就和LSE相同了。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM21.jpg" alt=""></p><p>左图为LAR逐步加上变量的过程（从左往右看），右图为LASSO变量逐渐淘汰的收缩过程（从右往左看）。<br>对比两幅图，非常类似。所以可以用LAR方法来计算LASSO，该方法完全是线性解决方法，没有迭代的过程。</p><h1 id="10-相关系数的几何意义"><a href="#10-相关系数的几何意义" class="headerlink" title="10. 相关系数的几何意义"></a>10. 相关系数的几何意义</h1><p>设变量y=[y1,y2,…yn]; 变量x=[x1,x2,…,xn].</p><p>其相关系数为<img src="https://taoshengxu.github.io/DocumentGit/img/GLM22.jpg" alt=""></p><p>其中cov—协方差、var—-方差。</p><p>如果对x和y进行中心化、标准化，则var(y)=var(x)=1,相关系数变为x1y1+x2y2+….+xnyn，即为向量x和y的内积=||x||<em>||y||</em>cos θ，其中θ为x和y的夹角。而对于标准化和中心化后的x和y，则有||x||=||y||=1，所以此时x和y的内积就是它们夹角的余弦。  </p><ul><li><p>如果x和y向量很像，几乎重合，则夹角θ=0，也就是相关系数=内积=1，此时称为高度相关.</p></li><li><p>如果x和y相关程度很低，则表现出来的x和y向量相互垂直，相关系数=0.</p></li><li><p>如果相关系数=-1，标明x和y呈180°，即负相关。</p></li></ul><h1 id="11-LAR算法及几何意义"><a href="#11-LAR算法及几何意义" class="headerlink" title="11. LAR算法及几何意义"></a>11. LAR算法及几何意义</h1><p>参考书The Elements of Statistical Learning .pdf的74页。LAR和Lasso的区别以及LAR解Lasso的修正<br>参考书The Elements of Statistical Learning .pdf的76页。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GLM23.jpg" alt=""></p><p>假设有6个变量，最先加入与残差向量相关系数较大的浅蓝色v2，在v2变化过程中，相关系数越变越小，直到等于深蓝色的v6，于是加入v6，沿着v2与v6的最小角方向（即向量角分线方向）前进，此后v2和v6与残差向量的相关系数是共同变化的，即两者合并变化，使得相关系数越来越小，直到加入黑色v4为止，三个变量一起变化，…，一直打到最小二乘解为止，此时残差向量与所有变量的相关系数都为0，即与他们都垂直。</p><p>横坐标L1 Length表示：从原点开始走了多长距离，就是值距离，L1范数。</p><h1 id="12-R语言中对LAR的实现"><a href="#12-R语言中对LAR的实现" class="headerlink" title="12. R语言中对LAR的实现"></a>12. R语言中对LAR的实现</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">install.packages(&quot;lars&quot;)  #lars包</span><br><span class="line">longley  #用longley数据集，它是一个著名的多重共线性例子</span><br><span class="line">w=as.matrix(longley)  #将数据集转换为一个矩阵</span><br><span class="line"></span><br><span class="line">laa=lars(w[,2:7],w[,1]) #w的2:7列为自变量，第1列为因变量</span><br><span class="line">laa  #显示LAR回归过程</span><br><span class="line"></span><br><span class="line">##Call:</span><br><span class="line">##lars(x = w[, 2:7], y = w[, 1])</span><br><span class="line">##R-squared: 0.993 </span><br><span class="line">##Sequence of LASSO moves:</span><br><span class="line">##     GNP Year Armed.Forces Unemployed Employed Population Year Employed   Employed Year Employed Employed</span><br><span class="line">##Var    1    5            3                   2                   6           4          -5           -6            6             5  -6        6                                                 </span><br><span class="line">##Step  1    2            3                   4                   5           6           7          8             9             10  11       12 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plot(laa)  #画lasso回归过程图</span><br><span class="line">summary(laa)</span><br><span class="line"></span><br><span class="line">#以上结果显示了每一步的残差平方和RSS和多重共线性指标Cp（Mallows&apos;s Cp http://en.wikipedia.org/wiki/Mallows%27_Cp）</span><br><span class="line">#Cp越小，多重共线性越小，因此结果以第八步为准，即只剩下第1、2、3、4个变量</span><br></pre></td></tr></table></figure><h1 id="13-glmnet包"><a href="#13-glmnet包" class="headerlink" title="13.glmnet包"></a>13.glmnet包</h1><p>From <a href="https://site.douban.com/182577/widget/notes/10567212/note/289294468/" target="_blank" rel="noopener">https://site.douban.com/182577/widget/notes/10567212/note/289294468/</a></p><p>glmnet包是关于Lasso and elastic-net regularized generalized linear models。 作者是Friedman, J., Hastie, T. and Tibshirani, R这三位。</p><p>这个包采用的算法是循环坐标下降法（cyclical coordinate descent），处理的模型包括 linear regression,logistic and multinomial regression models, poisson regression 和 the Cox model，用到的正则化方法就是l1范数（lasso）、l2范数（岭回归）和它们的混合 （elastic net）。</p><p>坐标下降法是关于lasso的一种快速计算方法（是目前关于lasso最快的计算方法），其基本要点为： 对每一个参数在保持其它参数固定的情况下进行优化，循环，直到系数稳定为止。这个计算是在lambda的格点值上进行的。 关于这个算法见[5]。 关于glmnet包的细节可参考[4]，这篇文献同时也是关于lasso的一个不错的文献导读。</p><p>[1]Tibshirani, R.: Regression shrinkage and selection via the LASSO. Journal of the Royal Statistical Society: Series B, Vol. 58 (1996), No 1, 267–288</p><p>[2]Efron, B., Johnstone, I., Hastie, T., and Tibshirani, R.: Least angle regression. Annals of Statistics, Vol. 32 (2004), No 2, 407–499.</p><p>[3]Hastie, T., Tibshirani, R., and Friedman, J.: The Elements of Statistical Learning: Data Mining, Inference and Prediction. Second edition. New York: Springer, 2009.</p><p>[4]Friedman,J.,Hastie,T.,Tibshirani.R.:Regularization Paths for Generalized Linear Models via Coordinate Descent.Journal of Statistical Software,Volume 33(2010), Issue 1.</p><p>[5]J. Friedman, T. Hastie, H. Hoe ing, and R. Tibshirani.:Pathwise coordinate optimization. Annals of Applied Statistics, 2(1):302-332, 2007. <a href="http://www.stanford.edu/~hastie/Papers/pathwise.pdf" target="_blank" rel="noopener">http://www.stanford.edu/~hastie/Papers/pathwise.pdf</a></p><p>[6]Trevor Hastie,Sparse Linear Models:with demonstrations using glmnet.2013.</p><p>[7] Zou, Hui &amp; Trevor Hastie (2005): Regularization and variable selection via the Elastic Net, JRSS (B)67(2):301-320)</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(glmnet)</span><br><span class="line">prostate=read.csv(url(<span class="string">"https://taoshengxu.github.io/DocumentGit/data/prostate.csv"</span>))</span><br><span class="line">prostate=prostate[,c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>)]</span><br><span class="line">head(prostate)</span><br><span class="line">x &lt;- as.matrix(prostate[, <span class="number">2</span>:<span class="number">6</span>])</span><br><span class="line">y &lt;- prostate[, <span class="number">1</span>]</span><br><span class="line">set.seed(<span class="number">1</span>)</span><br><span class="line">train &lt;- sample(<span class="number">1</span>:nrow(x), nrow(x) * <span class="number">2</span>/<span class="number">3</span>)</span><br><span class="line">test &lt;- (-train)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 1. Ridge Regression</span></span><br><span class="line">r1 &lt;- glmnet(x = x[train, ], y = y[train], family = <span class="string">"gaussian"</span>, alpha = <span class="number">0</span>)</span><br><span class="line">plot(r1, xvar = <span class="string">"lambda"</span>)</span><br><span class="line"></span><br><span class="line">r1.cv &lt;- cv.glmnet(x = x, y = y, family = <span class="string">"gaussian"</span>, alpha = <span class="number">0</span>, nfold = <span class="number">10</span>)</span><br><span class="line">plot(r1.cv)</span><br><span class="line"></span><br><span class="line">mte &lt;- predict(r1, x[test, ])</span><br><span class="line">mte &lt;- apply((mte - y[test])^<span class="number">2</span>, <span class="number">2</span>, mean)</span><br><span class="line">points(log(r1$lambda), mte, col = <span class="string">"blue"</span>, pch = <span class="number">19</span>)</span><br><span class="line">legend(<span class="string">"topleft"</span>, legend = c(<span class="string">"10 - fold CV"</span>, <span class="string">"Test"</span>), col = c(<span class="string">"red"</span>, <span class="string">"blue"</span>))</span><br><span class="line"></span><br><span class="line">r1.min &lt;- glmnet(x = x, y = y, family = <span class="string">"gaussian"</span>, alpha = <span class="number">0</span>, lambda = r1.cv$lambda.min)</span><br><span class="line">coef(r1.min)</span><br><span class="line"></span><br><span class="line"><span class="comment">##2. Lasso</span></span><br><span class="line"></span><br><span class="line">r2 &lt;- glmnet(x = x[train, ], y = y[train], family = <span class="string">"gaussian"</span>, alpha = <span class="number">1</span>)</span><br><span class="line">plot(r2)</span><br><span class="line">plot(r2, xvar = <span class="string">"lambda"</span>)</span><br><span class="line"></span><br><span class="line">r2.cv &lt;- cv.glmnet(x = x, y = y, family = <span class="string">"gaussian"</span>, alpha = <span class="number">1</span>, nfold = <span class="number">10</span>)</span><br><span class="line">plot(r2.cv)</span><br><span class="line"></span><br><span class="line">mte &lt;- predict(r2, x[test, ])</span><br><span class="line">mte &lt;- apply((mte - y[test])^<span class="number">2</span>, <span class="number">2</span>, mean)</span><br><span class="line">points(log(r2$lambda), mte, col = <span class="string">"blue"</span>, pch = <span class="number">19</span>)</span><br><span class="line">legend(<span class="string">"topleft"</span>, legend = c(<span class="string">"10 - fold CV"</span>, <span class="string">"Test"</span>), col = c(<span class="string">"red"</span>, <span class="string">"blue"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># cv.min vs cv.1se,用全部数据再次拟合模型</span></span><br><span class="line">r2.cv$lambda.min</span><br><span class="line"><span class="comment">## [1] 0.002954</span></span><br><span class="line">r2.cv$lambda.1se</span><br><span class="line"><span class="comment">## [1] 0.1771</span></span><br><span class="line"></span><br><span class="line">r2.1se &lt;- glmnet(x = x, y = y, family = <span class="string">"gaussian"</span>, alpha = <span class="number">1</span>, lambda = r2.cv$lambda.1se)</span><br><span class="line">coef(r2.1se)</span><br><span class="line"><span class="comment">## 6 x 1 sparse Matrix of class "dgCMatrix"</span></span><br><span class="line"><span class="comment">## s0</span></span><br><span class="line"><span class="comment">## (Intercept) 0.3234</span></span><br><span class="line"><span class="comment">## age . </span></span><br><span class="line"><span class="comment">## lbph . </span></span><br><span class="line"><span class="comment">## lcp 0.2462</span></span><br><span class="line"><span class="comment">## gleason . </span></span><br><span class="line"><span class="comment">## lpsa 0.4320</span></span><br><span class="line">r2.min &lt;- glmnet(x = x, y = y, family = <span class="string">"gaussian"</span>, alpha = <span class="number">1</span>, lambda = r2.cv$lambda.min)</span><br><span class="line">coef(r2.min)</span><br><span class="line"><span class="comment">## 6 x 1 sparse Matrix of class "dgCMatrix"</span></span><br><span class="line"><span class="comment">## s0</span></span><br><span class="line"><span class="comment">## (Intercept) -1.44505</span></span><br><span class="line"><span class="comment">## age 0.01851</span></span><br><span class="line"><span class="comment">## lbph -0.08585</span></span><br><span class="line"><span class="comment">## lcp 0.29688</span></span><br><span class="line"><span class="comment">## gleason 0.05081</span></span><br><span class="line"><span class="comment">## lpsa 0.53741</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 岭回归和lasso的比较</span></span><br><span class="line">lasso.pred &lt;- predict(r2, s = r2.cv$lambda.1se, newx = x[test, ])</span><br><span class="line">ridge.pred &lt;- predict(r1, s = r1.cv$lambda.1se, newx = x[test, ])</span><br><span class="line">mean((lasso.pred - y[test])^<span class="number">2</span>)</span><br><span class="line"><span class="comment">## [1] 0.3946</span></span><br><span class="line">mean((ridge.pred - y[test])^<span class="number">2</span>)</span><br><span class="line"><span class="comment">## [1] 0.4239</span></span><br></pre></td></tr></table></figure><h4 id="关于glmnet包的使用"><a href="#关于glmnet包的使用" class="headerlink" title="关于glmnet包的使用"></a>关于glmnet包的使用</h4><ul><li>(1)glment（）和cv.glmnet()</li></ul><p>第一次用这个包的时候，我有个很蠢的问题，为什么有了cv.glmnet()还需要保留glmnet（）呢？ cv.glmnet()可以通过交叉验证得到（关于lambda的）最优的方程，但是就glment包来说仍然不是一个完美的结果，关于alpha的交叉验证依然需要使用者自己来完成（包的文档中给了点提示）。glmnet（）仍然需要保留，因为可以得到正则化的路径，因为算法的原因，coordinate descent 在选取极值上有随机性，路径在变量的选择中还是很重要的。</p><ul><li>(2)cv.glmnet() 中的lambda.min和lambda.1se</li></ul><p>lambda.min:   value of lambda that gives minimum cvm.</p><p>lambda.1se:   largest value of lambda such that error is within 1 standard error of the minimum.</p><p>关于这两个输出值的使用，似乎有点混乱。看了很多网上的讨论推荐使用lambda.1se的比较多，这样可以得到更简洁的模型。 涉及到所谓的1-SE rule。 “one standard error” rule to select the best model, i.e. selecting the most parsimonious model from the subset of models whose score is within one standard error of the best score.但是还有这样的说法：1se rule在低noise的时候才好用高noise的时候，有一两个fold的error很大，cv curve就会增长很快，导致选的lambda太大。</p><h1 id="14-glmnet-Vignettes-非常易读，有益理解"><a href="#14-glmnet-Vignettes-非常易读，有益理解" class="headerlink" title="14.glmnet Vignettes 非常易读，有益理解"></a>14.glmnet Vignettes 非常易读，有益理解</h1><p><a href="https://cran.r-project.org/web/packages/glmnet/vignettes/glmnet_beta.pdf" target="_blank" rel="noopener">https://cran.r-project.org/web/packages/glmnet/vignettes/glmnet_beta.pdf</a></p><p><a href="https://cran.r-project.org/web/packages/glmnet/vignettes/Coxnet.pdf" target="_blank" rel="noopener">https://cran.r-project.org/web/packages/glmnet/vignettes/Coxnet.pdf</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Cox 分层原理</title>
      <link href="/hexo/2017/09/13/2017-09-13-CoxModle_with_stratified/"/>
      <url>/hexo/2017/09/13/2017-09-13-CoxModle_with_stratified/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/Cox+Stratified.pdf">PPT</a></p><h1 id="首先理解为什么COX模型会对协变量分层处理？"><a href="#首先理解为什么COX模型会对协变量分层处理？" class="headerlink" title="首先理解为什么COX模型会对协变量分层处理？"></a>首先理解为什么COX模型会对协变量分层处理？</h1><p>需要分层的变量不满足PH假设，需要分层处理。</p><h1 id="如何确定-协变量不满足PH假设？"><a href="#如何确定-协变量不满足PH假设？" class="headerlink" title="如何确定 协变量不满足PH假设？"></a>如何确定 协变量不满足PH假设？</h1><p>首先对需要研究的协变量进行多协变量COX回归，挑出不满足PH假设的协变量</p><h1 id="Cross-validated-partial-likelihood-CVPL-for-the-Cox-model"><a href="#Cross-validated-partial-likelihood-CVPL-for-the-Cox-model" class="headerlink" title="Cross-validated partial likelihood (CVPL) for the Cox model"></a>Cross-validated partial likelihood (CVPL) for the Cox model</h1><p>cvpl {in Package survcomp} function</p><h1 id="…"><a href="#…" class="headerlink" title="…"></a>…</h1><p>如果得到一个Subtypes 信息，对subtype分层进行 协变量为 age的COX 回归。目的是研究在不同亚型内，age 是否为影响生存预后的重要因素。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>混淆矩阵(Confusion matrix)-ROC曲线-AUC(Area under Curve)</title>
      <link href="/hexo/2017/09/10/2017-09-10-ConfusionMatrix-ROC-AUC/"/>
      <url>/hexo/2017/09/10/2017-09-10-ConfusionMatrix-ROC-AUC/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>混淆矩阵（confusion matrix）是可视化工具，特别用于监督学习， _在无监督学习一般叫做匹配矩阵_ 。在图像精度评价中，主要用于比较分类结果和实际测得值，可以把分类结果的精度显示在一个混淆矩阵里面。混淆矩阵是通过将每个实测像元的位置和分类与分类图像中的相应位置和分类像比较计算的。</p><p>混淆矩阵的每一列代表了预测类别[1]  ，每一列的总数表示预测为该类别的数据的数目；每一行代表了数据的真实归属类别[1]  ，每一行的数据总数表示该类别的数据实例的数目。每一列中的数值表示真实数据被预测为该类的数目：如下图，第一行第一列中的43表示有43个实际归属第一类的实例被预测为第一类，同理，第二行第一列的2表示有2个实际归属为第二类的实例被错误预测为第一类。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">如有<span class="number">150</span>个样本数据，这些数据分成<span class="number">3</span>类，每类<span class="number">50</span>个。分类结束后得到的混淆矩阵为：</span><br><span class="line">                   预测</span><br><span class="line">              类<span class="number">1</span> 类<span class="number">2</span> 类<span class="number">3</span></span><br><span class="line">      类<span class="number">1</span>     <span class="number">43</span>   <span class="number">5</span>   <span class="number">2</span></span><br><span class="line">实际  类<span class="number">2</span>      <span class="number">2</span>   <span class="number">45</span>  <span class="number">3</span></span><br><span class="line">      类<span class="number">3</span>     <span class="number">0</span>    <span class="number">1</span>   <span class="number">49</span></span><br><span class="line">每一行之和为<span class="number">50</span>，表示<span class="number">50</span>个样本，</span><br><span class="line">第一行说明类<span class="number">1</span>的<span class="number">50</span>个样本有<span class="number">43</span>个分类正确，<span class="number">5</span>个错分为类<span class="number">2</span>，<span class="number">2</span>个错分为类<span class="number">3</span></span><br></pre></td></tr></table></figure><hr><p>另外一个例子 From:<a href="http://blog.csdn.net/vesper305/article/details/44927047" target="_blank" rel="noopener">http://blog.csdn.net/vesper305/article/details/44927047</a></p><p>假设有一个用来对猫（cats）、狗（dogs）、兔子（rabbits）进行分类的系统，混淆矩阵就是为了进一步分析性能而对该算法测试结果做出的总结。假设总共有 27 只动物：8只猫， 6条狗， 13只兔子。结果的混淆矩阵如下图：<br><img src="https://taoshengxu.github.io/DocumentGit/img/confusionmatrix0.png" alt=""></p><p>在这个混淆矩阵中，实际有 8只猫，但是系统将其中3只预测成了狗；对于 6条狗，其中有 1条被预测成了兔子，2条被预测成了猫。从混淆矩阵中我们可以看出系统对于区分猫和狗存在一些问题，但是区分兔子和其他动物的效果还是不错的。所有正确的预测结果都在对角线上，所以从混淆矩阵中可以很方便直观的看出哪里有错误，因为他们呈现在对角线外面。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/confusionmatrix1.png" alt=""></p><p>在预测分析中，混淆表格（有时候也称为混淆矩阵），是由false positives，false negatives，true positives和true negatives组成的两行两列的表格。它允许我们做出更多的分析，而不仅仅是局限在正确率。准确率对于分类器的性能分析来说，并不是一个很好地衡量指标，因为如果数据集不平衡（每一类的数据样本数量相差太大），很可能会出现误导性的结果。例如，如果在一个数据集中有95只猫，但是只有5条狗，那么某些分类器很可能偏向于将所有的样本预测成猫。整体准确率为95%，但是实际上该分类器对猫的识别率是100%，而对狗的识别率是0%。</p><hr><p>下面内容总结了假设检验的重要内容，清晰全面。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/confusionmatrix2.png" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/confusionmatrix3.png" alt=""></p><h1 id="ROC-曲线"><a href="#ROC-曲线" class="headerlink" title="ROC 曲线"></a>ROC 曲线</h1><p><strong>为什么使用Roc和Auc评价分类器</strong></p><p>ROC曲线和AUC常被用来评价一个二值分类器（binary classifier）的优劣。既然已经这么多标准，为什么还要使用ROC和AUC呢？因为ROC曲线有个很好的特性：当测试集中的正负样本的分布变换的时候，ROC曲线能够保持不变。在实际的数据集中经常会出现样本类不平衡，即正负样本比例差距较大，而且测试数据中的正负样本也可能随着时间变化。</p><p><strong>ROC曲线</strong>：接收者操作特征(receiveroperating characteristic),roc曲线上每个点反映着对同一信号刺激的感受性。</p><ul><li><p>横轴：负正类率(false postive rate FPR)，划分实例中所有负例占所有负例的比例；(1-Specificity)</p></li><li><p>纵轴：真正类率(true postive rate TPR)，Sensitivity(灵敏度)</p></li></ul><p>对于一个二分类问题，假设采用逻辑回归分类器，其给出针对每个实例为正类的概率，那么通过设定一个阈值如0.6，概率大于等于0.6的为正类，小于0.6的为负类。对应的就可以算出一组(FPR,TPR),在平面中得到对应坐标点。<strong>随着阈值的逐渐减小，越来越多的实例被划分为正类，但是这些正类中同样也掺杂着真正的负实例，即TPR和FPR会同时增大。阈值最大时，对应坐标点为(0,0),阈值最小时，对应坐标点(1,1)</strong>。通过调节不同的阀值，从而得到一条曲线。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/ROC.jpg" alt=""></p><ul><li><p>横轴FPR:1-TNR,1-Specificity，FPR越大，预测正类中实际负类越多。</p></li><li><p>纵轴TPR：Sensitivity(正类覆盖率),TPR越大，预测正类中实际正类越多。</p></li><li><p>理想目标：TPR=1，FPR=0,即图中(0,1)点，故ROC曲线越靠拢(0,1)点，越偏离45度对角线越好，Sensitivity、Specificity越大效果越好。</p></li></ul><h1 id="AUC-Area-under-Curve"><a href="#AUC-Area-under-Curve" class="headerlink" title="AUC(Area under Curve)"></a>AUC(Area under Curve)</h1><p>Roc曲线下的面积，介于0.5和1之间。Auc作为数值可以直观的评价分类器的好坏，值越大越好。</p><h1 id="R"><a href="#R" class="headerlink" title="R"></a>R</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">library(<span class="string">"pROC"</span>)</span><br><span class="line">data(aSAH)  </span><br><span class="line"><span class="comment"># Build a ROC object and compute the AUC, draw ROC, print AUC and the best THRESHOLDS  </span></span><br><span class="line">roc(aSAH<span class="variable">$outcome</span>, aSAH<span class="variable">$s100b</span>, <span class="attribute">plot</span>=<span class="literal">TRUE</span>, print.<span class="attribute">thres</span>=<span class="literal">TRUE</span>, print.<span class="attribute">auc</span>=<span class="literal">TRUE</span>)  </span><br><span class="line"></span><br><span class="line">roc1 &lt;- plot.roc(aSAH<span class="variable">$outcome</span>, aSAH<span class="variable">$s100</span>, <span class="attribute">main</span>=<span class="string">"Statistical comparison"</span>, <span class="attribute">percent</span>=<span class="literal">TRUE</span>, <span class="attribute">col</span>=<span class="string">"1"</span>)</span><br><span class="line">roc2 &lt;- lines.roc(aSAH<span class="variable">$outcome</span>, aSAH<span class="variable">$ndka</span>, <span class="attribute">percent</span>=<span class="literal">TRUE</span>, <span class="attribute">col</span>=<span class="string">"2"</span>)</span><br><span class="line">testobj&lt;- roc.test(roc1,roc2)</span><br><span class="line">text(50, 50, <span class="attribute">labels</span>=paste("p-value =<span class="string">", format.pval(testobj<span class="variable">$p</span>.value)), adj=c(0, .5))</span></span><br><span class="line"><span class="string">legend("</span>bottomright<span class="string">", legend=c("</span>S100B<span class="string">", "</span>NDKA<span class="string">"), col=c("</span>1<span class="string">", "</span>2<span class="string">"), lwd=2)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">r1=roc(vs~wt,mtcars)</span></span><br><span class="line"><span class="string">plot.roc(r1)</span></span><br><span class="line"><span class="string">r2=roc(vs~mpg,mtcars)</span></span><br><span class="line"><span class="string">lines.roc(r2,col='2')</span></span><br><span class="line"><span class="string">roc.test(r1,r2)</span></span><br></pre></td></tr></table></figure><hr><p>在学习<a href="http://bioconductor.org/packages/release/bioc/vignettes/genefu/inst/doc/genefu.pdf" target="_blank" rel="noopener">genefu包</a>时候遇到Confusion Matrix，有必要有个系统的学习和总结。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Fold Change 与火山图</title>
      <link href="/hexo/2017/09/09/2017-09-09-FoldChange/"/>
      <url>/hexo/2017/09/09/2017-09-09-FoldChange/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Fold-Change"><a href="#Fold-Change" class="headerlink" title="Fold Change"></a>Fold Change</h1><p>计算公式：样本平均值log2还原的比值</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/fold_change.jpg" alt=""></p><h1 id="火山图（Volcano-Plot）"><a href="#火山图（Volcano-Plot）" class="headerlink" title="火山图（Volcano Plot）"></a>火山图（Volcano Plot）</h1><p>火山图只存在于两分组样本比较中，并且有生物学重复(经过相同方式处理的相同样品)<br><img src="https://taoshengxu.github.io/DocumentGit/img/volcanoplot.jpg" alt=""></p><p>标准的火山图常用于展示显著差异表达的基因，这里有两个关键词：显著是指P&lt;&gt;差异表达一般我们按照Fold Change(倍数变化)&gt;=2.0作为标准。</p><p>当我们拿到基因表达的P值和倍数后，为了用火山图展示结果，一般需要把倍数进行Log2的转化，比如某基因在实验组表达水平是对照组的4倍，log2（4）=2，同样的如果是1/4，也就是0.25，转换后的结果就是-2。</p><p>同样的道理，对P值进行-log10的转化，-log10（0.05）约等于1.30103，由于P值越小表示越显著，所以我们进行-log10（P value）转化后，转化值越大表示差异约显著，比如-log10（0.001）=3  &gt;  -log10(0.01)=2 &gt;  -log10(0.05)=1.30。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/volcanoplot1.jpg" alt=""></p><p>在上面这个图中，横轴是log2（FC），纵轴是-log10（P value），每个点代表一个基因，平行于Y轴的两条线分别是X=1和X=-1，在X=-1左侧的点是下调2倍以上的基因，在X=1右侧的点是上调2倍以上的基因。同时，平行于X轴有一条虚线Y=1.30，即-log10(0.05），在虚线以上的点表示显著性.</p><p>这样，我们就把虚线Y=1.30以上，X=1右侧和X=-1左侧的基因标记为表达显著差异的基因，一般我们把大于2倍（X=1右侧）的点标记为红色，把小于-2（X=-1左侧）的点标记为绿色，一些我们特别关注的基因需要把基因名标记出来。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>GCBI 学院</title>
      <link href="/hexo/2017/09/09/2017-09-09-GCBI/"/>
      <url>/hexo/2017/09/09/2017-09-09-GCBI/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>GCBI学院里一些视频还是值得看看的,一直想看看一直忘记，记录在这里。 <a href="http://college.gcbi.com.cn/" target="_blank" rel="noopener">Here</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>ExpressionSet_SummarizedExperiment_GEOquery_biomaRt_S4</title>
      <link href="/hexo/2017/09/08/2017-09-08-ExpressionSet_SummarizedExperiment/"/>
      <url>/hexo/2017/09/08/2017-09-08-ExpressionSet_SummarizedExperiment/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="ExpressionSet"><a href="#ExpressionSet" class="headerlink" title="ExpressionSet"></a>ExpressionSet</h2><p>下面代码列举了ExpressionSet对象大部分常用函数的用法，ExpressionSet对象可以直接取pData()样本分组信息的列名的数据如 <code>ALL$sex</code></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/ExpressionSet.png" alt=""></p><ul><li>exprs() 表达谱数据</li><li>pData() 对象分组信息</li><li>sampleNames()</li><li>featureNames()</li><li>phenoData()</li><li>featureData()</li><li>experimentData()</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 非常全面的示例代码</span></span><br><span class="line"><span class="keyword">library</span>(ALL)</span><br><span class="line">data(ALL)</span><br><span class="line">experimentData(ALL)</span><br><span class="line">exprs(ALL)[<span class="number">1</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">head(sampleNames(ALL))</span><br><span class="line">head(featureNames(ALL))</span><br><span class="line">head(pData(ALL))</span><br><span class="line">ALL$sex</span><br><span class="line">ALL[<span class="number">1</span>:<span class="number">10</span>,<span class="number">1</span>:<span class="number">5</span>]</span><br><span class="line">featureData(ALL)<span class="comment">#包含关于基因的信息，但是经常没有</span></span><br><span class="line">ids &lt;- featureNames(ALL)[<span class="number">1</span>:<span class="number">5</span>]</span><br><span class="line"><span class="keyword">library</span>(hgu95av2.db)<span class="comment">#之前数据集里面写了芯片平台hgu95av2.db</span></span><br><span class="line">as.list(hgu95av2ENTREZID[ids])</span><br><span class="line">phenoData(ALL)<span class="comment">#不如使用pData(ALL),phenoData(ALL)内容更多些</span></span><br><span class="line">names(pData(ALL))<span class="comment">#有时相当于varLabels(ALL),有时varLabels(ALL)更详细</span></span><br></pre></td></tr></table></figure><h2 id="SummarizedExperiment"><a href="#SummarizedExperiment" class="headerlink" title="SummarizedExperiment"></a>SummarizedExperiment</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">library(airway)</span><br><span class="line">data(<span class="string">"airway"</span>)</span><br><span class="line">airway</span><br><span class="line">colData(airway)<span class="comment">#pData(ALL)</span></span><br><span class="line">airway$cell</span><br><span class="line">colnames(airway)</span><br><span class="line">head(rownames(airway))</span><br><span class="line">assayNames(airway)<span class="comment">#要想获得表达矩阵,使用assay accessor,用assayNames()获得全部表达矩阵名</span></span><br><span class="line">assay(airway,<span class="string">"counts"</span>)[<span class="number">1</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line"><span class="built_in">length</span>(rowRanges(airway))</span><br><span class="line">rowRanges(airway)<span class="comment">#SummarizedExperiment特别之处在于每行每列都有关联的GRanges</span></span><br><span class="line"><span class="built_in">start</span>(airway)</span><br><span class="line">gr = GRanges(<span class="string">"1"</span>,ranges = IRanges(<span class="built_in">start</span> = <span class="number">1</span>,<span class="function"><span class="keyword">end</span> = <span class="title">10</span>^<span class="title">7</span>))</span></span><br><span class="line">subsetByOverlaps(airway,gr)</span><br><span class="line"><span class="comment">#'正是有着关联GRanges,可以取出染色体"某一区域内"基因的表达值</span></span><br></pre></td></tr></table></figure><h2 id="GEOquery"><a href="#GEOquery" class="headerlink" title="GEOquery"></a>GEOquery</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">library</span><span class="params">(GEOquery)</span></span></span><br><span class="line">eList &lt;- getGEO(<span class="string">"GSE11675"</span>)</span><br><span class="line"><span class="function"><span class="title">length</span><span class="params">(eList)</span></span></span><br><span class="line">eData = eList[[<span class="number">1</span>]]</span><br><span class="line">eData</span><br><span class="line"><span class="function"><span class="title">names</span><span class="params">(pData(eData)</span></span>)</span><br><span class="line">eList2 = getGEOSuppFiles(<span class="string">"GSE11675"</span>)#下载原始tar包</span><br><span class="line">eList2</span><br></pre></td></tr></table></figure><h2 id="biomaRt"><a href="#biomaRt" class="headerlink" title="biomaRt"></a>biomaRt</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">library</span><span class="params">(biomaRt)</span></span></span><br><span class="line"><span class="function"><span class="title">head</span><span class="params">(listMarts()</span></span>)</span><br><span class="line">mart &lt;- useMart(<span class="string">"ensembl"</span>)</span><br><span class="line">mart</span><br><span class="line"><span class="function"><span class="title">head</span><span class="params">(listDatasets(mart)</span></span>)</span><br><span class="line">ensemble &lt;- useDataset(<span class="string">"hsapiens_gene_ensembl"</span>,mart)</span><br><span class="line">values &lt;- c(<span class="string">"202763_at"</span>,<span class="string">"209310_s_at"</span>,<span class="string">"207500_at"</span>)</span><br><span class="line"><span class="function"><span class="title">getBM</span><span class="params">(attributes = c(<span class="string">"ensembl_gene_id"</span>,<span class="string">"affy_hg_u133_plus_2"</span>)</span></span>,</span><br><span class="line">      filters = <span class="string">"affy_hg_u133_plus_2"</span>,values = values,mart = ensemble)</span><br><span class="line">attributes &lt;- listAttributes(ensemble)#可以查询到的条目</span><br><span class="line"><span class="function"><span class="title">nrow</span><span class="params">(attributes)</span></span>#可以把一个物种的基因转换到另一个物种的同源基因</span><br><span class="line"><span class="function"><span class="title">head</span><span class="params">(attributes)</span></span></span><br><span class="line">filters &lt;- listFilters(ensemble)#可以查询到的条目</span><br><span class="line"><span class="function"><span class="title">nrow</span><span class="params">(filters)</span></span>#可以把一个物种的基因转换到另一个物种的同源基因</span><br><span class="line"><span class="function"><span class="title">head</span><span class="params">(filters)</span></span></span><br><span class="line"><span class="function"><span class="title">attributePages</span><span class="params">(ensemble)</span></span>#attributes存储在一个一个page中,可以用这个减小搜索范围</span><br><span class="line">attributes &lt;- listAttributes(ensemble,page = <span class="string">"feature_page"</span>)</span><br><span class="line"><span class="function"><span class="title">nrow</span><span class="params">(attributes)</span></span></span><br></pre></td></tr></table></figure><h2 id="R-S4-Classes"><a href="#R-S4-Classes" class="headerlink" title="R S4 Classes"></a>R S4 Classes</h2><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">library(ALL)</span><br><span class="line">library(GenomicRanges)</span><br><span class="line">#<span class="string">'S3对象就是像一个list,list中每个对象都有各自的name</span></span><br><span class="line"><span class="string">#'</span>而S4对象定义了每个<span class="class"><span class="keyword">class</span>应该是有些什么东西</span></span><br><span class="line">data(<span class="string">"ALL"</span>)</span><br><span class="line">ALL</span><br><span class="line"><span class="class"><span class="keyword">class</span>(<span class="title">ALL</span>)</span></span><br><span class="line">isS4(ALL)</span><br><span class="line"><span class="class"><span class="keyword">class</span>?<span class="title">ExpressionSet</span>#查看一个<span class="title">class</span>的简介</span></span><br><span class="line">?<span class="string">"ExpressionSet-class"</span>#查看一个<span class="class"><span class="keyword">class</span>的简介</span></span><br><span class="line">#<span class="string">'list的规则:首字母大写</span></span><br><span class="line"><span class="string">#'</span>构造方法</span><br><span class="line">ExpressionSet()</span><br><span class="line">getClass(<span class="string">"ExpressionSet"</span>)#Slots插槽,就是这个<span class="class"><span class="keyword">class</span>由哪儿些小<span class="title">class</span>构成</span></span><br><span class="line">ALL@annotation</span><br><span class="line">annotation(ALL)</span><br><span class="line">#<span class="class"><span class="keyword">class</span>升级了,定义改变了,用<span class="title">updateObject</span></span></span><br><span class="line">OLD_OBJECT = updateObject(OLD_OBJECT)</span><br><span class="line">validObject(ALL)#检测对象是否正确,是否符合<span class="class"><span class="keyword">class</span>的定义</span></span><br></pre></td></tr></table></figure><h2 id="R-S4-Methods"><a href="#R-S4-Methods" class="headerlink" title="R S4 Methods"></a>R S4 Methods</h2><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">library(<span class="type">GenomicRanges</span>)</span><br><span class="line"><span class="type">GenomicRanges</span>::<span class="keyword">as</span>.data.frame<span class="comment">#S4方法</span></span><br><span class="line">base::<span class="keyword">as</span>.data.frame<span class="comment">#S3方法</span></span><br><span class="line">showMethods(<span class="string">"as.data.frame"</span>)<span class="comment">#可以看见,X类型不同,后续选用的程序代码也不同</span></span><br><span class="line"><span class="comment">#查看传入某一特定类型，对应的相关程序代码</span></span><br><span class="line">getMethod(<span class="string">"as.data.frame"</span>,<span class="string">"GenomicRanges"</span>)</span><br><span class="line">getMethod(<span class="string">"as.data.frame"</span>,signature(x=<span class="string">"GenomicRanges"</span>))</span><br><span class="line"><span class="comment">#查看传入某一特定类型，对应的帮助文档</span></span><br><span class="line"><span class="keyword">method</span>?<span class="string">"as.data.frame,DataFrame"</span></span><br><span class="line"><span class="keyword">method</span>?<span class="string">"as.data.frame,GenomicRanges"</span></span><br><span class="line">?<span class="string">"as.data.frame,DataFrame-method"</span></span><br><span class="line">?<span class="string">"as.data.frame,GenomicRanges-method"</span></span><br><span class="line">showMethods(<span class="string">"findOverlaps"</span>)</span><br><span class="line">getMethod(<span class="string">"findOverlaps"</span>,signature(query = <span class="string">"Ranges"</span>,subject = <span class="string">"Ranges"</span>))</span><br><span class="line">?<span class="string">"findOverlaps,Ranges,Ranges-method"</span></span><br><span class="line"><span class="comment">#'S4缺点:难以找到help文档,难以直接看源代码,难以debug</span></span><br><span class="line"><span class="comment">#'但是最好S4写一个package,方便管理</span></span><br></pre></td></tr></table></figure><hr><p>作者：wangyunpeng_bio<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/qq_29300341/article/details/77009100" target="_blank" rel="noopener">https://blog.csdn.net/qq_29300341/article/details/77009100</a><br>版权声明：本文为博主原创文章，转载请附上博文链接！</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>ExpressionSet简单讲解</title>
      <link href="/hexo/2017/09/08/2017-09-08-ExpressionSet/"/>
      <url>/hexo/2017/09/08/2017-09-08-ExpressionSet/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>From 生信菜鸟团 <a href="http://www.bio-info-trainee.com/1510.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/1510.html</a></p><hr><p><strong>ExpressionSet对象其实是对表达矩阵加上样本分组信息的一个封装，由Biobase这个包引入。它是eSet这个对象的继承。</strong>属性基本和eSet保持一致。</p><h4 id="重点就是-exprs-函数提取表达矩阵，pData-函数看看该对象的样本分组信息。"><a href="#重点就是-exprs-函数提取表达矩阵，pData-函数看看该对象的样本分组信息。" class="headerlink" title="重点就是 exprs 函数提取表达矩阵，pData 函数看看该对象的样本分组信息。"></a>重点就是 <strong><code>exprs</code> 函数提取表达矩阵</strong>，<strong><code>pData</code> 函数看看该对象的样本分组信息</strong>。</h4><p>在Biobase基础包中，ExpressionSet是非常重要的类，因为Bioconductor设计之初是为了对基因芯片数据进行分析，而ExpressionSet正是Bioconductor为基因表达数据格式所定制的标准。它是所有涉及基因表达量相关数据在Bioconductor中进行操作的基础数据类型，比如affyPLM, affy, oligo, limma, arrayMagic等等。所以当我们学习Bioconductor时，第一个任务就是了解并掌握ExpressionSet的一切。</p><h2 id="ExpressionSet的组成："><a href="#ExpressionSet的组成：" class="headerlink" title="ExpressionSet的组成："></a>ExpressionSet的组成：</h2><ul><li><p><strong>assayData</strong>: 一个matrix类型或者environment类型数据。用于保存表达数据值。<br>当它是一个matrix时，它的行表示不同的探针组（probe sets）（也是features，总之是一个无重复的索引值）的值，它的列表示不同的样品。如果有行号或者列号的话，那么行号必须与featureData及phenoData中的行号一致，列号就是样品名。当我们使用<code>exprs()</code>方法时，就是调取的这个assayData的matrix。<br>当它是一个enviroment时，它必须有两个变量，一个就是与上一段描述一致的matrix，另一个就是epxrs，而这个exprs会响应exprs()方法，返回表达值。</p></li><li><p><strong>头文件</strong>：用于描述实验平台相关的数据，其中包括phenoData, featureData，protocolData以及annotation等等。其中<br><strong>phenoData</strong>是一个存放样品信息的data.frame或者AnnotatedDataFrame类型的数据。如果有行号的话，其行号必须与assayData的列号一致（也就是样品名）。如果没有行号，则其行数必须与assayData的列数一致。<br><strong>featureData</strong>是一个存放features的data.frame或者AnnotatedDataFrame类型的数据。它的行数必须与assayData的行数一致。如果有行号的话，那么它的行号必须和assayData的行号一致。<br><strong>annotation</strong>是用于存放芯片类型的字符串，比如hgu95av2之类。<br><strong>protocolData</strong>用于存放设备相当的数据。它是AnnotatedDataFrame类型。它的维度必须与assayData的维度一致。</p></li><li><p><strong>experimentData</strong>: 一个MIAME类型的数据，它用于保存和实验设计相关的资料，比如实验室名，发表的文章，等等。那么什么是MIAME类呢？MIAME是Minimum Information About a Microarray Experiment的首字母缩写，它包括以下一些属性（slots）：</p><ol><li>name: 字符串，实验名称</li><li>lab: 字符串，实验室名称</li><li>contact: 字符串，联系方式</li><li>title: 字符串，一句话描述实验的内容</li><li>abstract: 字符串，实验摘要</li><li>url: 字符串，实验相关的网址</li><li>samples: list类，样品的信息</li><li>hybridizations: list类，杂交的信息</li><li>normControls: list类，对照信息，比如一些持家基因（house keeping genes）</li><li>preprocessing: list类，原始数据的预处理过程</li><li>pubMedIds: 字符串，pubMed索引号</li><li>others: list类，其它相关的信息</li></ol><p>有了这些，所有实验相关的信息基本全备。</p></li></ul><p>那么，对于一个ExpressionSet，哪些属性是必须的？哪些有可能缺失呢？很显然，assayData是必须的，其它的可能会缺失，但是不能都缺失，因为那样的话就无法完成数据分析的工作。</p><h2 id="一个现成例子"><a href="#一个现成例子" class="headerlink" title="一个现成例子"></a>一个现成例子</h2><blockquote><p>下面是一个具体的例子，来源于CLL这个包，是用hgu95av2芯片测了22个样本</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(CLL)</span><br><span class="line">data(sCLLex)</span><br><span class="line">sCLLex</span><br><span class="line"></span><br><span class="line">ExpressionSet (storageMode: lockedEnvironment)</span><br><span class="line">assayData: <span class="number">12625</span> features, <span class="number">22</span> samples  <span class="comment">##表达矩阵</span></span><br><span class="line">  element names: exprs </span><br><span class="line">protocolData: none</span><br><span class="line">phenoData</span><br><span class="line">  sampleNames: CLL11.CEL CLL12.CEL <span class="keyword">...</span> CLL9.CEL (<span class="number">22</span> total)</span><br><span class="line">  varLabels: SampleID Disease   <span class="comment">## 样本分组信息</span></span><br><span class="line">  varMetadata: labelDescription</span><br><span class="line">featureData: none</span><br><span class="line">experimentData: use <span class="string">'experimentData(object)'</span></span><br><span class="line">Annotation: hgu95av2</span><br><span class="line"></span><br><span class="line">&gt; exprMatrix=exprs(sCLLex)</span><br><span class="line">&gt; dim(exprMatrix)</span><br><span class="line">[<span class="number">1</span>] <span class="number">12625</span>    <span class="number">22</span></span><br><span class="line">&gt; meta=pData(sCLLex)</span><br><span class="line">&gt; table(meta$Disease)</span><br><span class="line"></span><br><span class="line">progres.   stable </span><br><span class="line">      <span class="number">14</span>        <span class="number">8</span> </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><pre><code>根据上面的信息可以看出该芯片共12625个探针，这22个样本根据疾病状态分成两组，14vs8这个数据对象就可以打包做很多包的分析输入数据。</code></pre><h2 id="limma等包使用该对象作为输入数据"><a href="#limma等包使用该对象作为输入数据" class="headerlink" title="limma等包使用该对象作为输入数据"></a>limma等包使用该对象作为输入数据</h2><blockquote><p>下面这个例子充分说明了 <code>ExpressionSet</code> 对象的重要性</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(limma)</span><br><span class="line">&gt; design=model.matrix(~factor(sCLLex$Disease))</span><br><span class="line">&gt; fit=lmFit(sCLLex,design)</span><br><span class="line">&gt; fit=eBayes(fit)</span><br><span class="line">&gt; options(digits = <span class="number">4</span>)</span><br><span class="line">&gt; topTable(fit,coef=<span class="number">2</span>,adjust=<span class="string">'BH'</span>)</span><br><span class="line">           logFC AveExpr      t   P.Value adj.P.Val     B</span><br><span class="line">39400_at  <span class="number">1.0285</span>   <span class="number">5.621</span>  <span class="number">5.836</span> <span class="number">8.341e-06</span>   <span class="number">0.03344</span> <span class="number">3.234</span></span><br><span class="line">36131_at -<span class="number">0.9888</span>   <span class="number">9.954</span> -<span class="number">5.772</span> <span class="number">9.668e-06</span>   <span class="number">0.03344</span> <span class="number">3.117</span></span><br><span class="line">33791_at -<span class="number">1.8302</span>   <span class="number">6.951</span> -<span class="number">5.736</span> <span class="number">1.049e-05</span>   <span class="number">0.03344</span> <span class="number">3.052</span></span><br><span class="line">1303_at   <span class="number">1.3836</span>   <span class="number">4.463</span>  <span class="number">5.732</span> <span class="number">1.060e-05</span>   <span class="number">0.03344</span> <span class="number">3.044</span></span><br><span class="line">36122_at -<span class="number">0.7801</span>   <span class="number">7.260</span> -<span class="number">5.141</span> <span class="number">4.206e-05</span>   <span class="number">0.10619</span> <span class="number">1.935</span></span><br><span class="line">36939_at -<span class="number">2.5472</span>   <span class="number">6.915</span> -<span class="number">5.038</span> <span class="number">5.362e-05</span>   <span class="number">0.11283</span> <span class="number">1.737</span></span><br><span class="line">41398_at  <span class="number">0.5187</span>   <span class="number">7.602</span>  <span class="number">4.879</span> <span class="number">7.824e-05</span>   <span class="number">0.11520</span> <span class="number">1.428</span></span><br><span class="line">32599_at  <span class="number">0.8544</span>   <span class="number">5.746</span>  <span class="number">4.859</span> <span class="number">8.207e-05</span>   <span class="number">0.11520</span> <span class="number">1.389</span></span><br><span class="line">36129_at  <span class="number">0.9161</span>   <span class="number">8.209</span>  <span class="number">4.859</span> <span class="number">8.212e-05</span>   <span class="number">0.11520</span> <span class="number">1.389</span></span><br><span class="line">37636_at -<span class="number">1.6868</span>   <span class="number">5.697</span> -<span class="number">4.804</span> <span class="number">9.355e-05</span>   <span class="number">0.11811</span> <span class="number">1.282</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>还有非常多的其它包会使用 <code>ExpressionSet</code> 对象，我就不一一介绍了。</p><h2 id="自己构造-ExpressionSet-对象"><a href="#自己构造-ExpressionSet-对象" class="headerlink" title="自己构造 ExpressionSet 对象"></a>自己构造 <code>ExpressionSet</code> 对象</h2><blockquote><p>根据上面的讲解，我们知道了在这个对象其实很简单，就是对表达矩阵加上样本分组信息的一个封装。<br>所以我们就用上面得到的exprMatrix和meta来构建一个ExpressionSet对象，biobase包里面提供了详细的说明,建议大家仔细看官方手册</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">metadata &lt;- data.frame(labelDescription=c(<span class="string">'SampleID'</span>, <span class="string">'Disease'</span>),</span><br><span class="line">                   row.names=c(<span class="string">'SampleID'</span>, <span class="string">'Disease'</span>))</span><br><span class="line">phenoData &lt;- new(<span class="string">"AnnotatedDataFrame"</span>,data=meta,varMetadata=metadata)</span><br><span class="line">myExpressionSet &lt;- ExpressionSet(assayData=exprMatrix,</span><br><span class="line">                                 phenoData=phenoData,</span><br><span class="line">                                 annotation=<span class="string">"hgu95av2"</span>)</span><br><span class="line">&gt; myExpressionSet</span><br><span class="line">ExpressionSet (storageMode: lockedEnvironment)</span><br><span class="line">assayData: <span class="number">12625</span> features, <span class="number">22</span> samples </span><br><span class="line">  element names: exprs </span><br><span class="line">protocolData: none</span><br><span class="line">phenoData</span><br><span class="line">  sampleNames: CLL11.CEL CLL12.CEL <span class="keyword">...</span> CLL9.CEL (<span class="number">22</span> total)</span><br><span class="line">  varLabels: SampleID Disease</span><br><span class="line">  varMetadata: labelDescription</span><br><span class="line">featureData: none</span><br><span class="line">experimentData: use <span class="string">'experimentData(object)'</span></span><br><span class="line">Annotation: hgu95av2 </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><blockquote><p>从上面的构造过程可以看出，重点就是表达矩阵加上样本分组信息</p></blockquote><h2 id="其它例子"><a href="#其它例子" class="headerlink" title="其它例子"></a>其它例子</h2><h3 id="ALL包的数据自带-ExpressionSet-对象"><a href="#ALL包的数据自带-ExpressionSet-对象" class="headerlink" title="ALL包的数据自带 ExpressionSet 对象"></a>ALL包的数据自带 <code>ExpressionSet</code> 对象</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ALL)</span><br><span class="line">data(ALL)</span><br><span class="line">ALL</span><br><span class="line"></span><br><span class="line">ExpressionSet (storageMode: lockedEnvironment)</span><br><span class="line">assayData: <span class="number">12625</span> features, <span class="number">128</span> samples</span><br><span class="line">    element names: exprs</span><br><span class="line">protocolData: none</span><br><span class="line">phenoData</span><br><span class="line">    sampleNames: <span class="number">01005</span> <span class="number">01010</span> … LAL4 (<span class="number">128</span> total)</span><br><span class="line">    varLabels: cod diagnosis … date last seen (<span class="number">21</span> total)</span><br><span class="line">    varMetadata: labelDescription</span><br><span class="line">featureData: none</span><br><span class="line">experimentData: use ‘experimentData(object)’</span><br><span class="line">pubMedIds: <span class="number">14684422</span> <span class="number">16243790</span> </span><br><span class="line">Annotation: hgu95av2</span><br></pre></td></tr></table></figure><p>这个数据非常出名，很多其它算法包都会拿这个数据来举例子，只有真正理解了ExpressionSet对象才能学会bioconductor系列包 </p><h2 id="用GEOquery包来下载得到-ExpressionSet-对象"><a href="#用GEOquery包来下载得到-ExpressionSet-对象" class="headerlink" title="用GEOquery包来下载得到 ExpressionSet 对象"></a>用GEOquery包来下载得到 <code>ExpressionSet</code> 对象</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gse1009=GEOquery::getGEO(<span class="string">"GSE1009"</span>)</span><br><span class="line">gse1009[[<span class="number">1</span>]] <span class="comment">## 这就是ExpressionSet对象</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>生存曲线美化</title>
      <link href="/hexo/2017/09/07/2017-09-07-BeautySurvCurves/"/>
      <url>/hexo/2017/09/07/2017-09-07-BeautySurvCurves/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>好久以前在微信里看到这个文章。今天整理用rmarkdonw整理在这里，以后更新的我的包里。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIyMDUwOTQwNA==&amp;mid=2247483665&amp;idx=1&amp;sn=05469909bf70e234fb71a3653e51ba8b&amp;scene=23&amp;srcid=072848z8s1DucjVqpZDqAYTu#rd" target="_blank" rel="noopener">原文</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">library(survival)</span><br><span class="line">library(ggplot2)</span><br><span class="line">library(survminer)</span><br><span class="line"># 载入数据</span><br><span class="line">#使用Surv（）函数建立基本生存对象</span><br><span class="line">fit&lt;- survfit(Surv(time, status) ~ sex, data = lung)</span><br><span class="line">summary(fit) #查看结果</span><br><span class="line">#使用survminer程序包ggsurvplot（）函数绘制生存曲线</span><br><span class="line">#简单绘图</span><br><span class="line">ggsurvplot(fit)</span><br><span class="line">#分生存曲线下面给出number.at risk</span><br><span class="line">ggsurvplot(fit,risk.table=TRUE)</span><br><span class="line">#添加log-rank检验p-value</span><br><span class="line">ggsurvplot(fit,risk.table=TRUE,pval=TRUE)</span><br><span class="line">#添加置信区间带</span><br><span class="line">ggsurvplot(fit,risk.table=TRUE,conf.int=TRUE,pval=TRUE)</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>GSEA富集分析</title>
      <link href="/hexo/2017/09/07/2017-09-07-GSEAstudy/"/>
      <url>/hexo/2017/09/07/2017-09-07-GSEAstudy/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>富集是将基因根据一些先验的知识（也就是常见的注释）进行分类的过程。我们一般会想到最常见的是GO/KEGG富集，其思路是先筛选差异基因，然后确定这些差异基因的GO/KEGG注释，然后通过超几何分布计算出哪些通路富集到了，通常会选择一个阈值来卡一下，比如p值和FDR等。因此这会涉及到人为的阈值选择，具有一定的主观性，而且只能用于差异较大的基因，所以结果可能有一定的局限性。</p><p>GSEA（Gene Set Enrichment Analysis），其思路是发表于2005年的<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1239896/" target="_blank" rel="noopener">Gene set enrichment analysis: a knowledge-based approach for interpreting genome-wide expression profiles</a>，</p><p>主要是要有两个概念：</p><p><strong><code>预先定义的基因集S（基于先验知识的基因注释信息）</code>和<code>待测排序基因集L（一般是表达矩阵）</code>；然后GSEA目的就是为了判断S基因集中的基因是随机分布于L（排序后的数据集），还是聚集分布在L的顶部或者底部（这也就是富集）。如果待测基因集中的某些基因显著富集在L的顶部或者底部，这说明这些基因的表达（因为其是根据表达谱数据）对你定义的分组（预先分组，表型）的差异有显著影响（一致性），从而找到我们关注的基因集。待测基因集的排序依据是其在不同表型状态下的表达差异。</strong>从而衡量基因全局表达量的变化是否有某些特定的基因集合的倾向性。</p><p>给定一个排序的基因表L和一个预先定义的基因集S (比如编码某个代谢通路的产物的基因, 基因组上物理位置相近的基因，或同一GO注释下的基因)，GSEA的目的是判断S里面的成员s在L里面是随机分布还是主要聚集在L的顶部或底部。这些基因排序的依据是其在不同表型状态下的表达差异，若研究的基因集S的成员显著聚集在L的顶部或底部，则说明此基因集成员对表型的差异有贡献，也是我们关注的基因集。</p><p>在富集分析的理论中，GSEA可以认为是第二代，即Functional Class Scoring (FCS) Approaches。GSEA（Gene Set Enrichment Analysis）方法是目前在pathway analysis方法中的state of the art.</p><h1 id="GSEA"><a href="#GSEA" class="headerlink" title="GSEA"></a>GSEA</h1><p>Gene Set Enrichment Analysis <strong>(基因集富集分析)用来评估一个预先定义的基因集的基因 在与表型相关度排序的基因表中的分布趋势，从而判断其对表型的贡献</strong>。软件会对基因根据其于表型的关联度(可以理解为表达值的变化)从大到小排序，然后判断基因集内每条注释下的基因是否富集于表型相关度排序后基因表的上部或下部，从而判断此基因集内基因的协同变化对表型变化的影响。</p><p>输入数据包含两部分:</p><ul><li>已知功能的基因集 (可以是GO注释、MsigDB的注释或其它符合格式的基因集定义)</li><li>表达矩阵</li></ul><p>The gene sets are defined based on prior biological knowledge, e.g., published information about biochemical pathways or coexpression in previous experiments. The goal of GSEA is to determine whether members of a gene set S tend to occur toward the top (or bottom) of the list L, in which case the gene set is correlated with the phenotypic class distinction.</p><p>这与GO富集分析不同。GO富集分析是先筛选差异基因，再判断差异基因在哪些注释的通路存在富集；这涉及到阈值的设定，存在一定主观性并且只能用于表达变化较大的基因，即我们定义的显著差异基因。而GSEA则不局限于差异基因，从基因集的富集角度出发，理论上更容易囊括细微但协调性的变化对生物通路的影响。</p><h1 id="GSEA原理"><a href="#GSEA原理" class="headerlink" title="GSEA原理"></a>GSEA原理</h1><p>GSEA计算中几个关键概念：</p><ol><li><strong>样本表型(phenotypes)：</strong>即为样本分组信息，表达矩阵的基因排序是根据该基因在两个group之间的差异来排序！GSEA会根据Signal2Noise metric 来对基因进行排序。值得注意的是如果要想计算Signal2Noise ，每个group必须要有3个及以上的samples.</li><li><strong>富集得分 (ES, enrichment score)</strong>. ES反应基因集成员s在排序列表L的两端富集的程度。计算方式是，从基因集L的第一个基因开始，计算一个累计统计值。当遇到一个落在s里面的基因，则增加统计值。遇到一个不在s里面的基因，则降低统计值。每一步统计值增加或减少的幅度与基因的表达变化程度（更严格的是与基因和表型的关联度）是相关的。富集得分ES最后定义为最大的峰值。正值ES表示基因集在列表的顶部富集，负值ES表示基因集在列表的底部富集。</li><li>评估富集得分(ES)的显著性。通过基于表型而不改变基因之间关系的排列检验 (permutation test)计算观察到的富集得分(ES)出现的可能性。若样品量少，也可基于基因集做排列检验 (permutation test)，计算p-value。</li><li>多重假设检验矫正。首先对每个基因子集s计算得到的ES根据基因集的大小进行标准化得到Normalized Enrichment Score (NES)。随后针对NES计算假阳性率。（计算NES也有另外一种方法，是计算出的ES除以排列检验得到的所有ES的平均值）</li></ol><ol><li>Leading-edge subset，对富集得分贡献最大的基因成员。</li></ol><h1 id="GSEA分析-软件界面操作"><a href="#GSEA分析-软件界面操作" class="headerlink" title="GSEA分析- 软件界面操作"></a>GSEA分析- 软件界面操作</h1><p><a href="https://blog.csdn.net/qazplm12_3/article/details/78561937" target="_blank" rel="noopener">https://blog.csdn.net/qazplm12_3/article/details/78561937</a></p><p><a href="https://taoshengxu.github.io/DocumentGit/pdf/GSEA富集分析_界面操作.pdf">pdf文档</a></p><h1 id="ES图"><a href="#ES图" class="headerlink" title="ES图"></a>ES图</h1><ol><li><p>中间从红色到蓝色的过渡“带”表示基因从上调到下调排列（排序可以按照fold change,也可以是p-value)。</p></li><li><p>黑色像条形码的竖线表示该位置的基因属于某个指定通路。</p></li><li><p>绿色有波动的曲线表示富集分数，从0开始计算，属于基因通路增加，不属于则减少。</p></li><li><p>最后看下黑色的条形码是不是富集在一端。</p></li></ol><p>   <strong>示例说明：</strong></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GSEA.png" alt=""></p><p><strong>红蓝颜色条</strong></p><p><em>设定一个衡量差异表达程度的统计量，简单起见用log Fold Change，来把基因排序。上面那个颜色条就表示一共有17425个基因表达，下方数字表示该处对应的基因所在的序号，红色到蓝色，表示从上调到下调。</em></p><p><strong>黑色的杠杠</strong></p><p><em>表示在该位置处的基因属于Myc靶基因，那一共就是有188个杠杠。颜色条上方有个数字9109，它表示这这里，基因表达从上调转变成下调。那个位置颜色是白色的，也就是说，倍数差异接近0了。</em></p><p><strong>深绿色曲线</strong>:</p><p>在GSEA这个检验里面，我们实际上就是在检验上面颜色条里黑色的杠杠，是否有往颜色条一端富集的趋势。<br>实际在做这个检验时，我们是从红色的序号为1的基因出发到蓝色的序号为17425的基因，这个过程中，遍历每一个基因，每次都查看下当前基因是否是Myc靶基因，如果是，则累加一点分数，否，则扣掉一点分数。这个分数的轨迹就是ES曲线。</p><h3 id="显著性检验"><a href="#显著性检验" class="headerlink" title="显著性检验"></a>显著性检验</h3><p>统计假设检验的本质就是先生成一个零假设的数据分布，然后观察实际数据在这个零假设分布下，是不是在尾端。好了，我们把这句话具现到我们这个GSEA的例子中来。我们有三种方式：</p><ol><li>颜色条不动它，把黑色的杠杠，从颜色条上拿起来，然后再随机的放到颜色条上</li><li>把样本的分组打乱，随机分组，重新计算排序统计量，然后排序</li><li>即做1，又做2</li></ol><p>第一种方式，对算力要求最低，对样本容量没有要求，但是不考虑基因间的相关性，可能导致一定的假阳性。第二种方式，对算力要求较高，要求一定的样本容量（每组重复数）以保证有效置换次数，可以保持基因间的协方差结构，但power会略低。第三种方式，算力要求最高。<br>这里假设我们随便选一种方式，重排一次以后，可以按照原先绘制绿色曲线的方法绘制一条新的曲线（零假设的数据），重复这个过程千万次的话，就可以比较精确的得到零假设的覆盖区域了，求取这个阴影的第5到95百分位数的区间，即可绘出结果图中的浅灰色阴影了。<br>这样统计检验的显著性，就可视化成为观察绿色曲线与灰色阴影的偏离程度了。绿色曲线离x轴最大的偏离值即为该检验的Enrichment Score (ES)，把它对Myc靶基因的数量再校正一下，就可以得到 Normalized Enrichment Score (NES)。这里我们看下结果，非常显著，这个节奏和刚才用Fisher ‘s exact test的结果，明显不一样，这又是为什么呢？<br>请仔细观察GSEA结果图里，排序统计量和颜色条上黑杠杠的分布。可以发现，绝大部分的Myc靶基因，分布在浅蓝色区域，即绝大部分Myc靶基因都是下调，但是只是微弱的下调，所以它们没有在Fisher exact test中被计入为差异基因。</p><p>作者：hoptop<br>链接：<a href="http://www.jianshu.com/p/199b44974480" target="_blank" rel="noopener">http://www.jianshu.com/p/199b44974480</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><hr><h2 id="另一个生信技能树的例子"><a href="#另一个生信技能树的例子" class="headerlink" title="另一个生信技能树的例子"></a>另一个生信技能树的例子</h2><p><a href="https://vip.biotrainee.com/d/345-gsea-r" target="_blank" rel="noopener">https://vip.biotrainee.com/d/345-gsea-r</a></p><p>假设芯片测到了2万个基因，这两万个基因在case和control组的差异度量(六种差异度量，默认是signal 2 noise，GSEA官网有提供公式，也可以选择大家熟悉的foldchange)肯定不一样,那么根据它们的差异度量，就可以对它们进行排序，并且Z-score标准化，在ES图的最底端展示的就是signal2noise, 红蓝色条就是signal2noise值的热图。</p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GSEA_1.png" alt=""></p><p><strong>图中间部分黑色竖条码，就是我们每个gene set里面的基因在所有的2万个排序好基因的位置，如果gene set里面的基因集中在2万个基因的前面部分，就是在case组里面富集，如果集中在后面部分，就是在control组里面富集。</strong></p><p><strong>最上面图的ES score</strong></p><p><img src="https://taoshengxu.github.io/DocumentGit/img/GSEA_2.png" alt=""></p><p>每个基因在每个gene set里面的ES score取决于这个基因是否属于该gene set，还有就是它的差异度量，上图的差异度量就是FC（foldchange）,对每个gene set来说，所有的基因的ES score都要一个个加起来，叫做running ES score，在加的过程中，什么时候ES score达到了最大值，就是这个gene set最终的ES score！所谓的GSEA分析，就是一个个遍历探索已知的基因集合，在我们的表达矩阵里面是否出现了某种统计学显著的扰动，如上图所示，要深入理解，请看我在生信菜鸟团写的另外3个教程：</p><ul><li>java版本GSEA软件的ES score图片的修改 <a href="http://www.bio-info-trainee.com/2105.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/2105.html</a></li><li>GSEA的统计学原理试讲 <a href="http://www.bio-info-trainee.com/2102.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/2102.html</a></li><li>制作自己的gene set文件给gsea软件 <a href="http://www.bio-info-trainee.com/2144.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/2144.html</a></li></ul><h1 id="ssGSEA-单样本GSEA"><a href="#ssGSEA-单样本GSEA" class="headerlink" title="ssGSEA 单样本GSEA"></a>ssGSEA 单样本GSEA</h1><p>ssGSEA顾名思义是一种特殊的GSEA，它主要针对单样本无法做GSEA而提出的一种实现方法，原理上与GSEA是类似的，不同的是GSEA需要准备表达谱文件即gct，根据表达谱文件计算每个基因的rank值，再进行后续的统计分析。而单个样本则无法计算rank，当然GSEA也支持你直接提供rank来进行富集分析的，这个不在此讨论，我们这里主要介绍ssGSEA用来对单个样本做GSEA富集分析的原理。</p><p>关于R的实现可以参考：<a href="https://support.bioconductor.org/p/98463/" target="_blank" rel="noopener">https://support.bioconductor.org/p/98463/</a></p><p>关于genepattern工具在这里：<a href="http://software.broadinstitute.org/cancer/software/genepattern/modules/docs/ssGSEAProjection/4" target="_blank" rel="noopener">http://software.broadinstitute.org/cancer/software/genepattern/modules/docs/ssGSEAProjection/4</a></p><p>首先假设我们有一个样本的表达数据，那么他应该是这样的</p><p>第一列为基因，第二列为表达值，这样的两列的数据矩阵</p><p>首先我们对我们的样本的所有基因的表达水平进行排序获得其在所有基因中的秩次rank，这些基因的集合为BG</p><p>假设我们要对其进行KEGG的分析，首先我们需要在GSEA官网找到KEGG对应的gmt文件</p><p>gmt文件主要格式是：每行表示一个通路，第一列为通路ID,第二列为通路对应的描述，第三列开始到最后一列为该通路中的基因</p><p>那么对于任意的一个通路A,我们可以拿到这个通路的基因列表GL</p><p>我们从GL中寻找BG里存在的基因并计数为NC,并将这些基因的表达水平加和为SG</p><p>开始计算ES：</p><p>对于任意一个表达谱中的基因 G:</p><p>如果G是集合GL中的基因则他的ES等于 该基因的表达水平除以SG</p><p>否则 记该基因的ES等于 1除以（基因集合BG总个数减去NC）</p><p>依次计算每个BG中的基因的ES值，找到其中绝对值最大的ES作为通路A的A.ES</p><p>到此 通路A的ES计算完毕，我们需要一个统计学方法来评估该ES是否是显著的，即非随机的</p><p>我们按照上述计算ES的方法，先随机打乱表达谱中基因的表达顺序，然后再依次计算ES值，如此重复一千次，得到一千个ES值，我们根据这一千个ES值的分布，来计算A.ES在这个分布中所处的位置及出现在该位置时的概率即得到了p值</p><p>依次我们分别计算每个通路的ES及p值，然后使用多重检验矫正得到每个通路的FDR</p><p>以上即是整个ssGSEA算法的整体思路。</p><p>[作者：ingene 链接：<a href="https://www.jianshu.com/p/3467077ff60f" target="_blank" rel="noopener">https://www.jianshu.com/p/3467077ff60f</a>]</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>基因本体论(Gene Ontology) 与通路分析(Pathway Analysis)</title>
      <link href="/hexo/2017/09/07/2017-09-07-Gene%20Ontology/"/>
      <url>/hexo/2017/09/07/2017-09-07-Gene%20Ontology/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="基因本体论"><a href="#基因本体论" class="headerlink" title="基因本体论"></a>基因本体论</h1><p>针对于单个基因特征</p><p>本体论这个词一看就逼格很高的样子，源于哲学，本体论用于描述事物的本质，所以基因本体论就是为了描述基因的本质。GO从三个方面对基因的本质进行描述，</p><ul><li><p>1）细胞组分（Cellular Component, CC）：一般用来描述基因作用的位置，比如说高尔基体，内质网这样的；</p></li><li><p>2）分子功能（Molecular Function, MF）：可以描述为分子水平的活性，如催化或结合活性；</p></li><li><p>3）生物学过程(BP)：比如说蛋白质磷酸化，细胞粘附都是生物学过程。</p></li></ul><p>简单地说，GO就像是给基因贴标签进行注释，比如说给X湿兄贴标签，出没地点——小张聊科研(CC)，文风诙谐幽默(MF)，能够让大家轻松愉悦地学到东西(BP)。</p><p>GO的术语是分层的，呈现出树状结构，上文提到的CC、MF和BP即为GO术语的最顶层，比如说下图是BP的分析结果树状图，最顶端即为BP.<br><img src="http://img.mp.itc.cn/upload/20170419/a6c07195ca0f4b738699979d31fbbeb2_th.jpeg" alt=""></p><h1 id="通路分析"><a href="#通路分析" class="headerlink" title="通路分析"></a>通路分析</h1><p>针对于群基因（protein）特征</p><p>一个生物学过程的实现会涉及到许多蛋白质，这些蛋白质合在一起就是一个通路。通路分析能够帮助我们更好地了解某个或某一些蛋白质在一个生物学过程中所扮演的角色。通路分析和GO都是对基因进行注释，那么为什么要对基因进行注释呢？因为基因说穿了其实是一串RNA，那么它的功能和结构虽然都是客观存在的，但是要如何描述这些客观的东西是基因注释所要解决的问题。<br>最常用的通路分析数据库是京都基因与基因组百科全书 (Kyoto Encyclopedia of Genes and Genomes, KEGG)。1995年，KEGG数据库项目由京都大学化学研究所教授Minoru Kanehisa领头启动。KEGG数据库是手工绘制的KEGG途径图的集合，每个途径图包含分子相互作用和反应的网络，将基因组中的基因与通路中的基因产物（主要是蛋白质）连接。KEGG pathway analysis即为将目的基因定位到KEGG途径图中的过程。下图为small cell lung cancer的KEGG途径图。</p><p><img src="http://img.mp.itc.cn/upload/20170419/7f13e82686194a129b65cfc5a0403d7b_th.png" alt=""></p><h1 id="GO分析-与-Pathyway-分析-总结"><a href="#GO分析-与-Pathyway-分析-总结" class="headerlink" title="GO分析 与 Pathyway 分析 总结"></a>GO分析 与 Pathyway 分析 总结</h1><ul><li><p>GO数据库分别从功能、参与的生物途径及细胞中的定位对基因产物进行了标准化描述，即对基因产物进行简单注释，通过GO富集分析可以粗略了解差异基因富集在哪些生物学功能、途径或者细胞定位。GO分析好比是将基因分门别类放入一个个功能类群的篮子，而pathway则是将基因一个个具体放到代谢网络中的指定位置。</p></li><li><p>Pathway指代谢通路，对差异基因进行pathway分析，可以了解实验条件下显著改变的代谢通路，在机制研究中显得尤为重要。 </p></li></ul><h1 id="基因功能分析-Gene-Ontology-和代谢通路（pathway）分析方法（核心）"><a href="#基因功能分析-Gene-Ontology-和代谢通路（pathway）分析方法（核心）" class="headerlink" title="基因功能分析(Gene Ontology)和代谢通路（pathway）分析方法（核心）"></a>基因功能分析(Gene Ontology)和代谢通路（pathway）分析方法（核心）</h1><ol><li>进行样本组和对照组基因表达差异分析</li><li>对获取的差异表达基因进行功能（GO）和信号通路（Pathway）分析</li><li>在得到功能（GO）和信号通路（Pathway）分析的结果中找出和疾病/研究目标相关的GO 和 Pathway</li><li>对这些相关的基因功能和信号通路的基因取交集，缩小候选基因的范围。</li><li>对取交集得到的基因，如果基因数目还比较多（目标基因：1-2个），就将这些基因和差异表达基因再取交集，根据Fold Change 选择差异表达倍数最大的基因作为我们研究的候选基因。</li></ol><p><img src="https://taoshengxu.github.io/DocumentGit/img/go_pathway0.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/go_pathway0-1.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/go_pathway1.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/go_pathway2.jpg" alt=""><br><img src="https://taoshengxu.github.io/DocumentGit/img/go_pathway3.jpg" alt=""></p><hr><p>date: ‘2016-12-15 17:07:42’</p><p>干Bioinformatics差不多2年半了，却一直到对GO和pathway的区别搞不清楚，现在明白又觉好笑，记几个字在这里。</p><p>一般对一组Gene Set 做GO是想看哪些生物功能；比如一个功能，有很多基因都和这个功能相关，把这个功能相关的所有基因找出来。</p><p>而对一组GeneSet 做Kegg主要是看通路，在通路上的联系。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Git 参考手册</title>
      <link href="/hexo/2017/09/07/2017-09-07-GitCommand/"/>
      <url>/hexo/2017/09/07/2017-09-07-GitCommand/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Git <a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">参考手册中文1</a> <br><br>Git <a href="http://gitref.justjavac.com/" target="_blank" rel="noopener">参考手册中文2</a> <br><br>Git <a href="https://git-scm.com/about" target="_blank" rel="noopener">参考手册ENG</a></p><hr><h1 id="git-branch-命令"><a href="#git-branch-命令" class="headerlink" title="git branch 命令"></a>git branch 命令</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">branch </span>列出所有分支</span><br><span class="line">git <span class="keyword">branch </span>-v 查看每一个分支的最后一次提交</span><br><span class="line">git <span class="keyword">branch </span>-d hotfix 表示删除hotfix分支  </span><br><span class="line">【git 删除本地分支】</span><br><span class="line">git <span class="keyword">branch </span>-D <span class="keyword">br</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">【git </span>删除远程分支】</span><br><span class="line">git push <span class="keyword">origin </span>:<span class="keyword">br </span> (<span class="keyword">origin </span>后面有空格) </span><br><span class="line">或者</span><br><span class="line">$ git push <span class="keyword">origin </span>--delete serverfix</span><br><span class="line"></span><br><span class="line">--merged 与 --no-merged 这两个有用的选项可以过滤这个列表中已经合并或尚未合</span><br><span class="line">并到当前分支的分支如果要查看哪些分支已经合并到当前分支，可以运行 git <span class="keyword">branch </span>--merged：</span><br><span class="line">git <span class="keyword">branch </span>--merged在这个列表中分支名字前没有 * 号的分支通常可以使用 git <span class="keyword">branch </span>-d 删除掉</span><br></pre></td></tr></table></figure><h1 id="git-checkout-命令"><a href="#git-checkout-命令" class="headerlink" title="git checkout 命令"></a>git checkout 命令</h1><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 创建新分支，并立即切换到它。</span><br><span class="line"></span><br><span class="line">与以下等效：</span><br><span class="line">git branch <span class="keyword">new</span><span class="type">branch</span> </span><br><span class="line">git checkout <span class="keyword">new</span><span class="type">branch</span></span><br></pre></td></tr></table></figure><h1 id="git-merge命令"><a href="#git-merge命令" class="headerlink" title="git merge命令"></a>git merge命令</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">merge</span> [branch] 将[branch] 分枝合并到当前分支中</span><br><span class="line"></span><br><span class="line">例如,首先切换到<span class="keyword">master</span>分支，然后将hotfix分支合并到<span class="keyword">master</span>分支</span><br><span class="line">git checkout <span class="keyword">master</span></span><br><span class="line">git <span class="keyword">merge</span> hotfix</span><br><span class="line"></span><br><span class="line">git <span class="keyword">merge</span> origin/serverfix 将远程git服务器origin的serverfix合并到当前分支</span><br></pre></td></tr></table></figure><h1 id="git-add-命令"><a href="#git-add-命令" class="headerlink" title="git add 命令"></a>git add 命令</h1><p><code>git add xx</code>命令可以将xx文件添加到暂存区，</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">add</span> .     提交被修改的和新建的文件，添加全部修改或新增的文件但不包括被删除的文件          </span><br><span class="line">git <span class="built_in">add</span> -<span class="keyword">u</span>    --<span class="keyword">update</span>  <span class="keyword">update</span> tracked <span class="keyword">files</span>  更新所有改变的文件，即提交所有变化的文件,表示添加编辑或者删除的文件，不包括新添加的文件</span><br><span class="line">git <span class="built_in">add</span> -A    --<span class="keyword">all</span>   <span class="built_in">add</span> <span class="keyword">changes</span> from <span class="keyword">all</span> tracked <span class="built_in">and</span> untracked <span class="keyword">files</span>   提交已被修改和已被删除文件，但是不包括新的文件</span><br><span class="line">git <span class="built_in">add</span> -A . 如果有很多改动，可以一次添加所有改变的文件（注意 `-A` 选项后面还有一个句点）。</span><br></pre></td></tr></table></figure><h1 id="git-commit命令"><a href="#git-commit命令" class="headerlink" title="git commit命令"></a>git commit命令</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">commit</span> -a -m <span class="string">"commit discription"</span>  <span class="string">"-a"</span> 表示git <span class="keyword">add</span>，<span class="string">"-m"</span>表示<span class="keyword">commit</span>的注释</span><br></pre></td></tr></table></figure><h1 id="git-push-命令"><a href="#git-push-命令" class="headerlink" title="git push 命令"></a>git push 命令</h1><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push <span class="string">[alias]</span> <span class="string">[branch]</span>，就会将你的<span class="string">[branch]</span>分支推送成为<span class="string">[alias]</span>远端上的同名<span class="string">[branch]</span> 分支</span><br></pre></td></tr></table></figure><h1 id="git-fetch-命令"><a href="#git-fetch-命令" class="headerlink" title="git fetch 命令"></a>git fetch 命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">从服务器上抓取本地没有的数据时，它并不会修改工作目录中的内容。它只会获取数据然后</span><br><span class="line">让你自己合并。</span><br></pre></td></tr></table></figure><h1 id="git-pull-命令"><a href="#git-pull-命令" class="headerlink" title="git pull 命令"></a>git pull 命令</h1><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在大多数情况下它的含义是一个 git fetch 紧接着一个git <span class="keyword">merge</span> 命令</span><br></pre></td></tr></table></figure><h1 id="删除commit"><a href="#删除commit" class="headerlink" title="删除commit"></a>删除commit</h1><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">reset</span> --hard HEAD~<span class="number">3</span> 删除最顶部的<span class="number">3</span>个commit</span><br><span class="line">git <span class="built_in">reset</span> --hard commit-id 回滚到commit-id,将commit-id之后提交的commit都去除</span><br><span class="line"></span><br><span class="line">【远程代码库回滚】：</span><br><span class="line">应用场景：自动部署系统发布后发现问题，需要回滚到某一个commit，再重新发布</span><br><span class="line">原理：先将本地分支退回到某个commit，删除远程分支，再重新<span class="built_in">push</span>本地分支</span><br><span class="line">操作步骤：</span><br><span class="line"><span class="number">1</span>、git checkout the_branch</span><br><span class="line"><span class="number">2</span>、git pull</span><br><span class="line"><span class="number">3</span>、git branch the_branch_backup //备份一下这个分支当前的情况</span><br><span class="line"><span class="number">4</span>、git <span class="built_in">reset</span> --hard the_commit_id //把the_branch本地回滚到the_commit_id</span><br><span class="line"><span class="number">5</span>、git <span class="built_in">push</span> <span class="built_in">origin</span> :the_branch //删除远程 the_branch</span><br><span class="line"><span class="number">6</span>、git <span class="built_in">push</span> <span class="built_in">origin</span> the_branch //用回滚后的本地分支重新建立远程分支</span><br><span class="line"><span class="number">7</span>、git <span class="built_in">push</span> <span class="built_in">origin</span> :the_branch_backup //如果前面都成功了，删除这个备份分支</span><br></pre></td></tr></table></figure><hr><h1 id="Git-学习"><a href="#Git-学习" class="headerlink" title="Git 学习"></a>Git 学习</h1><h1 id="1-初始化Git"><a href="#1-初始化Git" class="headerlink" title="1.初始化Git"></a>1.初始化Git</h1><p>初始化后，在当前目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> D:<span class="string">/Test</span></span><br><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> *.c</span></span><br><span class="line"><span class="bash">git add README</span></span><br><span class="line"><span class="bash">git commit -m <span class="string">'initial project version'</span></span></span><br></pre></td></tr></table></figure></p><h2 id="从现有仓库克隆"><a href="#从现有仓库克隆" class="headerlink" title="从现有仓库克隆"></a>从现有仓库克隆</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>://github.com/schacon/grit.git  +目录(可选，指定存的目录)</span><br></pre></td></tr></table></figure><h2 id="检查当前文件状态"><a href="#检查当前文件状态" class="headerlink" title="检查当前文件状态"></a>检查当前文件状态</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">On branch <span class="literal">master</span></span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure><h2 id="跟踪新文件"><a href="#跟踪新文件" class="headerlink" title="跟踪新文件"></a>跟踪新文件</h2><p>git add 将 修改文件放到暂存区，然后再看看 git status 的输出<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> README</span></span><br><span class="line"><span class="bash">git status</span></span><br></pre></td></tr></table></figure></p><h2 id="提交更新"><a href="#提交更新" class="headerlink" title="提交更新"></a>提交更新</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> commit -m <span class="string">"commit message"</span></span><br></pre></td></tr></table></figure><p>git commit 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤：</p><h2 id="移除文件"><a href="#移除文件" class="headerlink" title="移除文件"></a>移除文件</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rm grit.gemspec <span class="comment">#问磁盘中删除文件</span></span><br><span class="line">git rm grit.gemspec<span class="comment">#从git 跟踪中删除</span></span><br><span class="line"><span class="comment">#如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f（译注：即 force 的首字母），以防误删除文件后丢失修改的内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#只想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。换句话说，仅是从跟踪清单中删除。比如一些大型日志文件或者一堆 .a 编译文件，不小心纳入仓库后，要移除跟踪但不删除文件，以便稍后在 .gitignore 文件中补上，用 --cached 选项即可</span></span><br><span class="line">git rm <span class="comment">--cached readme.txt</span></span><br></pre></td></tr></table></figure><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git mv file_from file_to</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">其实，运行 git mv 就相当于运行了下面三条命令：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv README.txt README</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git rm README.txt</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add README</span></span><br></pre></td></tr></table></figure><h2 id="忽略某些文件"><a href="#忽略某些文件" class="headerlink" title="忽略某些文件"></a>忽略某些文件</h2><p>创建一个名为 .gitignore 的文件，列出要忽略的文件模式。<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> cat .gitignore</span><br><span class="line"><span class="comment">*.[oa]</span></span><br><span class="line"><span class="comment">*~</span></span><br></pre></td></tr></table></figure></p><p>第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。<br>第二行告诉 Git 忽略所有以波浪符（~）结尾的文件。</p><p>文件 .gitignore 的格式规范如下：</p><ul><li>所有空行或者以注释符号 ＃ 开头的行都会被 Git 忽略。</li><li>可以使用标准的 glob 模式匹配。</li><li>匹配模式最后跟反斜杠（/）说明要忽略的是目录。</li><li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。</li></ul><p>所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。星号（*）匹配零个或多个任意字符；[abc] 匹配任何一个列在方括号中的字符（这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；问号（?）只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 [0-9] 表示匹配所有 0 到 9 的数字）。</p><p>我们再看一个 .gitignore 文件的例子<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此为注释 – 将被 Git 忽略</span></span><br><span class="line"><span class="comment"># 忽略所有 .a 结尾的文件</span></span><br><span class="line">*.a</span><br><span class="line"><span class="comment"># 但 lib.a 除外</span></span><br><span class="line">!<span class="class"><span class="keyword">lib</span>.<span class="title">a</span></span></span><br><span class="line"><span class="comment"># 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span></span><br><span class="line">/TODO</span><br><span class="line"><span class="comment"># 忽略 build/ 目录下的所有文件</span></span><br><span class="line">build/</span><br><span class="line"><span class="comment"># 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span></span><br><span class="line">doc/*.txt</span><br><span class="line"><span class="comment"># 忽略 doc/ 目录下所有扩展名为 txt 的文件</span></span><br><span class="line">doc/**<span class="regexp">/*.txt</span></span><br></pre></td></tr></table></figure></p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>可以指定选项 -v，会显示需要读写远程仓库使用的 Git 保存的简写与其对应的 URL<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line">添加远程仓库</span><br><span class="line">git remote <span class="keyword">add </span>&lt;<span class="keyword">shortname&gt; </span>&lt;url&gt;添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简</span><br><span class="line"></span><br><span class="line">从远程仓库中抓取与拉取</span><br><span class="line">git fetch [remote-name]</span><br><span class="line">git fetch 命令会将数据拉取到你的本地仓库,并不会自动合并或修改你当前的工作。当准备好时你必须手动将其合并入你的工作。</span><br><span class="line"></span><br><span class="line">git pull 命令来自动的抓取然后合并远程分支到当前分支。</span><br><span class="line"></span><br><span class="line">推送到远程仓库</span><br><span class="line">git push [remote-name] [<span class="keyword">branchname]</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">当你想要将 </span>master 分支推送到 <span class="keyword">origin </span>服务器时（再次说明，克隆时通常会自动帮你设置好那两个名</span><br><span class="line">字），那么运行这个命令就可以将你所做的备份到服务器：</span><br><span class="line">git push <span class="keyword">origin </span>master</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>层叠样式表 (Cascading Style Sheets)小结</title>
      <link href="/hexo/2017/09/06/2017-09-05-StudyCSS/"/>
      <url>/hexo/2017/09/06/2017-09-05-StudyCSS/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>CSS是一个我一直认为web前段技术，我知道我肯定能学会，但是我却不肯学，可是可是我总是对网页有一种莫名的向往，现在有了R,markdown,shiny,可以回避JSP,PHP等总不愿意学会的工具了，可是HTML,CSS,JS却无法回避了,这是开始shiny之后又不得不继续深入的一个topic. Shiny 的表现太土了.<br>  一些概念：样式表定义如何显示 HTML 元素</p><hr><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><ul><li><a href="http://www.runoob.com/css/css-intro.html" target="_blank" rel="noopener">在线教程</a></li><li><a href="http://www.runoob.com/cssref/css-reference.html" target="_blank" rel="noopener">参考手册</a><h1 id="CSS-语法"><a href="#CSS-语法" class="headerlink" title="CSS 语法"></a>CSS 语法</h1></li></ul><ol><li><p>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:<br>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p&#123;  </span><br><span class="line">text-align:center;  /*这是另一个注释*/  </span><br><span class="line">color:black;  </span><br><span class="line">font-family:arial;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>id 选择器: id 选择器以 “#” 来定义  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#para1</span><br><span class="line">&#123;</span><br><span class="line">text-align:center;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>class 选择器：类选择器以一个点”.”号显示  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.cen &#123;text-align:center;&#125;  </span><br><span class="line">/*所以拥有cen类的HTML元素都居中*/  </span><br><span class="line">另外，可以指定所有 p 元素使用 class=&quot;center&quot; 让该元素的文本居中</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; </span><br><span class="line">&lt;style&gt;</span><br><span class="line">p.center</span><br><span class="line">&#123;</span><br><span class="line">text-align:center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 class=&quot;center&quot;&gt;这个标题不受影响&lt;/h1&gt;</span><br><span class="line">&lt;p class=&quot;center&quot;&gt;这个段落居中对齐。&lt;/p&gt; </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol><li>样式表种类<ul><li>外部样式表</li><li>内部样式表   </li></ul></li></ol><ul><li><p>内联样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;!-- 外部样式 style.css --&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;/&gt;</span><br><span class="line">    &lt;!-- 设置：h3&#123;color:blue;&#125; --&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">      /* 内部样式 */</span><br><span class="line">      h3&#123;color:green;&#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;测试！&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li></ul><ol><li><p>CSS 背景  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">背景颜色</span><br><span class="line">body &#123;background-color:#b0c4de;&#125;   #&quot;#ff0000&quot;,&quot;rgb(255,0,0)&quot;,&quot;red&quot;三种表示都可以</span><br><span class="line">h1 &#123;background-color:#6495ed;&#125;</span><br><span class="line">p &#123;background-color:#e0ffff;&#125;</span><br><span class="line">div &#123;background-color:#b0c4de;&#125;</span><br><span class="line">背景图像</span><br><span class="line">body &#123;background-image:url(&apos;paper.gif&apos;);&#125;</span><br></pre></td></tr></table></figure></li><li><p>CSS 文本格式  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">##颜色</span><br><span class="line">body &#123;color:red;&#125;</span><br><span class="line">h1 &#123;color:#00ff00;&#125;</span><br><span class="line">h2 &#123;color:rgb(255,0,0);&#125;</span><br><span class="line">##对齐</span><br><span class="line">h1 &#123;text-align:center;&#125;</span><br><span class="line">p.date &#123;text-align:right;&#125;</span><br><span class="line">p.main &#123;text-align:justify;&#125;</span><br><span class="line">##文本修饰</span><br><span class="line">h1 &#123;text-decoration:overline;&#125;</span><br><span class="line">h2 &#123;text-decoration:line-through;&#125;</span><br><span class="line">h3 &#123;text-decoration:underline;&#125;</span><br><span class="line">## 文本转换</span><br><span class="line">p.uppercase &#123;text-transform:uppercase;&#125;</span><br><span class="line">p.lowercase &#123;text-transform:lowercase;&#125;</span><br><span class="line">p.capitalize &#123;text-transform:capitalize;&#125;</span><br><span class="line">##文本缩进</span><br><span class="line">p &#123;text-indent:50px;&#125;</span><br></pre></td></tr></table></figure></li><li><p>CSS 字体  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">##字体样式</span><br><span class="line">&lt;style&gt;</span><br><span class="line">p.normal &#123;font-style:normal;&#125;</span><br><span class="line">p.italic &#123;font-style:italic;&#125;</span><br><span class="line">p.oblique &#123;font-style:oblique;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p class=&quot;normal&quot;&gt;这是一个段落,正常。&lt;/p&gt;</span><br><span class="line">&lt;p class=&quot;italic&quot;&gt;这是一个段落,斜体。&lt;/p&gt;</span><br><span class="line">&lt;p class=&quot;oblique&quot;&gt;这是一个段落,斜体。&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">##字体大小</span><br><span class="line">h1 &#123;font-size:40px;&#125;</span><br><span class="line">h2 &#123;font-size:30px;&#125;</span><br><span class="line">p &#123;font-size:14px;&#125;</span><br><span class="line">h1 &#123;font-size:2.5em;&#125; /* 40px/16=2.5em */</span><br><span class="line">h2 &#123;font-size:1.875em;&#125; /* 30px/16=1.875em */</span><br><span class="line">p &#123;font-size:0.875em;&#125; /* 14px/16=0.875em */</span><br></pre></td></tr></table></figure></li></ol><hr><p>  学到这里也就了解CSS的一个基本语法结构了，不需要深入了</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Ubuntu 安装R, RStudio, Rstudio Server, JAVA</title>
      <link href="/hexo/2017/09/05/2017-09-04-UbuntuInstall_R/"/>
      <url>/hexo/2017/09/05/2017-09-04-UbuntuInstall_R/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="R"><a href="#R" class="headerlink" title="R"></a>R</h1><p>安装最新的R 版本  <a href="https://mirrors.ustc.edu.cn/CRAN/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/CRAN/</a>  </p><ol><li>Ubuntu14.04</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/apt/sources.list</span><br><span class="line"><span class="comment">#sudo vim /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># 手动加入最新新镜像源：</span></span><br><span class="line"><span class="comment"># deb http://cran.rstudio.com/bin/linux/ubuntu trusty/  Ubuntu14.04</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 51716619E084DAB9</span><br><span class="line"><span class="comment"># 然后更新一下</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install r-base r-base-dev</span><br></pre></td></tr></table></figure><ol><li>Ubuntu16.04</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo echo <span class="string">"deb http://cran.rstudio.com/bin/linux/ubuntu xenial/"</span> | sudo tee -a /etc/apt/sources.list </span><br><span class="line">gpg --keyserver keyserver.ubuntu.com --recv-key 51716619E084DAB9</span><br><span class="line">gpg -a --export 51716619E084DAB9 | sudo apt-key add -</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install r-base r-base-dev</span><br></pre></td></tr></table></figure><h1 id="Rstudio"><a href="#Rstudio" class="headerlink" title="Rstudio"></a>Rstudio</h1><p><a href="https://www.rstudio.com/products/rstudio/download/" target="_blank" rel="noopener">https://www.rstudio.com/products/rstudio/download/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gdebi-core</span><br><span class="line">sudo apt-get install libapparmor1</span><br><span class="line">sudo gdebi -n rstudio-1.0.44-amd64.deb</span><br><span class="line">rm rstudio-1.0.44-amd64.deb</span><br></pre></td></tr></table></figure><h1 id="Rstudio-server"><a href="#Rstudio-server" class="headerlink" title="Rstudio server"></a>Rstudio server</h1><p><a href="https://www.rstudio.com/products/rstudio/download-server/" target="_blank" rel="noopener">https://www.rstudio.com/products/rstudio/download-server/</a></p><h4 id="Ubuntu-RStudio-server-错误解决方法"><a href="#Ubuntu-RStudio-server-错误解决方法" class="headerlink" title="Ubuntu RStudio server 错误解决方法"></a>Ubuntu RStudio server 错误解决方法</h4><p><em>在/home目录下删除.rstudio文件夹 可解决</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gdebi-core</span><br><span class="line">sudo apt-get install libapparmor1</span><br><span class="line">wget http://download2.rstudio.org/rstudio-server-0.97.551-amd64.deb</span><br><span class="line">sudo gdebi rstudio-server-0.97.551-amd64.deb</span><br><span class="line">完成安装后，RStudio Server会自动启动运行</span><br><span class="line">ps -aux|grep rstudio</span><br><span class="line">8787端口被打开</span><br><span class="line">访问地址：192.168.1.107:8787</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">root用户无法登陆，新建一个用户进行登陆 </span><br><span class="line">useradd -d /home/R -m R，创建用户的同时指定主目录 </span><br><span class="line">passwd R，设置密码</span><br><span class="line"></span><br><span class="line"><span class="comment">#系统设置 </span></span><br><span class="line">主要有两个配置文件，默认文件不存在 </span><br><span class="line">/etc/rstudio/rserver.conf </span><br><span class="line">/etc/rstudio/rsession.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置端口和ip控制:</span></span><br><span class="line">vi /etc/rstudio/rserver.conf</span><br><span class="line">www-port=<span class="number">8080</span><span class="comment">#监听端口</span></span><br><span class="line">www-address=<span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span><span class="comment">#允许访问的IP地址，默认0.0.0.0</span></span><br><span class="line"><span class="comment">#重启服务器，生效</span></span><br><span class="line">rstudio-server restart</span><br><span class="line"></span><br><span class="line">会话配置管理</span><br><span class="line">vi /etc/rstudio/rsession.conf</span><br><span class="line">session-timeout-minutes=<span class="number">30</span><span class="comment">#会话超时时间</span></span><br><span class="line">r-cran-repos=http://ftp.ctex.org/mirrors/CRAN<span class="comment">#CRAN资源库</span></span><br><span class="line"></span><br><span class="line">rstudio-server start <span class="comment">#启动</span></span><br><span class="line">rstudio-server <span class="keyword">stop</span> <span class="comment">#停止</span></span><br><span class="line">rstudio-server restart <span class="comment">#重启</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看运行中R进程</span></span><br><span class="line">rstudio-server active-sessions</span><br><span class="line"><span class="comment">#指定PID，停止运行中的R进程</span></span><br><span class="line">rstudio-server suspend-session &lt;pid&gt;</span><br><span class="line"><span class="comment">#停止所有运行中的R进程</span></span><br><span class="line">rstudio-server  suspend-all</span><br><span class="line"><span class="comment">#强制停止运行中的R进程，优先级最高，立刻执行</span></span><br><span class="line">rstudio-server force-suspend-session &lt;pid&gt;</span><br><span class="line">rstudio-server force-suspend-all</span><br><span class="line"><span class="comment">#RStudio Server临时下线，不允许web访问，并给用户友好提示</span></span><br><span class="line">rstudio-server offline</span><br><span class="line"><span class="comment"># RStudio Server临时上线</span></span><br><span class="line">rstudio-server online</span><br></pre></td></tr></table></figure><h1 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##下载 解压</span></span><br><span class="line">wget -c <span class="symbol">http:</span>/<span class="regexp">/download.oracle.com/otn</span>-pub/java/jdk/<span class="number">8</span>u11-b12/jdk-<span class="number">8</span>u11-linux-i586.tar.gz</span><br><span class="line">mkdir -p /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">jvm</span></span></span><br><span class="line">sudo mv jdk-<span class="number">8</span>u11-linux-i586.tar.gz /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">jvm</span></span></span><br><span class="line">cd /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">jvm</span></span></span><br><span class="line">sudo tar xzvf jdk-<span class="number">8</span>u11-linux-i586.tar.gz</span><br><span class="line">sudo ln -s jdk1.<span class="number">8.0_11</span> java8</span><br><span class="line"></span><br><span class="line"><span class="comment">##添加环境变量</span></span><br><span class="line">vi ~<span class="regexp">/.bashrc</span></span><br><span class="line"><span class="regexp">xport JAVA_HOME=/usr</span><span class="regexp">/lib/jvm</span><span class="regexp">/java8</span></span><br><span class="line"><span class="regexp">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span></span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/<span class="class"><span class="keyword">lib</span>:$&#123;<span class="title">JRE_HOME</span>&#125;/<span class="title">lib</span></span></span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/<span class="symbol">bin:</span>$PATH</span><br><span class="line">source ~<span class="regexp">/.bashrc</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">##配置（似乎不必要）</span></span><br><span class="line"><span class="regexp">##有的系统中会预装OpenJDK，系统默认使用的是这个，而不是刚才装的。</span></span><br><span class="line"><span class="regexp">##所以这一步是通知系统使用Oracle的JDK，非OpenJDK。</span></span><br><span class="line"><span class="regexp">sudo update-alternatives --install /usr</span><span class="regexp">/bin/java</span> java /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">jvm</span>/<span class="title">java8</span>/<span class="title">bin</span>/<span class="title">java</span> 300</span></span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">jvm</span>/<span class="title">java8</span>/<span class="title">bin</span>/<span class="title">javac</span> 300</span></span><br><span class="line">sudo update-alternatives --config java</span><br><span class="line"></span><br><span class="line"><span class="comment">## 测试验证</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>HTML基本语法</title>
      <link href="/hexo/2017/09/05/2017-09-06-HTML_Basic/"/>
      <url>/hexo/2017/09/05/2017-09-06-HTML_Basic/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>wait for…</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Ubuntu 16.01 安装拼音输入法</title>
      <link href="/hexo/2017/09/05/2017-09-04-UbuntuInstall_pinying/"/>
      <url>/hexo/2017/09/05/2017-09-04-UbuntuInstall_pinying/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>请注意命令中不应该的空格可能导致命令不合法！</strong></p><p><strong>一、检查 fctix 框架</strong></p><p>​       首先，要安装中文输入法，必须要保证系统上有 fctix。fctix 是一个以 GPL 方式发布的输入法框架，安装 fctix 后可以为操作系统的桌面环境提供一个灵活的输入方案，解决在 GNU/Linux 环境下安装中文输入法的问题。<br>​       win + a 打开所有应用程序，找到 Language Support 并打开，在 kygboard input method system 中查看是否有 fcitx 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> fcitx</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> sudo apt-get install fcitx-bin</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> sudo apt-get install fcitx-table</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> sudo apt-get install -f  <span class="comment">#修复依赖关系</span></span></span><br></pre></td></tr></table></figure><p>​        之后重启电脑，重新设置 kygboard input method system 为 fctix 。</p><p><strong>二、安装输入法（二选一）</strong><br>注：搜狗输入法比 Google 输入法好用</p><p><strong>(一)、搜狗输入法</strong><br>1、进入搜狗输入法的官网，找到linux环境下的 .deb 的安装包并下载（注意 32 位 和 64 位）。下载的时候有一个可选项，是下载安装或者是保存，建议大家保存，下载安装的那个选项安装完后好像没效果（可能是自身操作的问题）。搜狗输入法 Linux 版官方链接：<a href="https://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="noopener">https://pinyin.sogou.com/linux/?r=pinyin</a> 。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">dpkg</span> <span class="selector-tag">-i</span> <span class="selector-tag">sogoupinyin_2</span><span class="selector-class">.2</span><span class="selector-class">.0</span><span class="selector-class">.0108_amd64</span><span class="selector-class">.deb</span></span><br><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">apt-get</span> <span class="selector-tag">install</span> <span class="selector-tag">-f</span></span><br></pre></td></tr></table></figure></p><p>4、重启系统。</p><p><strong>(二)、Google 输入法</strong></p><p>注：googlepinyin 有基于 fctix 框架的，也有基于 ibus 框架的。</p><p>1、直接安装。(如果安装失败提示 E: Unable to locate package fcitx-googlepinyin 时，先执行： sudo apt install fctix  再执行如下命令)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> fcitx-googlepinyin   </span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> -f</span><br></pre></td></tr></table></figure></p><p>3、重启系统。</p><p><strong>三、设置输入法：</strong><br>1、win + a 打开所有应用，搜索 fcitx configuration 并打开。<br>2、取消勾选<br>3、点击 “+” 新增输入法，在搜索框直接搜索即可<br>4、OK 即可<br>5、将你喜欢使用的输入法置顶，因为输入法在启动的时候是按顺序启动的。<br>注：如果设置完后输入法还是无法启动，重启系统即可。</p><p><strong>四、卸载</strong><br>1、卸载 googlepinyin<br>①、sudo apt-get purge fcitx-googlepinyin<br>②、百度的方法，没试过（基于ibus框架下的）。<br>sudo apt-get remove ibus<br>sudo apt-get remove ibus-goog</p><p>2、卸载搜狗输入法（卸载之前将系统的输入法设置为 ibus ，否则系统重启后没有输入法可用）<br>卸载 fctix：  sudo apt-get purge fcitx<br>卸载 fctix 及相关配置：sudo apt-get autoremove</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Shiny and Shiny server学习</title>
      <link href="/hexo/2017/09/05/2017-09-05-StudyShiny/"/>
      <url>/hexo/2017/09/05/2017-09-05-StudyShiny/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Rblogdonw+Hugo用来实现静态网页，Shiny用于实现动态网页，几乎把R这个工具发挥到了极致，使其无所不能，R可以解决一切<strong>简单</strong>的需要了。</p><hr><h1 id="1-Shiny"><a href="#1-Shiny" class="headerlink" title="1. Shiny"></a>1. Shiny</h1><ul><li><a href="http://yanping.me/shiny-tutorial/" target="_blank" rel="noopener">中文教程</a>. Among them, the Articles are very useful.</li><li><a href="https://shiny.rstudio.com/tutorial/" target="_blank" rel="noopener">英文教程</a></li><li><a href="https://github.com/rstudio/shiny-examples" target="_blank" rel="noopener">Examples</a></li><li><a href="https://taoshengxu.github.io/DocumentGit/pdf/shiny-cheatsheet.pdf">shiny-cheatsheet</a><br>然而shiny太素颜了，需要一些扩展使得其表现美妙起来。   </li></ul><h1 id="2-Shiny-with-HTML"><a href="#2-Shiny-with-HTML" class="headerlink" title="2. Shiny with HTML"></a>2. Shiny with HTML</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">names(shiny::tages)  ## 100多种HTML标签</span><br><span class="line"></span><br><span class="line">tags$div(class = &quot;header&quot;, checked = NA,</span><br><span class="line">  tags$p(&quot;Ready to take the Shiny tutorial? If so&quot;),</span><br><span class="line">  tags$a(href = &quot;shiny.rstudio.com/tutorial&quot;, &quot;Click Here!&quot;)</span><br><span class="line">)</span><br><span class="line">## &lt;div class=&quot;header&quot; checked&gt;</span><br><span class="line">##   &lt;p&gt;Ready to take the Shiny tutorial? If so&lt;/p&gt;</span><br><span class="line">##   &lt;a href=&quot;shiny.rstudio.com/tutorial&quot;&gt;Click Here!&lt;/a&gt;</span><br><span class="line">## &lt;/div&gt; </span><br><span class="line"></span><br><span class="line">withTags(&#123;</span><br><span class="line">  div(class=&quot;header&quot;, checked=NA,</span><br><span class="line">    p(&quot;Ready to take the Shiny tutorial? If so&quot;),</span><br><span class="line">    a(href=&quot;shiny.rstudio.com/tutorial&quot;, &quot;Click Here!&quot;)</span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br><span class="line">## &lt;div class=&quot;header&quot; checked&gt;</span><br><span class="line">##   &lt;p&gt;Ready to take the Shiny tutorial? If so&lt;/p&gt;</span><br><span class="line">##   &lt;a href=&quot;shiny.rstudio.com/tutorial&quot;&gt;Click Here!&lt;/a&gt;</span><br><span class="line">## &lt;/div&gt; </span><br><span class="line"></span><br><span class="line">##lists</span><br><span class="line">tags$div(class=&quot;header&quot;, checked=NA,</span><br><span class="line">  list(</span><br><span class="line">    tags$p(&quot;Ready to take the Shiny tutorial? If so&quot;),</span><br><span class="line">    tags$a(href=&quot;shiny.rstudio.com/tutorial&quot;, &quot;Click Here!&quot;),</span><br><span class="line">    &quot;Thank you&quot;</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">## &lt;div class=&quot;header&quot; checked&gt;</span><br><span class="line">##   &lt;p&gt;Ready to take the Shiny tutorial? If so&lt;/p&gt;</span><br><span class="line">##   &lt;a href=&quot;shiny.rstudio.com/tutorial&quot;&gt;Click Here!&lt;/a&gt;</span><br><span class="line">##   Thank you</span><br><span class="line">## &lt;/div&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Raw HTML 加 HTML()</span><br><span class="line">tags$div(</span><br><span class="line">  HTML(&quot;&lt;strong&gt;Raw HTML!&lt;/strong&gt;&quot;)</span><br><span class="line">)</span><br><span class="line">## &lt;div&gt;&lt;strong&gt;Raw HTML!&lt;/strong&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">tags$head(</span><br><span class="line">  tags$style(type=<span class="string">'text/css'</span>, </span><br><span class="line">             <span class="string">"select, textarea, input[type='text'] &#123;margin-bottom: 0px;&#125;"</span></span><br><span class="line">             , <span class="string">"#submit &#123;</span></span><br><span class="line"><span class="string">             color: rgb(255, 255, 255);</span></span><br><span class="line"><span class="string">             text-shadow: 0px -1px 0px rgba(0, 0, 0, 0.25);</span></span><br><span class="line"><span class="string">             background-color: rgb(189,54,47);</span></span><br><span class="line"><span class="string">             background-image: -moz-linear-gradient(center top , rgb(238,95,91), rgb(189,54,47));</span></span><br><span class="line"><span class="string">             background-repeat: repeat-x;</span></span><br><span class="line"><span class="string">             border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);</span></span><br><span class="line"><span class="string">             &#125;"</span></span><br><span class="line">  ),</span><br><span class="line">  tags$script(HTML(<span class="string">'</span></span><br><span class="line"><span class="string">                   Shiny.addCustomMessageHandler("jsCode",</span></span><br><span class="line"><span class="string">                   function(message) &#123;</span></span><br><span class="line"><span class="string">                   eval(message.value);</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">                   );'</span></span><br><span class="line">  ))</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>HTML 前端+ Shiny服务器端数据响应机制</p><ul><li><p>HTML form elements (in this case a select list and a number input) are bound to input slots using their <strong>name</strong> attribute.</p></li><li><p>Output is rendered into HTML elements based on matching their <strong>id</strong> attribute to an output slot and by specifying the requisite css class for the element (in this case either shiny-text-output, shiny-plot-output, or shiny-html-output)</p></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">library</span><span class="params">(shiny)</span></span></span><br><span class="line"><span class="function"><span class="title">runExample</span><span class="params">(<span class="string">"08_html"</span>)</span></span></span><br></pre></td></tr></table></figure><h1 id="3-shiny-server"><a href="#3-shiny-server" class="headerlink" title="3. shiny server"></a>3. shiny server</h1><p><a href="https://github.com/rstudio/shiny-server" target="_blank" rel="noopener">学习入口</a><br><a href="https://www.rstudio.com/products/shiny/download-server/" target="_blank" rel="noopener">最新安装文件</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sudo su - \</span><br><span class="line">-c &quot;R -e \&quot;install.packages(&apos;shiny&apos;, repos=&apos;https://cran.rstudio.com/&apos;)\&quot;&quot;</span><br><span class="line">$ sudo apt-get install gdebi-core</span><br><span class="line">$ wget https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.5.4.869-amd64.deb</span><br><span class="line">$ sudo gdebi shiny-server-1.5.4.869-amd64.deb</span><br><span class="line"></span><br><span class="line">start shiny-server 　　　　   # 启动</span><br><span class="line">stop shiny-server 　　　　　# 停止</span><br><span class="line">restart shiny-server 　　　　# 重启</span><br><span class="line">status shiny-server 　　　　#查看状态  </span><br><span class="line">reload shiny-server 　　　　#不中断服务的前提下 更新加载配置项</span><br></pre></td></tr></table></figure><h3 id="web-查看"><a href="#web-查看" class="headerlink" title="web 查看"></a>web 查看</h3><p>默认端口时3838 </p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">localhost:</span><span class="number">3838</span></span><br></pre></td></tr></table></figure><p><strong>可以在配置文件(/etc/shiny-server/shiny-server.conf)中修改</strong></p><ul><li><p>端口 </p></li><li><p>run_as默认为shiny,可改为username</p></li></ul><p><strong>开发的apps拷贝到目录(/srv/shiny-server/)下</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp ~<span class="regexp">/app file /</span>srv<span class="regexp">/shiny-server/</span> 将文件拷入</span><br></pre></td></tr></table></figure><h3 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h3><p>日志文件在(/var/log/shiny-server/)目录下查看</p><h2 id="一个生信技能树的安装参考教程"><a href="#一个生信技能树的安装参考教程" class="headerlink" title="一个生信技能树的安装参考教程"></a>一个生信技能树的安装参考教程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">######</span><br><span class="line">前几天刚好在亚马逊云上注册了一个1年免费的Amazon Web Services (AWS) ，</span><br><span class="line">正好以此来尝试学习下shiny的相关东西。</span><br><span class="line"></span><br><span class="line">主要参考了：</span><br><span class="line">http://deanattali.com/2015/05/09/setup-rstudio-shiny-server-digital-ocean/</span><br><span class="line">http://www.bio-info-trainee.com/1683.html</span><br><span class="line">操作系统：ubuntu</span><br><span class="line">1. 安装 R</span><br><span class="line">        sudo apt install r-base</span><br><span class="line">2. 安装Rstudio-server</span><br><span class="line">        sudo apt-get install gdebi-core</span><br><span class="line">        sudo apt-get install libapparmor1</span><br><span class="line">        wget https://download2.rstudio.org/rstudio-server-1.0.143-amd64.deb</span><br><span class="line">        sudo gdebi rstudio-server-1.0.143-amd64.deb</span><br><span class="line">因为Rstudio-server不能以root用户登录，所以我们需要创建一个用户</span><br><span class="line">        sudo adduser xxxxx</span><br><span class="line">        ......</span><br><span class="line">然后在网页上输入ip:8787进入Rstudio-server界面，输入用户和密码，即可登录</span><br><span class="line"></span><br><span class="line">3. 安装Shiny</span><br><span class="line">        sudo su - -c &quot;R -e \&quot;install.packages(&apos;shiny&apos;, repos=&apos;http://cran.rstudio.com/&apos;)\&quot;&quot;</span><br><span class="line"></span><br><span class="line">(我注：**如果将配置文件run_as 改为username就不用考虑这个问题，</span><br><span class="line">所以安装完shiny server之后就修改run_as为当前的用户，</span><br><span class="line">不然后面开发中许多包都找不到**)</span><br><span class="line"></span><br><span class="line">不能直接进入R，然后install.packages(&quot;shiny&quot;)，因为如果这样安装，</span><br><span class="line">是将shiny包安装下当前登录用户的个人library中，使得最终shiny-server无法运行。</span><br><span class="line"></span><br><span class="line">        apt-get install gdebi-core</span><br><span class="line">        wget https://download3.rstudio.org/ub ... 1.5.3.838-amd64.deb</span><br><span class="line">        sudo gdebi shiny-server-1.5.3.838-amd64.deb</span><br><span class="line"></span><br><span class="line">做完以上几步后，shiny-server算是初步安装好了，然后可以在网页上ip:3838</span><br><span class="line">进入shiny-server界面(ip是你服务器的ip地址)。</span><br><span class="line">一般我们能看到左边一列的文字和右边的两个框。</span><br><span class="line">当然还需要再安装个rmarkdown，不然还是会有error的</span><br><span class="line"></span><br><span class="line">        sudo su - -c &quot;R -e \&quot;install.packages(&apos;rmarkdown&apos;, repos=&apos;http://cran.rstudio.com/&apos;)\&quot;&quot;</span><br><span class="line"></span><br><span class="line">sudo su - -c &quot;R -e \&quot;devtools::install_github(&apos;name/package&apos;)\&quot;&quot;</span><br><span class="line"></span><br><span class="line">4. 配置shiny server</span><br><span class="line"></span><br><span class="line">    * Shiny Server log is at /var/log/shiny-server.log</span><br><span class="line">    * The default Shiny Server homepage you’re seeing is located at /srv/shiny-server/index.html</span><br><span class="line">- you can edit it or remove it.</span><br><span class="line">    * Any Shiny app directory that you place under /srv/shiny-server/ will be served as a Shiny app. For example, there is a default app at /srv/shiny-server/sample-apps/hello/, which means you can run the app by going to http://123.456.1.2:3838/sample-apps/hello/</span><br><span class="line"></span><br><span class="line">    * The config file for Shiny Server is at /etc/shiny-server/shiny-server.conf</span><br><span class="line">    * To reload the server after editing the config, use sudo reload shiny-server</span><br><span class="line">    * When hosting an Rmarkdown file, name the file index.rmd and add runtime: shiny to the document’s frontmatter</span><br><span class="line"></span><br><span class="line">5. 赋予shiny权限</span><br><span class="line">假设当你登录是以自己用户登录，你在shiny server创建的文件只有该用户（除了root）才有权限读写，但是shiny server是以shiny用户来运行shiny的app，所以要给予shiny用户在一些目录的权限。</span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">        sudo groupadd shiny-apps</span><br><span class="line">        sudo usermod -aG shiny-apps dean</span><br><span class="line">        sudo usermod -aG shiny-apps shiny</span><br><span class="line">        sudo chown -R dean:shiny-apps /srv/shiny-server</span><br><span class="line">        sudo chmod g+w /srv/shiny-server</span><br><span class="line">        sudo chmod g+s /srv/shiny-server  ####在该目录下创建的文件都属于该目录所属的组</span><br><span class="line">        </span><br><span class="line">6. 下载shiny官网的例子</span><br><span class="line">git clone https://github.com/rstudio/shiny-examples.git</span><br><span class="line">文件是要下载到/srv/shiny-server中</span><br><span class="line">7. 运行例子程序</span><br><span class="line">http://ip:3838/shiny-examples/010-download/ （ip是你服务器的ip地址）</span><br><span class="line">想要运行哪个shiny app，只要在ip:3838/后面添加/srv/shiny-server中的文件的相对路径即可</span><br><span class="line">###</span><br></pre></td></tr></table></figure><h1 id="4-Shinydashboard"><a href="#4-Shinydashboard" class="headerlink" title="4. Shinydashboard"></a>4. Shinydashboard</h1><p>这是一个扩展R包，使其有一些面板功能。入门讲解在<a href="https://rstudio.github.io/shinydashboard/index.html" target="_blank" rel="noopener">这里</a></p><h1 id="5-Shinyjs"><a href="#5-Shinyjs" class="headerlink" title="5. Shinyjs"></a>5. Shinyjs</h1><p>从<a href="https://github.com/daattali/shinyjs" target="_blank" rel="noopener">这里学习</a>，这个放在以后再深入吧。</p><h1 id="6-Shinythemes"><a href="#6-Shinythemes" class="headerlink" title="6. Shinythemes"></a>6. Shinythemes</h1><hr><p>最近用shiny做了一个页面，也是一个艰难的开始。Mark in(“Mon Sep 04 19:03:13 2017”)</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Ubuntu下载指令</title>
      <link href="/hexo/2017/08/28/2017-08-28-UbuntuDonwload/"/>
      <url>/hexo/2017/08/28/2017-08-28-UbuntuDonwload/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="1-wget"><a href="#1-wget" class="headerlink" title="1. wget"></a>1. wget</h1><p>wget -P 目录 网址</p><p>wget是ubuntu原生集成的命令 支持 断点续传，后台下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP075/SRP075747/SRR3589957/SRR3589957.sra</span><br><span class="line">wget -c -b ftp://ftp.ccb.jhu.edu/pub/data/bowtie2_indexes/mm10.zip</span><br></pre></td></tr></table></figure><h1 id="2-axel"><a href="#2-axel" class="headerlink" title="2. axel"></a>2. axel</h1><p>axel是一个多线程下载工具，下载速度会比wget快很多，据说是支持断点续传的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup axel ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP075/SRP075747/SRR3589957/SRR3589957.sra &amp; (后台执行)</span><br></pre></td></tr></table></figure><h1 id="3-uget-aria2插件"><a href="#3-uget-aria2插件" class="headerlink" title="3. uget+aria2插件"></a>3. uget+aria2插件</h1><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.uget的安装：</span><br><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:plushuang-tw/uget-stable </span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install uget</span><br><span class="line">2.aria2的安装：</span><br><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:t-tujikawa/ppa </span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install aria2</span><br><span class="line"><span class="comment">#查看版本和支持的特性。</span></span><br><span class="line">aria2 -v</span><br><span class="line"></span><br><span class="line">在桌面中打开 uget程序</span><br><span class="line">打开菜单中“编辑”-&gt;“设置（S）……”，在弹出的界面中选择“插件”</span><br><span class="line">选择插件匹配顺序“aria2”，参数设置：--enable-rpc=true -D --disable-ipv6 --check-certificate=false</span><br></pre></td></tr></table></figure><h1 id="4-wget命令下载FTP整个目录进行文件备份"><a href="#4-wget命令下载FTP整个目录进行文件备份" class="headerlink" title="4.wget命令下载FTP整个目录进行文件备份"></a>4.wget命令下载FTP整个目录进行文件备份</h1><p><a href="https://www.cnblogs.com/crxis/p/7072813.html" target="_blank" rel="noopener">https://www.cnblogs.com/crxis/p/7072813.html</a></p><p>使用wget下载整个FTP目录，可以用于服务器间文件传输，进行远程备份。通过限制网速，可以解决带宽限制问题。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://IP:PORT/* --ftp-user=xxx --ftp-password=xxx -r -c</span><br><span class="line">-r参数就是用来目录下载的</span><br><span class="line">-c是使用断点续传，服务器要支持</span><br><span class="line">或</span><br><span class="line">wget -r -nH -P/webapp/ ftp://172.31.1.1:21/* --ftp-user=ftpuser --ftp-password=ftpuser</span><br><span class="line">星号*必须有</span><br><span class="line">-r参数就是用来目录下载的，递归下载</span><br><span class="line">-nH不包含主机文件夹</span><br><span class="line">-P 下载到指定目录</span><br><span class="line"></span><br><span class="line">wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg19/* -r -c</span><br><span class="line">wget ftp://ftp.broadinstitute.org/bundle/hg19/* --ftp-user=gsapubftp-anonymous -r -c</span><br><span class="line"></span><br><span class="line">wget -r -c -nH ftp://ftp.broadinstitute.org:21/bundle/hg19/* --ftp-user=gsapubftp-anonymous</span><br></pre></td></tr></table></figure><p>可以写到shell脚本中，后台执行。</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/shwget ftp://IP:PORT/* --ftp-user=xxx --ftp-password=xxx -r -c</span></span><br></pre></td></tr></table></figure><p>保存为wget.sh，并赋予可执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> chmod +x wget.sh</span></span><br></pre></td></tr></table></figure><p>后台执行这个脚本，在命令后加“&amp;”即可</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./wget<span class="selector-class">.sh</span> &amp;</span><br></pre></td></tr></table></figure><p>如果希望把执行结果输出到文件的话，前面加 nohup，默认输出文件名为 nohup.out</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./wget<span class="selector-class">.sh</span> &amp;</span><br></pre></td></tr></table></figure><p>如果要限速的话，加上—limit-rate=100k，代表限速100k，-c是断点续传的意思。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>杂项</title>
      <link href="/hexo/2017/08/27/2017-08-27_tricks/"/>
      <url>/hexo/2017/08/27/2017-08-27_tricks/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h4 id="有道词典不能联网"><a href="#有道词典不能联网" class="headerlink" title="有道词典不能联网"></a>有道词典不能联网</h4><p>internet选项-连接-局域网设置-去掉复选框-确定</p><h4 id="outlook-2000-配置阿里云邮箱"><a href="#outlook-2000-配置阿里云邮箱" class="headerlink" title="outlook 2000 配置阿里云邮箱"></a>outlook 2000 配置阿里云邮箱</h4><p><a href="https://mailhelp.aliyun.com/freemail/detail.vm?spm=0.0.0.0.PNc2PM&amp;knoId=5869795" target="_blank" rel="noopener">教程</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">文件-添加账号-电子邮件账号-手动配置服务器...-Internet电子邮件</span><br><span class="line">用户信息</span><br><span class="line">您的姓名：输入您的姓名，作为外发邮件<span class="string">"发件人："</span>字段中显示的内容。</span><br><span class="line">电子邮件地址：输入您的完整邮箱的地址 (如 name@aliyun<span class="selector-class">.com</span> )</span><br><span class="line">服务器信息</span><br><span class="line">接收邮件服务器 (POP3)：pop3<span class="selector-class">.aliyun</span><span class="selector-class">.com</span></span><br><span class="line">邮件发送服务器 (SMTP)：smtp<span class="selector-class">.aliyun</span><span class="selector-class">.com</span></span><br><span class="line">登录信息</span><br><span class="line">用户名：输入您完整的邮箱地址</span><br><span class="line">密码：输入您在阿里云web邮箱设置的客户端密码。</span><br><span class="line">下一步-[发送服务器]勾选 使用与接收邮件服务器相同的设置；[高级]勾选 在服务器上保留邮件副本-测试账户是否生效</span><br></pre></td></tr></table></figure><h4 id="系统office路径"><a href="#系统office路径" class="headerlink" title="系统office路径"></a>系统office路径</h4><blockquote><p>C:\Program Files (x86)\Microsoft Office\root\Office16\POWERPNT.EXE</p></blockquote><h4 id="使用Redirector插件解决googleapis公共库加载的问题"><a href="#使用Redirector插件解决googleapis公共库加载的问题" class="headerlink" title="使用Redirector插件解决googleapis公共库加载的问题"></a>使用Redirector插件解决googleapis公共库加载的问题</h4><p>Redirector目前支持Firefox、Chrome、Opera三款浏览器，可以前往对应浏览器的应用市场下载安装相应版本</p><p>熟悉Github的用户也可以直接前往项目主页上找下载链接:<a href="https://github.com/einaregilsson/Redirector" target="_blank" rel="noopener">einaregilsson/Redirector</a></p><p>直接浏览“使用Import来导入设置”一节来使用导入来进行设置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"createdBy"</span>: <span class="string">"Redirector v3.1.0"</span>,</span><br><span class="line">    <span class="attr">"createdAt"</span>: <span class="string">"2016-09-10T13:29:02.323Z"</span>,</span><br><span class="line">    <span class="attr">"redirects"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"description"</span>: <span class="string">"Ajax"</span>,</span><br><span class="line">            <span class="attr">"exampleUrl"</span>: <span class="string">"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"</span>,</span><br><span class="line">            <span class="attr">"exampleResult"</span>: <span class="string">"http://ajax.lug.ustc.edu.cn/ajax/libs/jquery/1.7.1/jquery.min.js"</span>,</span><br><span class="line">            <span class="attr">"error"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"includePattern"</span>: <span class="string">"*ajax.googleapis.com*"</span>,</span><br><span class="line">            <span class="attr">"excludePattern"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="attr">"redirectUrl"</span>: <span class="string">"$1ajax.lug.ustc.edu.cn$2"</span>,</span><br><span class="line">            <span class="attr">"patternType"</span>: <span class="string">"W"</span>,</span><br><span class="line">            <span class="attr">"processMatches"</span>: <span class="string">"noProcessing"</span>,</span><br><span class="line">            <span class="attr">"disabled"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"appliesTo"</span>: [</span><br><span class="line">                <span class="string">"script"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Markdown博客技巧汇总</title>
      <link href="/hexo/2017/08/27/2017-08-27_markdown_tricks/"/>
      <url>/hexo/2017/08/27/2017-08-27_markdown_tricks/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="1-用”-gt-“实现以下功能"><a href="#1-用”-gt-“实现以下功能" class="headerlink" title="1. 用”&gt; “实现以下功能"></a>1. 用”&gt; “实现以下功能</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 纤云弄巧，飞星传恨，银汉迢迢暗度。</span></span><br><span class="line">  金风玉露一相逢，便胜却、人间无数。</span><br><span class="line">  柔情似水，佳期如梦，忍顾鹊桥归路。</span><br><span class="line">  两情若是久长时，又岂在、朝朝暮暮。</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>纤云弄巧，飞星传恨，银汉迢迢暗度。<br>  金风玉露一相逢，便胜却、人间无数。<br>  柔情似水，佳期如梦，忍顾鹊桥归路。<br>  两情若是久长时，又岂在、朝朝暮暮。   </p></blockquote><h3 id="2-用三个以上空格即可实现背景宽框"><a href="#2-用三个以上空格即可实现背景宽框" class="headerlink" title="2. 用三个以上空格即可实现背景宽框"></a>2. 用三个以上空格即可实现背景宽框</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">纤云弄巧，飞星传恨，银汉迢迢暗度。</span><br><span class="line">金风玉露一相逢，便胜却、人间无数。</span><br><span class="line">柔情似水，佳期如梦，忍顾鹊桥归路。</span><br><span class="line">两情若是久长时，又岂在、朝朝暮暮。</span><br></pre></td></tr></table></figure><p>效果：   </p><pre><code>纤云弄巧，飞星传恨，银汉迢迢暗度。金风玉露一相逢，便胜却、人间无数。柔情似水，佳期如梦，忍顾鹊桥归路。两情若是久长时，又岂在、朝朝暮暮。</code></pre><h3 id="3-Markdonw-文字颜色"><a href="#3-Markdonw-文字颜色" class="headerlink" title="3. Markdonw 文字颜色"></a>3. Markdonw 文字颜色</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><font color="red">内容</font><h3 id="4-HTML注释标签"><a href="#4-HTML注释标签" class="headerlink" title="4. HTML注释标签"></a>4. HTML注释标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTML <span class="comment">&lt;!-- XXXX --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-插入公式"><a href="#5-插入公式" class="headerlink" title="5. 插入公式"></a>5. 插入公式</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">add</span> &lt;script <span class="attribute">type</span>=<span class="string">"text/javascript"</span> <span class="attribute">src</span>=<span class="string">"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">行间公式： $$\<span class="attribute">lambda</span>=n \ast p, <span class="attribute">p</span>=\frac&#123;l&#125;&#123;s&#125;$$</span><br><span class="line">行内公式： \\(\lambda\\)</span><br></pre></td></tr></table></figure><h3 id="6-插入图片"><a href="#6-插入图片" class="headerlink" title="6. 插入图片"></a>6. 插入图片</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>xxx.github.io<span class="regexp">/DocumentGit/img</span><span class="regexp">/xx.jpg</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>上线测试</title>
      <link href="/hexo/2017/08/27/2017-08-27-Online%20test/"/>
      <url>/hexo/2017/08/27/2017-08-27-Online%20test/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>今天终于把blog搭建好了，mark and test</p><p>于2017年8月27日 周日</p>]]></content>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>序言</title>
      <link href="/hexo/2017/07/16/2017-07-16-preface/"/>
      <url>/hexo/2017/07/16/2017-07-16-preface/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="无一事马虎-无一日懈怠"><a href="#无一事马虎-无一日懈怠" class="headerlink" title="无一事马虎 无一日懈怠"></a>无一事马虎 无一日懈怠</h1><p>好句，若真如此，生命无光，况凡人不可为之。可作凡人的目标，努力逼近它吧。</p><hr><p>最近几年我总是在寻找一个网络服务系统，能使我平生所得所获的有一个的去处，方便以后某个时间点来寻他们。在IT的世界里，我一直认为重要的是一种知识概念和印象，以前学过做过，过一段时间还是得从头再来，再做一遍与第一遍的时间相差无几， 假如你没有保存的话…..</p><p>Hogo的出现使最熟练R的人感到喜悦。看到那么多Hugo Themes，于是我开始挑啊，总告诉我有适合我的，却总是找不到它。我想找的它是一个目录列表+时间，目录列表的字体不要太大，这样能方便我快速的定位和找回过去的记忆，也省去频繁的翻页。</p><p><a href="https://yihui.name/" target="_blank" rel="noopener">Yihui</a> 是我在打开Bioinformatics世界之初就偶然关注到的一个[学者]  OR  [IT工程师]  OR   [老师]，偶然和必然等意，Bioinformatics and Statistics的天下谁人不识君。他的页面和他的博客样式是我梦寐以求，就是它了。我没办法自己修改主题，我也不屑再去学，睡觉的时间宝贵，不要总是学，什么都学，学来学去魂消了。</p><p>Yihui 吟的几句词也还不失雅趣，不舍删留此处，可算小读怡情。以后的拾遗也填在这里吧….</p><blockquote><p>深情似海，问相逢初度，是何年纪？依约而今还记取，不是前生夙世。放学花前，题诗石上，春水园亭里。逢君一笑，人间无此欢喜。<br>无奈苍狗看云，红羊数劫，惘惘休提起。客气渐多真气少，汩没心灵何已。千古声名，百年担负，事事违初意。心头阁住，儿时那种情味。</p></blockquote><p>END</p><p>于 2017年7月16日</p>]]></content>
      
      
    </entry>
    
  
  
</search>
